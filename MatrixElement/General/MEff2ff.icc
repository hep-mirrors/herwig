// -*- C++ -*-
//
// MEff2ff.icc is a part of Herwig++ - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig++ is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the MEff2ff class.
//

namespace Herwig {

inline MEff2ff::MEff2ff() : theScaV(0), theVecV(0), theTenV(0) {}

inline IBPtr MEff2ff::clone() const {
  return new_ptr(*this);
}

inline IBPtr MEff2ff::fullclone() const {
  return new_ptr(*this);
}

inline void MEff2ff::doinit() throw(InitException) {
  GeneralHardME::doinit();
  size_t ndiags = numberOfDiags();
  theScaV.resize(ndiags);
  theVecV.resize(ndiags);
  theTenV.resize(ndiags);
  for(size_t ix = 0;ix < ndiags; ++ix) {
    HPDiagram current = getProcessInfo()[ix];
    tcPDPtr offshell = current.intermediate;
    if(offshell->iSpin() == PDT::Spin0) {
      FFSVertexPtr vert1 = dynamic_ptr_cast<FFSVertexPtr>
	(current.vertices.first);
      FFSVertexPtr vert2 = dynamic_ptr_cast<FFSVertexPtr>
	(current.vertices.second);
      theScaV[ix] = make_pair(vert1, vert2);
    }
    else if(offshell->iSpin() == PDT::Spin1) {
      FFVVertexPtr vert1 = dynamic_ptr_cast<FFVVertexPtr>
	(current.vertices.first);
      FFVVertexPtr vert2 = dynamic_ptr_cast<FFVVertexPtr>
	(current.vertices.second);
      theVecV[ix] = make_pair(vert1, vert2);
    }
    else if(offshell->iSpin() == PDT::Spin2) {
      FFTVertexPtr vert1 = dynamic_ptr_cast<FFTVertexPtr>
	(current.vertices.first);
      FFTVertexPtr vert2 = dynamic_ptr_cast<FFTVertexPtr>
	(current.vertices.second);
      theTenV[ix] = make_pair(vert1, vert2);
    }
  }
}
  

}
