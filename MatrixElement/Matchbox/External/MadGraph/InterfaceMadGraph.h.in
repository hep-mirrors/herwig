#ifndef InterfaceMadGraph_H
#define InterfaceMadGraph_H
#include <complex>
#include <vector>
#include "MGout/src/HelAmps_sm.h"
using namespace std;

void MG_InitProc(int);
void MG_Calculate_wavefunctions(const int perm[], const int hel[],int numofmom,int str);
void MG_SetMomenta(vector < double * > p,int numofmom,int str);
std::complex<double> MG_Jamp(int T ,int str);
int MG_NCol(int str);
void MG_vxxxxx(double p[4],std::complex<double> vc[6]);
int MG_Colour(int str, int i,int j);

#include "MGout/SubProcesses/PN_Sigma_sm_xxprocessxx/PN_Sigma_sm_xxprocessxx.h"

using namespace std; 
class InterfaceMadGraph{

public:
  static  void calculate_wavefunctions(const int perm[], const int hel[],int str);

  static  void setMomenta(vector<double*> p,int str);

  static  std::complex<double> jamp(int T ,int str);

  static  void initProc(int str);

  static  int NCol(int str);

  static int colorstring(int str,int i,int j);

  static PN_Sigma_sm_xxprocessxx    xxprocessxx     ;
                                                                
  InterfaceMadGraph(){};
  virtual ~InterfaceMadGraph(){};
};
#endif /* InterfaceMadGraph_H */
