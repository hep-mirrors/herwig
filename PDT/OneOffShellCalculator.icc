// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the OneOffShellCalculator class.
//

namespace Herwig {
using namespace ThePEG;

inline OneOffShellCalculator::OneOffShellCalculator() {}

inline OneOffShellCalculator::OneOffShellCalculator(const OneOffShellCalculator & x)
  : WidthCalculatorBase(x),_themass(x._themass),_minmass(x._minmass),
    _onshellwidth(x._onshellwidth), _massptr(x._massptr) 
{
  _Integrator = new GaussianIntegral(0.,1.);
  _integrand  = new 
    OneOffShellIntegrand(this,_massptr->nominalMass()*_massptr->nominalMass(),
			 _massptr->nominalWidth()*_massptr->nominalMass());
}

inline OneOffShellCalculator::OneOffShellCalculator(int inloc,
						    WidthCalculatorBasePtr inwidth, 
						    GenericMassGeneratorPtr inmass,
						    Energy inmin)
{
  _themass=inloc;
  _minmass=inmin;
  _onshellwidth=inwidth;
  _massptr=inmass;
  _Integrator = new GaussianIntegral(0.,1.);
  _integrand  = new 
    OneOffShellIntegrand(this,_massptr->nominalMass()*_massptr->nominalMass(),
			 _massptr->nominalWidth()*_massptr->nominalMass());
}

inline void OneOffShellCalculator::resetMass(int id,Energy inmass) 
{_onshellwidth->resetMass(id,inmass);}

inline Energy OneOffShellCalculator::getMass(const int id) const
{return _onshellwidth->getMass(id);}

inline Energy OneOffShellCalculator::otherMass(const int id) const
 {return _onshellwidth->otherMass(id);}
// the integrand
inline  Energy OneOffShellCalculator::dGamma(Energy min)
{
  _onshellwidth->resetMass(_themass,min);
  double wgt = (_onshellwidth->partialWidth(_scale));
  wgt*=(_massptr->weight(min));
  return wgt;
}
}
