// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the UEDF1F0P1Vertex class.
//

namespace Herwig {
namespace Helicity {

inline IBPtr UEDF1F0P1Vertex::clone() const {
  return new_ptr(*this);
}

inline IBPtr UEDF1F0P1Vertex::fullclone() const {
  return new_ptr(*this);
}

inline void UEDF1F0P1Vertex::doinit() throw(InitException) {
  FFVVertex::doinit();
  theUEDBase = dynamic_ptr_cast<tUEDBasePtr>(generator()->standardModel());
  if(!theUEDBase)
    throw InitException() << "UEDF1F0P1Vertex::doinit() - The pointer to "
			  << "the UEDBase object is null!"
			  << Exception::runerror;
  theSinThetaW = theUEDBase->sin2ThetaW();
  theCosThetaW = sqrt(1. - theSinThetaW);
  theSinThetaW = sqrt(theSinThetaW);
  theCosThetaOne = sqrt(1. - sqr(theUEDBase->sinThetaN(1)));
  theSinWmOne = theSinThetaW*theCosThetaOne -
    theCosThetaW*theUEDBase->sinThetaN(1);
  orderInGs(0);
  orderInGem(1);
}


}
}
