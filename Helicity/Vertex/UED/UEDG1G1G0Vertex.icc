// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the UEDG1G1G0Vertex class.
//

namespace Herwig {
namespace Helicity {

inline UEDG1G1G0Vertex::UEDG1G1G0Vertex() {
  vector<int> kkg1(1, 5100021);
  setList(kkg1, kkg1, vector<int>(1, 21));
}

inline IBPtr UEDG1G1G0Vertex::clone() const {
  return new_ptr(*this);
}

inline IBPtr UEDG1G1G0Vertex::fullclone() const {
  return new_ptr(*this);
}

inline void UEDG1G1G0Vertex::doinit() throw(InitException) {
  VVVVertex::doinit();
  theUEDBase = dynamic_ptr_cast<tUEDBasePtr>(generator()->standardModel());
  if(!theUEDBase)
    throw InitException() << "UEDG1G1G0Vertex::doinit() - The pointer to "
			  << "the UEDBase object is null!"
			  << Exception::runerror;
  orderInGs(1);
  orderInGem(0);
}

}
}
