// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the UEDZ0H1H1Vertex class.
//

namespace Herwig {
namespace Helicity {

inline UEDZ0H1H1Vertex::UEDZ0H1H1Vertex() : theSinThetaW(0.), theCosThetaW(0.),
					    theCosTheta2W(0.), theMw2(0.), 
					    theR2(0.), theq2Last(0.), 
					    theCoupLast(0.) {
  setList(vector<int>(1, 23), vector<int>(1, 5100037), 
	  vector<int>(1, -5100037));
}

inline IBPtr UEDZ0H1H1Vertex::clone() const {
  return new_ptr(*this);
}

inline IBPtr UEDZ0H1H1Vertex::fullclone() const {
  return new_ptr(*this);
}

inline void UEDZ0H1H1Vertex::doinit() throw(InitException) {
  VSSVertex::doinit();
  theUEDBase = dynamic_ptr_cast<tUEDBasePtr>(generator()->standardModel());
  if(!theUEDBase)
    throw InitException() << "UEDZ0H1H1Vertex::doinit() - The pointer to "
			  << "the UEDBase object is null!"
			  << Exception::runerror;
  theSinThetaW = theUEDBase->sin2ThetaW();
  theCosThetaW = sqrt(1. - theSinThetaW);
  theCosTheta2W = 1. - 2.*theSinThetaW;
  theSinThetaW = sqrt(theSinThetaW);
  theMw2 = sqr(getParticleData(24)->mass());
  theR2 = sqr(theUEDBase->compactRadius());

  orderInGs(0);
  orderInGem(1);
}


}
}
