// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the GeneralSVVVertex class.
//

namespace Herwig {
namespace Helicity {
using namespace ThePEG;
    
inline GeneralSVVVertex::GeneralSVVVertex() {
  setNpoint(3);
  setSpin(1,3,3);
  _a00 = 1.;_a11 = 0.;
  _a12 = 0.;_a21 = 0.;
  _a22 = 0.;_aEp = 0.;
  setName(GeneralSVV);
}

//Access tensor Coefficients
inline Complex GeneralSVVVertex::a00() const {return _a00;}
inline Complex GeneralSVVVertex::a11() const {return _a11;}
inline Complex GeneralSVVVertex::a12() const {return _a12;}
inline Complex GeneralSVVVertex::a21() const {return _a21;}
inline Complex GeneralSVVVertex::a22() const {return _a22;}
inline Complex GeneralSVVVertex::aEp() const {return _aEp;}
    
//Set tensor coefficients
inline void GeneralSVVVertex::a00(const Complex & val) {_a00 = val;}
inline void GeneralSVVVertex::a11(const Complex & val) {_a11 = val;}  
inline void GeneralSVVVertex::a12(const Complex & val) {_a12 = val;}
inline void GeneralSVVVertex::a21(const Complex & val) {_a21 = val;}    
inline void GeneralSVVVertex::a22(const Complex & val) {_a22 = val;}
inline void GeneralSVVVertex::aEp(const Complex & val) {_aEp = val;}
 
}
}
