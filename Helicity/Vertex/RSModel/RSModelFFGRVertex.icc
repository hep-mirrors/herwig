// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the RSModelFFGRVertex class.
//

namespace Herwig {
namespace Helicity{
using namespace ThePEG;

inline RSModelFFGRVertex::RSModelFFGRVertex() 
{
  // PDG codes for the particles
  vector<int> first,second,third;
  // the quarks
  for(unsigned int ix=1;ix<7;++ix)
    {first.push_back(-ix);second.push_back(ix);third.push_back(39);}
  // the leptons
  for(unsigned int ix=11;ix<17;++ix)
    {first.push_back(-ix);second.push_back(ix);third.push_back(39);}
  setList(first,second,third);
  _theKappa=0.;
}

inline RSModelFFGRVertex::RSModelFFGRVertex(const RSModelFFGRVertex & x)
  : FFTVertex(x), _theModel(x._theModel), _theKappa(x._theKappa) {}

inline IBPtr RSModelFFGRVertex::clone() const {
  return new_ptr(*this);
}

inline IBPtr RSModelFFGRVertex::fullclone() const {
  return new_ptr(*this);
}

inline void RSModelFFGRVertex::doinit() throw(InitException) {
  FFTVertex::doinit();
  Ptr<Herwig::RSModel>::transient_const_pointer 
    hwRS=dynamic_ptr_cast<Ptr<Herwig::RSModel>::transient_const_pointer>(_theModel);
  if(hwRS){_theKappa=2./hwRS->lambda_pi();}
  else{throw InitException();}
}

}
}
