#! /usr/bin/env python

## --------------------
## Herwig-Parallel
## --------------------
## Author: Daniel Rauch
## Date:   25 Feb 2015
## --------------------

import os
import sys
import time
import signal
from subprocess import call
from optparse import OptionParser


### ------------
### catch Ctrl+C
### ------------
signal.signal(signal.SIGINT, lambda x,y: exit())


### ------------
### main program
### ------------
def main():

  # setup command line options & parameters
  parser = OptionParser(usage="%prog [options] runname")
  parser.add_option("-c", "--no-consistency-checks", action="store_false", dest="consistency_checks", default=True, help="do not display consistency checks [default: display consistency checks]")
  parser.add_option("-i", "--interval", dest="interval", default="15", help="number of seconds between status updates [default: %default]")
  parser.add_option("-l", "--no-job-list", action="store_false", dest="job_list", default=True, help="do not display status of individual jobs [default: display list with job statuses]")
  parser.add_option("-o", "--no-file-output", action="store_false", dest="file_output", default=True, help="do not output status information into file [default: output status information into file]")
  parser.add_option("-r", "--no-run-info", action="store_false", dest="run_info", default=True, help="do not display run information [default: display run information]")
  parser.add_option("-s", "--no-summary", action="store_false", dest="summary", default=True, help="no not display summary [default: display summary]")
  opts, args = parser.parse_args()

  if len(args) <> 1:
    sys.stderr.write("Must specify an unambiguous name of the parallel run whose status is to be given!\n")
    sys.exit(1)

  run_name = args[0].strip('/')

  # get path where herwig-parallel scripts are located (in order to not be dependent on their inclusion in the PATH environment variable)
  path = os.path.dirname(os.path.realpath(sys.argv[0]))

  while True:
    call("echo -en '\ec'", shell=True)
    call(path+"/herwig-parallel-status " \
      + ("" if opts.consistency_checks else "-c ") \
      + ("" if opts.job_list else "-l ") \
      + ("" if opts.file_output else "-o ") \
      + ("" if opts.run_info else "-r ") \
      + ("" if opts.summary else "-s ") \
      + run_name, shell=True)
    time.sleep(int(opts.interval))


### ------------------------------------------
### remove '^C' outpt when exiting with Ctrl+C
### ------------------------------------------
def exit():
  sys.stderr.write("\r\033[K")
  sys.exit(1)


### -----------------
### call main program
### -----------------
if __name__ == '__main__':
  main()
