// -*- C++ -*-

// (C) 2007-2009 Simon Plaetzer -- sp@particle.uni-karlsruhe.de

namespace Analysis2 {

inline Histogram2Output::Histogram2Output()
  : _prefix(""), _mctitle(""), _out() {}

inline Histogram2Output::Histogram2Output(const Histogram2Output & x)
  : Interfaced(x), _prefix(x._prefix), _mctitle(x._mctitle), _out() {}

inline IBPtr Histogram2Output::clone() const {
  return new_ptr(*this);
}

inline IBPtr Histogram2Output::fullclone() const {
  return new_ptr(*this);
}

inline string Histogram2Output::prefix () const {
  return _prefix;
}

inline string Histogram2Output::mctitle () const {
  return _mctitle;
}

inline void Histogram2Output::initialize () {
  
}

inline void Histogram2Output::finalize () {
  
}

// If needed, insert default implementations of virtual function defined
// in the InterfacedBase class here (using ThePEG-interfaced-impl in Emacs).

inline void Histogram2Output::dofinish() {
  Interfaced::dofinish();
  finalize();
}

inline void Histogram2Output::doinitrun() {
  Interfaced::doinitrun();
  initialize();
}

inline PersistentOStream& operator << (PersistentOStream& os, const Histogram2Options& options) {
  os << options.plotFlags << options.channelFlags << options.title
     << options.datatitle << options.xlabel << options.ylabel << options.differential;
  return os;
}

inline PersistentIStream& operator >> (PersistentIStream& is, Histogram2Options& options) {
  is >> options.plotFlags >> options.channelFlags >> options.title
     >> options.datatitle >> options.xlabel >> options.ylabel >> options.differential;
  return is;
}


}
