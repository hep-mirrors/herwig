// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the PTVeto class.
//

namespace Herwig {

inline PTVeto::PTVeto() : ShowerVeto(ShowerVetoType::Emission) {}

inline PTVeto::PTVeto(const PTVeto & x)
  : Herwig::ShowerVeto(x), _maxPT(x._maxPT), _minPT(x._minPT),
    _vetoTimelike(x._vetoTimelike), _vetoSpacelike(x._vetoSpacelike),
    _vetoDecay(x._vetoDecay) {}

inline IBPtr PTVeto::clone() const {
  return new_ptr(*this);
}

inline IBPtr PTVeto::fullclone() const {
  return new_ptr(*this);
}


  inline bool PTVeto::vetoTimeLike (tcShowerProgenitorPtr, tcShowerParticlePtr, const Branching& b) {
    return _vetoTimelike && b.kinematics->pT() > _maxPT && b.kinematics->pT() < _minPT;
  }

  inline bool PTVeto::vetoSpaceLike (tcShowerProgenitorPtr, tcShowerParticlePtr, const Branching& b) {
    return _vetoSpacelike && b.kinematics->pT() > _maxPT && b.kinematics->pT() < _minPT;
  }

// If needed, insert default implementations of virtual function defined
// in the InterfacedBase class here (using ThePEG-interfaced-impl in Emacs).


}
