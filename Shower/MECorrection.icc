// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the MECorrection class.
//

namespace Herwig {


inline MECorrection::MECorrection() 
  : _correctionMode( 1 )
{}


inline MECorrection::MECorrection(const MECorrection & x)
  : Pythia7::HandlerBase(x), 
  _correctionMode( x._correctionMode ),
  _hardProcessME( x._hardProcessME ),
  _hardProcessPlusJetME( x._hardProcessPlusJetME ),
  _decayProcessME( x._decayProcessME ),
  _decayProcessPlusJetME( x._decayProcessPlusJetME )
{}


inline bool MECorrection::isMECorrectionON() const {
  return _correctionMode;
}


inline MEPtr MECorrection::hardProcessME() const {
  return _hardProcessME;
}

inline MEPtr MECorrection::hardProcessPlusJetME() const {
  return _hardProcessPlusJetME;
}


inline DecayerPtr MECorrection::decayProcessME() const {
  return _decayProcessME;
}

inline DecayerPtr MECorrection::decayProcessPlusJetME() const {
  return _decayProcessPlusJetME;
}

//--------------------------------------------------------------

inline void MECorrection::doupdate() throw(UpdateException) {
  Pythia7::HandlerBase::doupdate();
  // First update base class.
  bool redo = touched();
  // redo if touched.
//  UpdateChecker::check(aDependentMember, redo);
  // Update referenced objects on which this depends redo is set to true
  // if the dependent object is touched.
//  for_each(ContainerOfDependencies, UpdateChecker(redo));
  // Update a container of references.
//  for_each(MapOfDependencies, UpdateMapChecker(redo));
  // Update a map of references.
  if ( !redo ) return;
  // return if nothing has been touched. Otherwise do the actual update.
//  touch()
  // Touch if anything has changed.
}

inline void MECorrection::doinit() throw(InitException) {
  Pythia7::HandlerBase::doinit();
}

inline void MECorrection::dofinish() {
  Pythia7::HandlerBase::dofinish();
}

inline void MECorrection::rebind(const TranslationMap & trans)
  throw(RebindException) {
  // dummy = trans.translate(dummy);
  Pythia7::HandlerBase::rebind(trans);
}

inline IVector MECorrection::getReferences() {
  IVector ret = Pythia7::HandlerBase::getReferences();
  // ret.push_back(dummy);
  return ret;
}

}
