// -*- C++ -*-
//
// ClusteringGuide.icc is a part of Herwig++ - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig++ is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the ClusteringGuide class.
//

namespace Herwig {

inline ClusteringGuide::ClusteringGuide () {}

inline ClusteringGuide::ClusteringGuide (const vector<tClustererPtr>& clusterers,
					 const vector<tCKKWHardProcessPtr>& processes,
					 Partitioner * partitioner,
					 const vector<ClusteringParticleData>& particles,
					 tClusteringGuidePtr parent)
  : Interfaced(),
    _clusterers(clusterers),
    _hardProcesses(processes),
    _partitioner(partitioner),
    _particles(particles),
    _parent(parent)
{}

inline vector<tClustererPtr> ClusteringGuide::clusterers() const {
  return _clusterers;
}

inline vector<tCKKWHardProcessPtr> ClusteringGuide::processes() const {
  return _hardProcesses;
}

inline vector<ClusteringParticleData> ClusteringGuide::particles() const {
  return _particles;
}

inline bool ClusteringGuide::reachedHard () const {
  return _clusterings.empty();
}

inline tCKKWHardProcessPtr ClusteringGuide::hard () const {
  if (reachedHard())
    return _hard;
  else
    return tCKKWHardProcessPtr ();
}

inline void ClusteringGuide::hard (tCKKWHardProcessPtr h) {
  _hard = h;
}

inline tClusteringGuidePtr ClusteringGuide::parent () const {
  return _parent;
}

map<ClusteringConfigurationPtr,ClusteringGuidePtr> ClusteringGuide::clusterings () const {
  return _clusterings;
}

inline IBPtr ClusteringGuide::clone() const {
  return new_ptr(*this);
}

inline IBPtr ClusteringGuide::fullclone() const {
  return new_ptr(*this);
}

inline void ClusteringGuide::eventGenerator(tEGPtr eg) {
  setGenerator(eg);
}

}
