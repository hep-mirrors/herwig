mkdir /Defaults/Handlers/Shower
cd /Defaults/Handlers/Shower
library HwShower.so
#
# create the main objects
#
create Herwig++::ShowerVariables theShowerVariables
create Herwig++::SplittingGenerator theSplittingGenerator
create Herwig++::ShowerAlphaQCD theShowerAlphaQCD
create Herwig++::ShowerAlphaQED theShowerAlphaQED
create Herwig++::ShowerHandler stdShowerHandler
create Herwig++::Evolver theEvolver
create Herwig++::PartnerFinder thePartnerFinder
create Herwig++::KinematicsReconstructor theKinematicsReconstructor
#
# Set the pointers to the relevant objects 
#
set stdShowerHandler:Evolver theEvolver
set theEvolver:PartnerFinder thePartnerFinder
set theEvolver:KinematicsReconstructor theKinematicsReconstructor
set theEvolver:ShowerVariables theShowerVariables
set theEvolver:SplittingGenerator theSplittingGenerator
#
#  create the matrix element corrections
# 
# vector boson decay
create Herwig++::VectorBosonQQBarMECorrection qqbarg
insert theEvolver:MECorrection 0 qqbarg
set qqbarg:Coupling theShowerAlphaQCD
# top decay
create Herwig++::TopDecayMECorrection TopME
insert theEvolver:MECorrection 1  TopME
set TopME:Coupling theShowerAlphaQCD
# drell-yan
create Herwig++::DrellYanMECorrection DrellYan
insert theEvolver:MECorrection 2  DrellYan
set DrellYan:Coupling theShowerAlphaQCD
#
# a few default values
#
set theShowerVariables:MECorrMode 1
set theShowerVariables:CutoffQCDMassScale 0.75*GeV
set theShowerVariables:CutoffQEDMassScale 0.75*GeV
set theShowerVariables:CutoffEWKMassScale 91.0*GeV
set theShowerVariables:cutoffKinScale 2.3*GeV
set theShowerAlphaQCD:ScaleFactor 1.0
set theShowerAlphaQED:ScaleFactor 1.0
set theShowerAlphaQCD:NPAlphaS 2
set theShowerAlphaQCD:Qmin 0.630882*GeV
set theShowerAlphaQCD:NumberOfLoops 3
set theShowerAlphaQCD:InputOption 1
#
#############################################################
# read this as a 2x3 matrix with FSR/ISR being the rows 
# and QCD/QED/EWK as columns
#
# these switch a whole column on and off
set theSplittingGenerator:OnOffQCDinteractionMode 1
set theSplittingGenerator:OnOffQEDinteractionMode 0
set theSplittingGenerator:OnOffEWKinteractionMode 0

# these switch a whole row on and off
set theSplittingGenerator:OnOffISRMode 1
set theSplittingGenerator:OnOffFSRMode 1

# these switches are for each entry individually
# if their column or row is 0, they are not looked at
set theSplittingGenerator:OnOffISR_QCDMode 1
set theSplittingGenerator:OnOffISR_QEDMode 1
set theSplittingGenerator:OnOffISR_EWKMode 1

set theSplittingGenerator:OnOffFSR_QCDMode 1
set theSplittingGenerator:OnOffFSR_QEDMode 1
set theSplittingGenerator:OnOffFSR_EWKMode 1
#
###########################################################
#
# Lets set up all the splittings
create Herwig++::QtoQGSplitFn theQtoQGSplitFn
create Herwig++::GtoQQbarSplitFn theGtoQQbarSplitFn
create Herwig++::GtoGGSplitFn theGtoGGSplitFn
create Herwig++::QtoQGammaSplitFn theQtoQGammaSplitFn
create Herwig++::QtoGQSplitFn theQtoGQSplitFn
#
# Now the Sudakovs
create Herwig++::SudakovFormFactor QtoQGSudakov
set QtoQGSudakov:SplittingFunction theQtoQGSplitFn
set QtoQGSudakov:Alpha theShowerAlphaQCD
set QtoQGSudakov:PDFmax 1.9
create Herwig++::SudakovFormFactor GtoGGSudakov
set GtoGGSudakov:SplittingFunction theGtoGGSplitFn
set GtoGGSudakov:Alpha theShowerAlphaQCD
set GtoGGSudakov:PDFmax 1.0
create Herwig++::SudakovFormFactor GtoQQbarSudakov
set GtoQQbarSudakov:SplittingFunction theGtoQQbarSplitFn
set GtoQQbarSudakov:Alpha theShowerAlphaQCD
set GtoQQbarSudakov:PDFmax 3000.0
create Herwig++::SudakovFormFactor QtoQGammaSudakov
set QtoQGammaSudakov:SplittingFunction theQtoQGammaSplitFn
set QtoQGammaSudakov:Alpha theShowerAlphaQED
set QtoQGammaSudakov:PDFmax 1.0
create Herwig++::SudakovFormFactor QtoGQSudakov
set QtoGQSudakov:SplittingFunction theQtoGQSplitFn
set QtoGQSudakov:Alpha theShowerAlphaQCD
set QtoGQSudakov:PDFmax 300.0

#
# Now add the final splittings
#
set theSplittingGenerator:AddFinalSplitting u->u,g; QtoQGSudakov
set theSplittingGenerator:AddFinalSplitting d->d,g; QtoQGSudakov
set theSplittingGenerator:AddFinalSplitting s->s,g; QtoQGSudakov
set theSplittingGenerator:AddFinalSplitting c->c,g; QtoQGSudakov
set theSplittingGenerator:AddFinalSplitting b->b,g; QtoQGSudakov
set theSplittingGenerator:AddFinalSplitting t->t,g; QtoQGSudakov
#
set theSplittingGenerator:AddFinalSplitting g->g,g; GtoGGSudakov
#
set theSplittingGenerator:AddFinalSplitting g->u,ubar; GtoQQbarSudakov
set theSplittingGenerator:AddFinalSplitting g->d,dbar; GtoQQbarSudakov
set theSplittingGenerator:AddFinalSplitting g->s,sbar; GtoQQbarSudakov
set theSplittingGenerator:AddFinalSplitting g->c,cbar; GtoQQbarSudakov
set theSplittingGenerator:AddFinalSplitting g->b,bbar; GtoQQbarSudakov
set theSplittingGenerator:AddFinalSplitting g->t,tbar; GtoQQbarSudakov
#
set theSplittingGenerator:AddFinalSplitting u->u,gamma; QtoQGammaSudakov
set theSplittingGenerator:AddFinalSplitting d->d,gamma; QtoQGammaSudakov
set theSplittingGenerator:AddFinalSplitting s->s,gamma; QtoQGammaSudakov
set theSplittingGenerator:AddFinalSplitting c->c,gamma; QtoQGammaSudakov
set theSplittingGenerator:AddFinalSplitting b->b,gamma; QtoQGammaSudakov
set theSplittingGenerator:AddFinalSplitting t->t,gamma; QtoQGammaSudakov
#
# Now lets add the initial splittings. Remember the form a->b,c; means
# that particle a is the particle given and we backward branch to
# particle b which is initial state and particle c which is final state
#
set theSplittingGenerator:AddInitialSplitting u->u,g; QtoQGSudakov
set theSplittingGenerator:AddInitialSplitting d->d,g; QtoQGSudakov
set theSplittingGenerator:AddInitialSplitting s->s,g; QtoQGSudakov
set theSplittingGenerator:AddInitialSplitting c->c,g; QtoQGSudakov
set theSplittingGenerator:AddInitialSplitting b->b,g; QtoQGSudakov
set theSplittingGenerator:AddInitialSplitting t->t,g; QtoQGSudakov
#
set theSplittingGenerator:AddInitialSplitting g->g,g; GtoGGSudakov
#
set theSplittingGenerator:AddInitialSplitting g->u,ubar; GtoQQbarSudakov
set theSplittingGenerator:AddInitialSplitting g->d,dbar; GtoQQbarSudakov
set theSplittingGenerator:AddInitialSplitting g->s,sbar; GtoQQbarSudakov
set theSplittingGenerator:AddInitialSplitting g->c,cbar; GtoQQbarSudakov
set theSplittingGenerator:AddInitialSplitting g->b,bbar; GtoQQbarSudakov
set theSplittingGenerator:AddInitialSplitting g->t,tbar; GtoQQbarSudakov
#
set theSplittingGenerator:AddInitialSplitting u->g,u; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting d->g,d; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting s->g,s; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting c->g,c; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting b->g,b; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting t->g,t; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting ubar->g,ubar; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting dbar->g,dbar; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting sbar->g,sbar; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting cbar->g,cbar; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting bbar->g,bbar; QtoGQSudakov
set theSplittingGenerator:AddInitialSplitting tbar->g,tbar; QtoGQSudakov
#
#set theSplittingGenerator:AddInitialSplitting u->u,gamma; QtoQGammaSudakov
#set theSplittingGenerator:AddInitialSplitting d->d,gamma; QtoQGammaSudakov
#set theSplittingGenerator:AddInitialSplitting s->s,gamma; QtoQGammaSudakov
#set theSplittingGenerator:AddInitialSplitting c->c,gamma; QtoQGammaSudakov
#set theSplittingGenerator:AddInitialSplitting b->b,gamma; QtoQGammaSudakov
#set theSplittingGenerator:AddInitialSplitting t->t,gamma; QtoQGammaSudakov
