###################################################################
#
# This is the main repository setup file for Herwig++. 
#
# It is read using the 'Herwig++ init' command.
#
# The 'Herwig++ read' step allows additional configuration
# instructions to be read from a run-specific file, to modify the 
# default values. (We provide LEP.in, ILC.in, LHC.in and TVT.in as 
# examples) 
#
# You will not need to change any settings here.
# Any modifications can be made in your own input files.
#
###################################################################



###################################################################
# The repository contains its own internal directory structure to
# keep track of created objects. (This is entirely independent of 
# the file system)
###################################################################

# Make all the directories in the Repository we need
mkdir /Defaults
mkdir /Defaults/Matchers
mkdir /Defaults/Particles
mkdir /Defaults/Partons
mkdir /Defaults/Handlers
mkdir /Defaults/Generators

###################################################################
# The 'read' command includes external files in place, to reduce
# clutter. You can also use it for blocks of settings you're likely 
# to use again and again.
###################################################################

# read in the particle lists and physics model
# old model
read OldParticles.in
# new model
# read Particles.in
read Model.in

#####################################################################
# The 'create' command creates an object in the repository from
# a C++ class. The arguments are (1) the C++ class name, (2) your
# chosen repository name, and optionally, (3) the library name where
# the class can be found.
#
# Created objects are _not_ automatically associated to a run. They 
# need to be assigned to it using a chain of 'set' or 'insert' 
# commands (see below).
#####################################################################

# the default random number generator
create ThePEG::StandardRandom /Defaults/Random

# the default phase space sampler
create ThePEG::ACDCSampler /Defaults/ACDCSampler ACDCSampler.so
set /Defaults/ACDCSampler:Margin  1.1

# Create NoPDF and RemnantHandlers
cd /Defaults/Partons
create ThePEG::NoRemnants NoRemnants
create Herwig::BaryonRemnants BaryonRemnants HwMRST.so
create ThePEG::LeptonLeptonRemnant LeptonRemnants LeptonLeptonRemnant.so
create ThePEG::NoPDF NoPDF

#####################################################################
# Objects in the repository are influenced through 'interfaces'.
# The most important ones can be found in these files, and the 
# doxygen documentation provides complete lists.
#
# To set an interface to a new value, use the 'set' command:
#  set object:interface value
#
# Note that only repository names can be used here. You must 'create'
# objects before you can use them in a 'set' command
#####################################################################
# NoPDF's remnant handler should be NoRemnants
set NoPDF:RemnantHandler NoRemnants

# Make particle extractors
cd /Defaults/Handlers
# Herwig's extractor
create Herwig::PartonExtractor StandardExtractor
set StandardExtractor:NoPDF /Defaults/Partons/NoPDF
set StandardExtractor:FlatSHatY 1

# ThePEG's extractor
create ThePEG::PartonExtractor EEExtractor
set EEExtractor:NoPDF /Defaults/Partons/NoPDF
cp StandardExtractor QCDExtractor

# insert the matrix elements
read MatrixElements.in

# insert the Herwig++ specific defaults
cd /Defaults
read Shower.in
read Hadronization.in
read Decays.in
read PDF.in
read QED.in

#######################################################################
# The EventHandler is the most important object in a run. It 
# (directly or indirectly) owns most of the objects that have been 
# created up to now.
#
# Below we create one handler for LEP and one for LHC.
#
# Try to understand the following few lines (also look at the external
# .in files if you can't find the 'create' line for an object).
#
# If you need to make modifications, it's best to make them in your
# own input file (for the 'Herwig++ read' step) and not here.
#######################################################################

cd /Defaults/Handlers
# Create LEPHandler
create ThePEG::StandardEventHandler LEPHandler 
create ThePEG::FixedCMSLuminosity FixedLEPLuminosity FixedCMSLuminosity.so
set FixedLEPLuminosity:Energy 91.2
set LEPHandler:LuminosityFunction FixedLEPLuminosity
insert LEPHandler:SubProcessHandlers[0] /Defaults/Handlers/EE2QQ
set LEPHandler:BeamA /Defaults/Particles/e-
set LEPHandler:BeamB /Defaults/Particles/e+
set LEPHandler:Sampler /Defaults/ACDCSampler
set LEPHandler:CascadeHandler /Defaults/Handlers/Shower/stdShowerHandler
set LEPHandler:HadronizationHandler /Defaults/Handlers/Hadronization/Cluster/stdCluHadHandler
set LEPHandler:DecayHandler /Defaults/Handlers/DecayHandler
#
# uncomment to get QED radiation off Z decay products in hard process
#insert LEPHandler:PostSubProcessHandlers[0] /Defaults/Handlers/QED/QEDRadiationHandler


# Create LHCHandler
create ThePEG::StandardEventHandler LHCHandler 
create ThePEG::FixedCMSLuminosity FixedLHCLuminosity
set FixedLHCLuminosity:Energy 14000.0
set LHCHandler:LuminosityFunction FixedLHCLuminosity
insert LHCHandler:SubProcessHandlers[0] /Defaults/Handlers/SimpleQCD
set LHCHandler:BeamA /Defaults/Particles/p+
set LHCHandler:BeamB /Defaults/Particles/p+
set LHCHandler:Sampler /Defaults/ACDCSampler
set LHCHandler:BinStrategy 2
set LHCHandler:CascadeHandler /Defaults/Handlers/Shower/stdShowerHandler
set LHCHandler:HadronizationHandler /Defaults/Handlers/Hadronization/Cluster/stdCluHadHandler
set LHCHandler:DecayHandler /Defaults/Handlers/DecayHandler
#
# uncomment to get QED radiation off W/Z decay products in hard process
#insert LHCHandler:PostSubProcessHandlers[0] /Defaults/Handlers/QED/QEDRadiationHandler

#####################################
# Set the cuts on the hard process
#####################################
cd /Defaults/Generators
read Cuts.in


#################################################################
# Finally, the EventGenerator objects are responsible 
# for the run. They tie together an EventHandler on the one side
# with a physics model (Feynman rules, etc) and random number
# generator on the other.
#
# In your own input files, it will be this EventGenerator object
# that will be called with the 'run' command to start the event 
# generation (see LEP.in, LHC.in, TVT.in or LHC.in for examples)
#################################################################
# Now the LEPGenerator
create ThePEG::EventGenerator LEPGenerator
set LEPGenerator:RandomNumberGenerator /Defaults/Random
set LEPGenerator:StandardModelParameters /Defaults/Model
set LEPGenerator:EventHandler /Defaults/Handlers/LEPHandler
set LEPGenerator:EventHandler:Cuts EECuts

# And the LHCGenerator
create ThePEG::EventGenerator LHCGenerator
set LHCGenerator:RandomNumberGenerator /Defaults/Random
set LHCGenerator:StandardModelParameters /Defaults/Model
set LHCGenerator:EventHandler /Defaults/Handlers/LHCHandler
set LHCGenerator:EventHandler:Cuts QCDCuts

##########################################
# include some default analysis handlers
##########################################
read Analysis.in

