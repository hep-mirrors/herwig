#!/usr/bin/env python
import sys, time, re
import subprocess


chisq_pattern = re.compile('^Chi Square = ([\d.]*) for (\d*) degrees')


def untimed_call(command, outfile=file('/dev/null')):
    retval = subprocess.call(command, shell=True, stdout=outfile)
    if retval != 0:
        raise Exception

def timed_call(command, outfile=file('/dev/null')):
    t0 = time.time()   
    retval = subprocess.call(command, shell=True, stdout=outfile)
    dt = time.time() - t0
    if retval != 0:
        raise Exception
    return dt

def write_data_file(filename,value):
    text = 'YVALUE = ' + str(value) + '\n'
    f = open(filename,'w')
    f.write(text)
    f.close()


class Run:
    def readcmd(self):
        return herwig + ' read ' + self.name + '.in -r ' + rpopath

    def runcmd(self):
        return herwig + ' run ' + self.name + '.run -N' + str(self.num_events)

    def __init__(self,name,N):
        self.name = name
        self.num_events = N
        self.runtime = None
        self.chisq = None
        print self.readcmd()
        untimed_call(self.readcmd())

    def run(self):
        if self.runtime is None:
            print self.runcmd()
            self.runtime = timed_call(self.runcmd())
        return self.runtime

    def write_data(self):
        if self.runtime is not None:
            write_data_file(self.name+'.time',self.runtime)
        if self.chisq is not None:
            write_data_file(self.name+'.chisq',self.chisq)

    def calc_chisq(self):
        if self.runtime is not None:
            sumchi = sumdof = 0
            logfile = open(self.name+'.log','r')
            for line in logfile:
                m = chisq_pattern.match(line)
                if m:
                    sumchi += float(m.group(1))
                    sumdof += int(m.group(2))
            logfile.close()
        if sumdof is not 0:
            self.chisq = sumchi / sumdof


if len(sys.argv) != 3:
    print >>sys.stderr,'Expected two arguments'
    print >>sys.stderr,'Usage:',sys.argv[0],'<path to herwig> <path to rpo>'
    sys.exit(1)

herwig = sys.argv[1]
rpopath = sys.argv[2]

N = 10000

runlist = [ Run('CHISQ',10*N), 
            Run('LHC',N/2), 
            Run('DIS',20*N), 
            Run('ILC',5*N),
            Run('TVT',2*N) ]

for r in runlist:
    r.run()

    if r.name is 'CHISQ':
        r.calc_chisq()

    r.write_data()
