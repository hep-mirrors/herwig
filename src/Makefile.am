bin_PROGRAMS = Herwig++
Herwig___SOURCES = Herwig++.cc
Herwig___LDFLAGS = -export-dynamic $(THEPEGLDFLAGS)
Herwig___LDADD = $(top_builddir)/lib/libHerwig.la $(THEPEGLIB) -ldl

DOTINFILES = Analysis.in Decays.in Hadronization.in \
HerwigDefaults.in OldParticles.in Particles.in \
OldDecays.in Model.in RSModelVertices.in \
Shower.in StandardModelVertices.in \
UnderlyingEvent.in \
MatrixElements.in QED.in Cuts.in \
ILC.in LEP.in LHC.in TVT.in \
bosons.in diquarks.in leptons.in \
quarks.in mesons.in baryons.in \
quark_decays.in baryon_decays.in \
boson_decays.in lepton_decays.in \
meson_decays.in decayers.in

dist_pkgdata_DATA = $(DOTINFILES)

## PDF.in not in dist, since it is generated by configure
pkgdata_DATA = PDF.in Makefile-UserModules

########## SVN version string. Only use in cc files! ####################
EXTRA_DIST = versionstring.h.in
BUILT_SOURCES = versionstring.h
if USE_SVNVERSION # # # # # #
version:
	@svnversion -n $(top_srcdir) > version.tmp.new

version.tmp: version
	@if ! diff -q version.tmp{.new,}; then mv -f version.tmp{.new,}; fi

versionstring.h: version.tmp versionstring.h.in
	@echo "creating versionstring.h"
	@sed s%@HERWIGVERSIONSTRING@%"$(PACKAGE_STRING) `cd $(top_srcdir); svn info | grep URL | sed s@.*herwig/@@` r`cat version.tmp`"% \
	  $(srcdir)/versionstring.h.in > versionstring.h
else # # # # # # # # # # # # #
versionstring.h:
	@echo "creating versionstring.h"
	@sed s%@HERWIGVERSIONSTRING@%"$(PACKAGE_STRING)"% \
	  $(srcdir)/versionstring.h.in > versionstring.h
	@touch versionstring.h
endif # # # # # # # # # # # # # 
########################################################################

CLEANFILES = HerwigDefaults.rpo \
  LEP.run LEP.log LEP.out \
  LHC.run LHC.log LHC.out \
  TVT.run TVT.log TVT.out \
  ILC.run ILC.log ILC.out \
  valgrind-init.log valgrind-read.log \
  valgrind-run.log versionstring.h version.tmp \
  version.tmp.new

## checking targets ##

HerwigDefaults.rpo: $(DOTINFILES) PDF.in Herwig++ $(top_builddir)/lib/*.so
	./Herwig++ init -L$(top_builddir)/lib --exitonerror

check-local: check-LHC check-LEP check-TVT check-ILC

check-LEP: HerwigDefaults.rpo
	./Herwig++ read LEP.in --exitonerror
	./Herwig++ run  LEP.run -N100 --exitonerror

check-ILC: HerwigDefaults.rpo
	./Herwig++ read ILC.in --exitonerror
	./Herwig++ run  ILC.run -N100 --exitonerror

check-LHC: HerwigDefaults.rpo
	./Herwig++ read LHC.in --exitonerror
	./Herwig++ run  LHC.run -N100 --exitonerror

check-TVT: HerwigDefaults.rpo
	./Herwig++ read TVT.in --exitonerror
	./Herwig++ run  TVT.run -N100 --exitonerror

## valgrind targets ##

VALGRIND=valgrind --leak-check=full --num-callers=25 --freelist-vol=100000000 --leak-resolution=med --trace-children=yes

valgrind: valgrind-init valgrind-read valgrind-run

valgrind-init:
	$(VALGRIND) ./Herwig++ init -L$(top_builddir)/lib &> /tmp/valgrind-init.log
valgrind-read:
	$(VALGRIND) ./Herwig++ read LHC.in &> /tmp/valgrind-read.log
valgrind-run:
	$(VALGRIND) ./Herwig++ run -N1 LHC.run &> /tmp/valgrind-run.log

## ## ## ## ## ## 

if WANT_LOCAL_PDF
install-data-hook:
	rm -f $(DESTDIR)$(pkgdatadir)/PDF.in
	sed -e s:../PDF/mrst:$(DESTDIR)$(pkgdatadir)/PDF/mrst:g \
             PDF.in > $(DESTDIR)$(pkgdatadir)/PDF.in
endif
