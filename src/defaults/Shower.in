############################################################
# Setup of default parton shower
#
# Useful switches for users are marked near the top of 
# this file.
#
# Don't edit this file directly, but reset the switches
# in your own input files!
############################################################
library HwMPI.so
library HwShower.so

mkdir /Herwig/Shower
cd /Herwig/Shower

create Herwig::ShowerHandler ShowerHandler
set ShowerHandler:MPIHandler /Herwig/UnderlyingEvent/MPIHandler
set ShowerHandler:RemDecayer /Herwig/Partons/RemnantDecayer

#####################################
# initial setup, don't change these!
#####################################
create Herwig::SplittingGenerator SplittingGenerator
create Herwig::ShowerAlphaQCD AlphaQCD
create Herwig::ShowerAlphaQED AlphaQED
create Herwig::Evolver Evolver
create Herwig::QTildeModel ShowerModel
create Herwig::QTildeFinder PartnerFinder
create Herwig::QTildeReconstructor KinematicsReconstructor
set KinematicsReconstructor:ReconstructionOption Colour

set /Herwig/Partons/RemnantDecayer:AlphaS AlphaQCD

set ShowerHandler:Evolver Evolver
set ShowerModel:PartnerFinder PartnerFinder
set ShowerModel:KinematicsReconstructor KinematicsReconstructor
set Evolver:ShowerModel ShowerModel
set Evolver:SplittingGenerator SplittingGenerator

##################################################################
# Intrinsic pT
#
# Recommended: 
# 1.9 GeV for Tevatron W/Z production.
# 2.1 GeV for LHC W/Z production at 10 TeV
# 2.2 GeV for LHC W/Z production at 14 TeV
#
# Set all parameters to 0 to disable
##################################################################
set Evolver:IntrinsicPtGaussian 1.9*GeV
set Evolver:IntrinsicPtBeta  	0
set Evolver:IntrinsicPtGamma 	0*GeV
set Evolver:IntrinsicPtIptmax   0*GeV
#############################################################
# Main control switches for the parton shower.
#############################################################
set SplittingGenerator:ISR Yes
set SplittingGenerator:FSR Yes
#############################################################


#############################################################
# End of interesting user servicable section.
#
# Anything that follows below should only be touched if you 
# know what you're doing. 
#
# Really.
#############################################################
#
#  create the matrix element corrections
# 
# vector boson decay
create Herwig::VectorBosonQQBarMECorrection qqbarg
insert ShowerModel:MECorrections 0 qqbarg
set qqbarg:Coupling AlphaQCD

# top decay
create Herwig::TopDecayMECorrection TopME
insert ShowerModel:MECorrections 1  TopME
set TopME:Coupling AlphaQCD

# drell-yan
create Herwig::DrellYanMECorrection DrellYan
insert ShowerModel:MECorrections 2  DrellYan
set DrellYan:Coupling AlphaQCD

# higgs
create Herwig::GGtoHMECorrection GGtoHME
insert ShowerModel:MECorrections 3 GGtoHME
set GGtoHME:Coupling AlphaQCD
#
#
#############################################################
#
#  create the Powheg hard emission generators
#

# create and use the Drell-yan hard emission generator
create Herwig::DrellYanHardGenerator DrellYanHardGenerator HwPowhegShower.so
set DrellYanHardGenerator:ShowerAlpha AlphaQCD
insert Evolver:HardGenerator 0 DrellYanHardGenerator

# create and use the gg->H hard emission generator
create Herwig::GGtoHHardGenerator GGtoHHardGenerator
set GGtoHHardGenerator:ShowerAlpha AlphaQCD
insert Evolver:HardGenerator 0 GGtoHHardGenerator



#
# a few default values
set Evolver:MECorrMode 1
set AlphaQCD:ScaleFactor 1.0
set AlphaQCD:NPAlphaS 2
set AlphaQCD:Qmin 0.935
set AlphaQCD:NumberOfLoops 3
set AlphaQCD:InputOption 1
set AlphaQCD:AlphaMZ 0.120
#
#
# Lets set up all the splittings
create Herwig::QtoQGSplitFn QtoQGSplitFn
create Herwig::QtoQGammaSplitFn QtoQGammaSplitFn
create Herwig::GtoQQbarSplitFn GtoQQbarSplitFn
create Herwig::GtoGGSplitFn GtoGGSplitFn
create Herwig::QtoGQSplitFn QtoGQSplitFn
#
# Now the Sudakovs
create Herwig::QTildeSudakov SudakovCommon
set SudakovCommon:Alpha AlphaQCD
set SudakovCommon:cutoffKinScale 2.650*GeV
set SudakovCommon:PDFmax 1.0

cp SudakovCommon QtoQGSudakov
set QtoQGSudakov:SplittingFunction QtoQGSplitFn
set QtoQGSudakov:PDFmax 1.9

cp SudakovCommon QtoQGammaSudakov
set QtoQGammaSudakov:SplittingFunction QtoQGammaSplitFn
set QtoQGammaSudakov:Alpha AlphaQED
set QtoQGammaSudakov:PDFmax 1.9

cp SudakovCommon GtoGGSudakov
set GtoGGSudakov:SplittingFunction GtoGGSplitFn
set GtoGGSudakov:PDFmax 2.0

cp SudakovCommon GtoQQbarSudakov
set GtoQQbarSudakov:SplittingFunction GtoQQbarSplitFn
set GtoQQbarSudakov:PDFmax 120.0

cp SudakovCommon GtobbbarSudakov
set GtobbbarSudakov:SplittingFunction GtoQQbarSplitFn
set GtobbbarSudakov:PDFmax 40000.0

cp SudakovCommon GtoccbarSudakov
set GtoccbarSudakov:SplittingFunction GtoQQbarSplitFn
set GtoccbarSudakov:PDFmax 2000.0

cp SudakovCommon QtoGQSudakov
set QtoGQSudakov:SplittingFunction QtoGQSplitFn

cp SudakovCommon utoGuSudakov
set utoGuSudakov:SplittingFunction QtoGQSplitFn
set utoGuSudakov:PDFFactor OverOneMinusZ
set utoGuSudakov:PDFmax 5.0

cp SudakovCommon dtoGdSudakov
set dtoGdSudakov:SplittingFunction QtoGQSplitFn
set dtoGdSudakov:PDFFactor OverOneMinusZ


#
# Now add the final splittings
#
do SplittingGenerator:AddFinalSplitting u->u,g; QtoQGSudakov
do SplittingGenerator:AddFinalSplitting d->d,g; QtoQGSudakov
do SplittingGenerator:AddFinalSplitting s->s,g; QtoQGSudakov
do SplittingGenerator:AddFinalSplitting c->c,g; QtoQGSudakov
do SplittingGenerator:AddFinalSplitting b->b,g; QtoQGSudakov
do SplittingGenerator:AddFinalSplitting t->t,g; QtoQGSudakov
#
do SplittingGenerator:AddFinalSplitting g->g,g; GtoGGSudakov
#
do SplittingGenerator:AddFinalSplitting g->u,ubar; GtoQQbarSudakov
do SplittingGenerator:AddFinalSplitting g->d,dbar; GtoQQbarSudakov
do SplittingGenerator:AddFinalSplitting g->s,sbar; GtoQQbarSudakov
do SplittingGenerator:AddFinalSplitting g->c,cbar; GtoccbarSudakov
do SplittingGenerator:AddFinalSplitting g->b,bbar; GtobbbarSudakov
do SplittingGenerator:AddFinalSplitting g->t,tbar; GtoQQbarSudakov
#
set SplittingGenerator:AddFinalSplitting u->u,gamma; QtoQGammaSudakov
set SplittingGenerator:AddFinalSplitting d->d,gamma; QtoQGammaSudakov
set SplittingGenerator:AddFinalSplitting s->s,gamma; QtoQGammaSudakov
set SplittingGenerator:AddFinalSplitting c->c,gamma; QtoQGammaSudakov
set SplittingGenerator:AddFinalSplitting b->b,gamma; QtoQGammaSudakov
set SplittingGenerator:AddFinalSplitting t->t,gamma; QtoQGammaSudakov

set SplittingGenerator:AddFinalSplitting e-->e-,gamma; QtoQGammaSudakov
set SplittingGenerator:AddFinalSplitting mu-->mu-,gamma; QtoQGammaSudakov
set SplittingGenerator:AddFinalSplitting tau-->tau-,gamma; QtoQGammaSudakov
#
# Now lets add the initial splittings. Remember the form a->b,c; means
# that particle a is the particle given and we backward branch to
# particle b which is initial state and particle c which is final state
#
do SplittingGenerator:AddInitialSplitting u->u,g; QtoQGSudakov
do SplittingGenerator:AddInitialSplitting d->d,g; QtoQGSudakov
do SplittingGenerator:AddInitialSplitting s->s,g; QtoQGSudakov
do SplittingGenerator:AddInitialSplitting c->c,g; QtoQGSudakov
do SplittingGenerator:AddInitialSplitting b->b,g; QtoQGSudakov
do SplittingGenerator:AddInitialSplitting t->t,g; QtoQGSudakov
set SplittingGenerator:AddInitialSplitting u->u,gamma; QtoQGammaSudakov
set SplittingGenerator:AddInitialSplitting d->d,gamma; QtoQGammaSudakov
set SplittingGenerator:AddInitialSplitting s->s,gamma; QtoQGammaSudakov
set SplittingGenerator:AddInitialSplitting c->c,gamma; QtoQGammaSudakov
set SplittingGenerator:AddInitialSplitting b->b,gamma; QtoQGammaSudakov
set SplittingGenerator:AddInitialSplitting t->t,gamma; QtoQGammaSudakov
#
do SplittingGenerator:AddInitialSplitting g->g,g; GtoGGSudakov
#
do SplittingGenerator:AddInitialSplitting g->d,dbar; GtoQQbarSudakov
do SplittingGenerator:AddInitialSplitting g->u,ubar; GtoQQbarSudakov
do SplittingGenerator:AddInitialSplitting g->s,sbar; GtoQQbarSudakov
do SplittingGenerator:AddInitialSplitting g->c,cbar; GtoccbarSudakov
do SplittingGenerator:AddInitialSplitting g->b,bbar; GtobbbarSudakov
do SplittingGenerator:AddInitialSplitting g->t,tbar; GtoQQbarSudakov
#
do SplittingGenerator:AddInitialSplitting d->g,d; dtoGdSudakov
do SplittingGenerator:AddInitialSplitting u->g,u; utoGuSudakov
do SplittingGenerator:AddInitialSplitting s->g,s; QtoGQSudakov
do SplittingGenerator:AddInitialSplitting c->g,c; QtoGQSudakov
do SplittingGenerator:AddInitialSplitting b->g,b; QtoGQSudakov
do SplittingGenerator:AddInitialSplitting t->g,t; QtoGQSudakov
do SplittingGenerator:AddInitialSplitting dbar->g,dbar; dtoGdSudakov
do SplittingGenerator:AddInitialSplitting ubar->g,ubar; utoGuSudakov
do SplittingGenerator:AddInitialSplitting sbar->g,sbar; QtoGQSudakov
do SplittingGenerator:AddInitialSplitting cbar->g,cbar; QtoGQSudakov
do SplittingGenerator:AddInitialSplitting bbar->g,bbar; QtoGQSudakov
do SplittingGenerator:AddInitialSplitting tbar->g,tbar; QtoGQSudakov
