### model (comma separated list) #####################################
#    This option allows the selection of a model for the             #
#    Feynman rules. It has to conform with one of four possible      #
#    formats:                                                        #
#                                                                    #
#    1) model=<name>                                                 #
#    2) model=<path>, <name>                                         #
#    3) model=<path>, <number>                                       #
#    4) model=FeynRules, <path>                                      #
#                                                                    #
#    Format 1) searches for the model files <name>, <name>.hh        #
#    and <name>.py in the models/ directory under the installation   #
#    path of Golem.                                                  #
#                                                                    #
#    Format 2) is similar to format 1) but <path> is used instead    #
#    of the models/ directory of the Golem installation              #
#                                                                    #
#    Format 3) expects the files func<number>.mdl, lgrng<number>.mdl,
#    prtcls<number>.mdl and vars<number>.mdl in the directory <path>.
#    These files need to be in CalcHEP/CompHEP format.               #
#                                                                    #
#    Format 4) expects files according to the new FeynRules Python   #
#    interface in the directory specified by <path>.                 #
#    (Not fully implemented yet)                                     #
#                                                                    #
######################################################################
# model=smdiag
@MODEL@

### model.options (comma separated list) #############################
#    If the model in use supports options they can be passed via this
#    property.                                                       #
#                                                                    #
#    For builtin models, the option "ewchoose"                       #
#    selects automatically the EW scheme based.                      #
#                                                                    #
######################################################################
# model.options=ewchoose

### zero (comma separated list) ######################################
#    A list of symbols that should be treated as identically         #
#    zero throughout the whole calculation. All of these             #
#    symbols must be defined by the model file.                      #
#    If you do not use built-in models, you probably                 #
#    need to overwrite the default value.                            #
#                                                                    #
#    Examples:                                                       #
#    1) # Light masses are set to zero here:                         #
#       zero=me,mU,mD,mS                                             #
#    2) # Diagonal CKM matrix:                                       #
#       zero=VUS, VUB, CVDC, CVDT, \                                 #
#            VCD, VCB, CVSU, CVST, \                                 #
#            VTD, VTS, CVBU, CVBC                                    #
#       one=  VUD,  VCS,  VTB, \                                     #
#            CVDU, CVSC, CVBT                                        #
#                                                                    #
#    See also: model, one                                            #
#                                                                    #
######################################################################
# zero=mU,mD,mS,mC,mB,me,mmu
# zero=

### one (comma separated list) #######################################
#    A list of symbols that should be treated as identically         #
#    one throughout the whole calculation. All of these              #
#    symbols must be defined by the model file.                      #
#                                                                    #
#    Example:                                                        #
#    one=gs, e                                                       #
#                                                                    #
#    See also: model, zero                                           #
#                                                                    #
######################################################################
# one=

### qgraf.options (comma separated list) #############################
#    A list of options which is passed to qgraf via the 'options' line.
#    Possible values (as of qgraf.3.1.1) are zero, one or more of:   #
#       onepi, onshell, nosigma, nosnail, notadpole, floop           #
#       topol                                                        #
#                                                                    #
#    Please, refer to the QGraf documentation for details.           #
#                                                                    #
######################################################################
# qgraf.options=onshell,notadpole,nosnail

### qgraf.verbatim (text) ############################################
#    This option allows to send verbatim lines to                    #
#    the file qgraf.dat. This can be useful if the user              #
#    wishes to put additional restricitons to the selected diagrams.
#    This option is mainly inteded for the use of the operators      #
#       rprop, iprop, chord, bridge, psum                            #
#    Note, that the use of 'vsum' might interfer with the            #
#    option qgraf.power.                                             #
#                                                                    #
#    Example:                                                        #
#    qgraf.verbatim=\                                                #
#       # no top quarks: \n\                                         #
#       true=iprop[T, 0, 0];\n\                                      #
#       # at least one Higgs:\n\                                     #
#       false=iprop[H, 0, 0];\n                                      #
#                                                                    #
#                                                                    #
#    Please, refer to the QGraf documentation for details.           #
#                                                                    #
#    See also: qgraf.options, order                                  #
#                                                                    #
######################################################################
# qgraf.verbatim=true=iprop[phim,phip,chi,H,0,0];

### qgraf.verbatim.lo (text) #########################################
#    Same as qgraf.verbatim but only applied to LO diagrams.         #
#                                                                    #
#    See also: qgraf.verbatim, qgraf.verbatim.nlo                    #
#                                                                    #
######################################################################
# qgraf.verbatim.lo=

### qgraf.verbatim.nlo (text) ########################################
#    Same as qgraf.verbatim but only applied to NLO diagrams.        #
#                                                                    #
#    See also: qgraf.verbatim, qgraf.verbatim.nlo                    #
#                                                                    #
######################################################################
# qgraf.verbatim.nlo=

### group (true/false) ###############################################
#    Flag whether or not the tree-level diagrams should be grouped   #
#    into a single file.                                             #
#                                                                    #
######################################################################
# group=True

### diagsum (true/false) #############################################
#    Flag whether or not 1-loop diagrams with the same propagators   #
#    should be summed before the algebraic reduction.                #
#                                                                    #
######################################################################
# diagsum=True

### reduction_programs (comma separated list) ########################
#         Specifies the reduction libraries which should be supported.
#                                                                    #
#         Possible values: ninja, samurai, golem95, pjfry (experimental)
#                                                                    #
#         See also reduction_interoperation, reduction_interoperation_rescue.
#                                                                    #
######################################################################
# reduction_programs=ninja,golem95
reduction_programs=@REDUCTIONPROGRAMS@

### polvec (text) ####################################################
#           Evaluate the polarisation vector                         #
#           'numerical' or 'explicit'.                               #
#                                                                    #
######################################################################
# polvec=numerical

### extensions (comma separated list) ################################
#    A list of extension names which should be activated for the     #
#    code generation.                                                #
#                                                                    #
#    Build system related extensions:                                #
#                                                                    #
#    autotools    --- use autotools to generate Makefiles            #
#    shared       --- create shared libraries (=dynamically linkable code),
#                     enabled by default with autotools extension    #
#    f77          --- in combination with the BLHA interface it generates
#                     an olp_module.f90 linkable with Fortran77      #
#                                                                    #
#    Other extensions:                                               #
#    noformopt    --- disable diagram optimization using FORM        #
#    gaugecheck   --- modify gauge boson wave functions to allow for
#                     a limited gauge check (introduces gauge*z variables)
#    customspin2prop --- replace the propagator of spin-2 particles  #
#                        with a custom function (read the manual for this).
#                                                                    #
######################################################################
# extensions=autotools 
# extensions=autotools, noformopt
extensions=autotools @FORMOPT@

### debug (comma separated list) #####################################
#    A list of debug flags.                                          #
#    Currently, the words 'lo', 'nlo' and 'all' are supported.       #
#                                                                    #
######################################################################
# debug=

### select.lo (comma separated list) #################################
#    A list of integer numbers, indicating leading order diagrams to be
#    selected. If no list is given, all diagrams are selected.       #
#    Otherwise, all diagrams not in the list are discarded.          #
#                                                                    #
#    The list may contain ranges:                                    #
#                                                                    #
#    select.lo=1,2,5:10:3, 50:53                                     #
#                                                                    #
#    which is equivalent to                                          #
#                                                                    #
#    select.lo=1,2,5,8,50,51,52,53                                   #
#                                                                    #
#    See also: select.nlo, filter.lo, filter.nlo                     #
#                                                                    #
######################################################################
# select.lo=

### select.nlo (comma separated list) ################################
#    A list of integer numbers, indicating one-loop diagrams to be selected.
#    If no list is given, all diagrams are selected.                 #
#    Otherwise, all diagrams   not in the list are discarded.        #
#                                                                    #
#    The list may contain ranges:                                    #
#                                                                    #
#    select.nlo=1,2,5:10:3, 50:53                                    #
#                                                                    #
#    which is equivalent to                                          #
#                                                                    #
#    select.nlo=1,2,5,8,50,51,52,53                                  #
#                                                                    #
#    See also: select.lo, filter.lo, filter.nlo                      #
#                                                                    #
######################################################################
# select.nlo=

### filter.lo (text) #################################################
#    A python function which provides a filter for tree diagrams.    #
#                                                                    #
#    filter.lo=lambda d: d.iprop(Z) == 1 \                           #
#       and d.vertices(Z, U, Ubar) == 0                              #
#                                                                    #
#    The following methods of the diagram class can be used:         #
#                                                                    #
#    * d.rank() = the maximum rank in Q possible for this diagram    #
#    * d.loopsize() = the number of propagators in the loop          #
#    * d.vertices(field1, field2, ...) = number of vertices          #
#        with the given fields                                       #
#    * d.loopvertices(field1, field2, ...) = number of vertices      #
#        with the given fields; only those vertices which have       #
#        at least one loop propagator attached to them               #
#    * d.iprop(field, momentum="...", twospin=..., massive=True/False,
#                                                             color=...) =
#        the number of propagators with the given properties:        #
#         - field: a field or list of fields                         #
#         - momentum: a string denoting the momentum through this propagator,
#                such as "k1+k2"                                     #
#         - twospin: two times the spin (integer number)             #
#         - massive: select only propagators with/without a non-zero mass
#         - color: one of the numbers 1, 3, -3 or 8, or a list of    #
#                  these numbers                                     #
#    * d.chord(...) = number of loop propagators with the given properties;
#        the arguments are the same as in iprop                      #
#    * d.bridge(...) = number of non-loop propagators with the given
#        properties; the arguments are the same as in iprop          #
#                                                                    #
#    See also: filter.nlo, select.lo, select.nlo                     #
#                                                                    #
######################################################################
# filter.lo=

### filter.nlo (text) ################################################
#    A python function which provides a filter for loop diagrams.    #
#                                                                    #
#    See filter.lo for more explanation.                             #
#                                                                    #
######################################################################
# filter.nlo=lambda d: not d.isScaleless()

### filter.module (text) #############################################
#    A python file of predefined functions which should be available
#    in filters.                                                     #
#                                                                    #
#    Example:                                                        #
#                                                                    #
#    filter.module=filter.py                                         #
#    filter.nlo=my_nlo_filter("vertices.txt")                        #
#    filter.lo=my_nlo_filter("vertices.txt")                         #
#                                                                    #
#    ------ filter.py -----                                          #
#                                                                    #
#    class my_nlo_filter_class:                                      #
#       def __init__(self, fname):                                   #
#          self.fields = []                                          #
#          f = open(fname, 'r')                                      #
#          for line in f.readlines():                                #
#             fields = map(lambda s: s.strip(),                      #
#                   line.split(","))                                 #
#             self.fields.append(fields)                             #
#          f.close()                                                 #
#                                                                    #
#       def __call__(self, diag):                                    #
#          for lst in self.fields:                                   #
#             if diag.vertices(*lst) > 0:                            #
#                return False                                        #
#          return True                                               #
#                                                                    #
#    ----------------------                                          #
#                                                                    #
#    See filter.lo, filter.nlo                                       #
#                                                                    #
######################################################################
# filter.module=

### renorm_beta (true/false) #########################################
#    Sets the name of the same variable in config.f90                #
#                                                                    #
#    Activates or disables beta function renormalisation             #
#                                                                    #
#    QCD only                                                        #
#                                                                    #
######################################################################
# renorm_beta=True

### renorm_mqwf (true/false) #########################################
#    Sets the name of the same variable in config.f90                #
#                                                                    #
#    Activates or disables UV countertems coming from                #
#    external massive quarks                                         #
#                                                                    #
#    QCD only                                                        #
#                                                                    #
######################################################################
# renorm_mqwf=True

### renorm_decoupling (true/false) ###################################
#    Sets the name of the same variable in config.f90                #
#                                                                    #
#    Activates or disables UV counterterms coming from               #
#    massive quark loops                                             #
#                                                                    #
#    QCD only                                                        #
#                                                                    #
######################################################################
# renorm_decoupling=True

### renorm_mqse (true/false) #########################################
#    Sets the name of the same variable in config.f90                #
#                                                                    #
#    Activates or disables the UV counterterm coming from the        #
#    massive quark propagators                                       #
#                                                                    #
#    QCD only                                                        #
#                                                                    #
######################################################################
# renorm_mqse=True

### renorm_logs (true/false) #########################################
#    Sets the name of the same variable in config.f90                #
#                                                                    #
#    Activates or disables the logarithmic finite terms              #
#    of all UV counterterms                                          #
#                                                                    #
#    QCD only                                                        #
#                                                                    #
######################################################################
# renorm_logs=True

### renorm_gamma5 (true/false) #######################################
#    Sets the same variable in config.f90                            #
#                                                                    #
#    Activates finite renormalisation for axial couplings in the     #
#    't Hooft-Veltman scheme                                         #
#                                                                    #
#    QCD only, works only with built-in model files.                 #
#                                                                    #
######################################################################
# renorm_gamma5=True

### reduction_interoperation (text) ##################################
#                                                                    #
#    Default reduction library.                                      #
#                                                                    #
#    Possible values are: ninja, samurai, golem95, pjfry (experimental)
#                                                                    #
#    Sets the same variable in config.f90. A value of '-1' lets GoSam decide
#    depending on reduction_libraries                                #
#                                                                    #
#    See common/config.f90 for details.                              #
#                                                                    #
######################################################################
# reduction_interoperation=-1

### reduction_interoperation_rescue (text) ###########################
#                                                                    #
#    Rescue reduction program.                                       #
#                                                                    #
#    Sets the same variable in config.f90. A value of '-1' lets GoSam
#    decide.                                                         #
#                                                                    #
#    See common/config.f90 for details.                              #
#                                                                    #
######################################################################
# reduction_interoperation_rescue=-1

### samurai_scalar (integer number) ##################################
#                                                                    #
#    Sets the same variable in config.f90.                           #
#                                                                    #
#    See common/config.f90 for details.                              #
#                                                                    #
######################################################################
# samurai_scalar=2

### PSP_check (true/false) ###########################################
#    Sets the same variable in config.f90                            #
#                                                                    #
#    Activates Phase-Space Point test for the full amplitude.        #
#                                                                    #
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_check=True

### PSP_rescue (true/false) ##########################################
#    Sets the same variable in config.f90                            #
#                                                                    #
#    Activates Phase-Space Point rescue based on the estimated       #
#    accuracy on the finite part. It needs PSP_check=True.           #
#    The accuracy is estimated using information on the single       #
#    pole accuracy and on the stability of the finite part           #
#    under rotation of the phase space point.                        #
#                                                                    #
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_rescue=True

### PSP_verbosity (true/false) #######################################
#    Sets the same variable in config.f90                            #
#                                                                    #
#    Sets the verbosity of the PSP_check.                            #
#    verbosity = False: no output                                    #
#    verbosity = True : bad point are written into gs_badpts.log     #
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_verbosity=False

### PSP_chk_th1 (integer number) #####################################
#    Sets the same variable in config.f90                            #
#                                                                    #
#    Threshold to activate accept the point without further          #
#    treatments. The number has to be an integer indicating the      #
#    wished minimum number of digits accuracy on the pole. For poles
#    more precise than this threshold the finite part is not checked.
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_chk_th1=8

### PSP_chk_th2 (integer number) #####################################
#    Sets the same variable in config.f90                            #
#                                                                    #
#    Threshold to declare a PSP as bad point, based of the precision
#    of the pole.  Points with precision less than this threshold are
#    directly reprocessed with the rescue system (if available), or  #
#    declared as unstable. According to the verbosity level set, such
#    points are written to a file and not used when the code is      #
#    interfaced to an external Monte Carlo using the new BLHA        #
#    standards.                                                      #
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_chk_th2=3

### PSP_chk_th3 (integer number) #####################################
#    Sets the same variable in config.f90                            #
#                                                                    #
#    Threshold to declare a PSP as bad point, based on the precision
#    of the finite part estimated with a rotation. According to the  #
#    verbosity level set, such points are written to a file and not  #
#    used when the code is interfaced to an external Monte Carlo     #
#    using the new BLHA standards.                                   #
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_chk_th3=5

### PSP_chk_kfactor (text) ###########################################
#    Sets the same variable in config.f90                            #
#                                                                    #
#    Threshold on the k-factor to perform a rotation check on the PSP. 
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_chk_kfactor=1000
PSP_chk_kfactor=10000

### PSP_chk_li1 (integer number) #####################################
#    Sets the same variable in config.f90. For loop-induced          #
#    processes, it is used instead of PSP_chk_th1.                   #
#                                                                    #
#    It is precision of the pole part (which should be zero) in      #
#    comparison to the finite part. If the pole part is at least     #
#    PSP_chk_li1 orders smaller than the finite part, the point is   #
#    accepted without any other check.                               #
#                                                                    #
#    If Samurai is used as default reduction program, this needs to  #
#    be reduced to 8.                                                #
#                                                                    #
#    The number has to be an integer.                                #
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_chk_li1=16

### PSP_chk_li2 (integer number) #####################################
#    Sets the same variable in config.f90. For loop-induced          #
#    processes, it is used instead of PSP_chk_th2.                   #
#                                                                    #
#    Threshold to declare a PSP as bad point, based of the precision
#    of the pole in comparison to the finite part. Points with       #
#    precision less than this threshold are directly reprocessed with
#    the rescue system (if available), or declared as unstable.      #
#    According to the verbosity level set, such points are written to
#    a file and not used when the code is interfaced to an external  #
#    Monte Carlo using the new BLHA standards.                       #
#                                                                    #
#    If Samurai is used as default reduction program, this needs to  #
#    be reduced to 6.                                                #
#                                                                    #
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_chk_li2=7

### PSP_chk_li3 (integer number) #####################################
#    Sets the same variable in config.f90. For loop-induced          #
#    processes, it is used instead of PSP_chk_th3.                   #
#                                                                    #
#    Threshold to declare a PSP as bad point, based on the precision
#    of the finite part estimated with a rotation. Points with       #
#    precision less than this threshold are reprocessed with the     #
#    rescue system (if available) or declared as unstable.  According
#    to the verbosity level set, such points are written to a file   #
#    and not used when the code is interfaced to an external Monte   #
#    Carlo using the new BLHA standards.                             #
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_chk_li3=6

### PSP_chk_li4 (integer number) #####################################
#    Sets the same variable in config.f90. Similar to PSP_chk_li2,   #
#    but for the rescue system (by default Golem95).                 #
#                                                                    #
#    Threshold to declare a PSP as bad point in the rescue system,   #
#    based on the precision of the pole part in comparison to the    #
#    finite part. According to the verbosity level set, such points  #
#    are written to a file and not used when the code is interfaced  #
#    to an external Monte Carlo using the new BLHA standards.        #
#                                                                    #
#    !!Works only for QCD and with built-in model files!!            #
#                                                                    #
######################################################################
# PSP_chk_li4=19

### PSP_chk_method (text) ############################################
#    This option can be used to overwrite the automatic phase-space point
#    test method enabled with PSP_check=True.                        #
#    Except in some BSM scenarios, the user does not need to change this.
#                                                                    #
#    Possible options:                                               #
#    Automatic    - chooses automatically a suitable phase-space point test
#                   method (default).                                #
#    PoleRotation - check first the pole and then rotate if necessary.
#    Rotation     - force a rotation check on every phase space point.
#    LoopInduced  - check that the pole part is zero and rotate if necessary.
#                   Needed e.g. for interferience between BSM Born and
#                   SM loop-induced virtual.                         #
#                                                                    #
######################################################################
# PSP_chk_method=Automatic


### reference-vectors (comma separated list) #########################
#    A list of reference vectors for massive and higher spin particles.
#    For vectors which are not assigned here, the program picks a    #
#    reference vector automatically.                                 #
#                                                                    #
#    Each entry of the list has to be of the form <index>:<index>    #
#                                                                    #
#    EXAMPLE                                                         #
#                                                                    #
#    in=g,u                                                          #
#    out=t,W+                                                        #
#    reference-vectors=1:2,3:4,4:3                                   #
#                                                                    #
#    In this example, the gluon (particle 1) takes the momentum k2   #
#    as reference momentum for the polarisation vector. The massive  #
#    top quark (particle 3) uses the light-cone projection l4 of the
#    W-boson as reference direction for its own momentum splitting.  #
#    Similarly, the momentum of the W-boson is split into a direction
#    l4 and one along l3.                                            #
#                                                                    #
#    If cycles are generated in the list (l3 has to be known in order
#    to determine l4 and vice versa in the above example) they must be
#    at most of length two. For the reference momenta of lightlike   #
#    gauge bosons the length of cycles does not matter, e.g.         #
#                                                                    #
#    in=g,g                                                          #
#    out=g,g                                                         #
#    reference-vectors=1:2,2:3,3:4,4:1                               #
#                                                                    #
######################################################################
# reference-vectors=

### abbrev.limit (text) ##############################################
#    Maximum number of instructions per subroutine when calculating  #
#    abbreviations, if this number is positive.                      #
#                                                                    #
######################################################################
# abbrev.limit=0

### templates (text) #################################################
#    Path pointing to the directory containing the template          #
#    files for the process. If not set, golem uses the directory     #
#    <golem_path>/templates.                                         #
#                                                                    #
#    The directory must contain a file called 'template.xml'         #
#                                                                    #
######################################################################
# templates=

### qgraf.bin (text) #################################################
#    Points to the QGraf executable.                                 #
#                                                                    #
#    Example:                                                        #
#    qgraf.bin=/home/my_user_name/bin/qgraf                          #
#                                                                    #
######################################################################
# qgraf.bin=qgraf

### form.bin (text) ##################################################
#    Points to the Form executable.                                  #
#                                                                    #
#    Examples:                                                       #
#    1) # Use TForm:                                                 #
#       form.bin=tform                                               #
#    2) # Use non-standard location:                                 #
#       form.bin=/home/my_user_name/bin/form                         #
#                                                                    #
######################################################################
# form.bin=tform

### form.threads (integer number) ####################################
#    Number of Form threads.                                         #
#                                                                    #
#    Example:                                                        #
#    form.threads=4                                                  #
#    runs tform, the parallel version of FORM, on 4 cores.           #
#                                                                    #
######################################################################
# form.threads=2

### form.tempdir (text) ##############################################
#    Temporary directory for Form. Should point to a directory       #
#    on a local disk.                                                #
#                                                                    #
#    Examples:                                                       #
#    form.tempdir=/tmp                                               #
#    form.tempdir=/scratch                                           #
#                                                                    #
######################################################################
# form.tempdir=
form.tempdir=@FORMTEMPDIR@

### form.workspace (integer number) ##################################
#    Size of the heap (in megabytes) used by FORM.                   #
#                                                                    #
#    Example (for machines with <= 2GB RAM):                         #
#    form.workspace=100                                              #
#    set WorkSpace to 100M in FORM via form.set file.                #
#                                                                    #
######################################################################
# form.workspace=1000

### haggies.bin (text) ###############################################
#    Points to the Haggies executable.                               #
#    Haggies is used to transform the expressions of the diagrams    #
#    into optimized Fortran90 programs. It can be obtained from      #
#       http://www.nikhef.nl/~thomasr/download.php                   #
#                                                                    #
#    Examples:                                                       #
#       1) haggies.bin=/home/my_user_name/bin/haggies                #
#       2) haggies.bin=/usr/bin/java -Xmx50m -jar ./haggies.jar      #
#                                                                    #
######################################################################
# haggies.bin=/usr/bin/java -jar ./haggies.jar 

### fc.bin (text) ####################################################
#    Denotes the executable file of the Fortran90 compiler.          #
#                                                                    #
######################################################################
# fc.bin=/usr/bin/gfortran

### python.bin (text) ################################################
#    Denotes the executable file of Python                           #
#                                                                    #
######################################################################
# python.bin=python

### r2 (text) ########################################################
#    The algorithm how to treat the R2 term:                         #
#                                                                    #
#    implicit    -- mu^2 terms are kept in the numerator and reduced
#                   at runtime                                       #
#    explicit    -- mu^2 terms are reduced analytically              #
#    off         -- all mu^2 terms are set to zero                   #
#                                                                    #
######################################################################
# r2=explicit

### symmetries (comma separated list) ################################
#    Specifies the symmetries of the amplitude.                      #
#                                                                    #
#    This information is used when the list of helicities is generated.
#                                                                    #
#    Possible values are:                                            #
#                                                                    #
#    * flavour    -- no flavour changing interactions                #
#             When calculating the list of helicities, fermion lines
#        of PDGs 1-6 are assumed not to mix.                         #
#                                                                    #
#    * family     -- flavour changing only within families           #
#             When calculating the list of helicities, fermion lines
#        of PDGs 1-6 are assumed to mix only within families,        #
#        i.e. a quark line connecting a up with a down quark would   #
#        be considered, while up-bottom is not.                      #
#    * lepton     -- means for leptons what 'flavour' means for quarks
#    * generation -- means for leptons what 'family' means for quarks
#    * parity     -- the amplitude is invariant under parity tranformation.
#                    === Parity is not implemented yet.              #
#    * <n>=<h>    -- restriction of particle helicities,             #
#             e.g. 1=-, 2=+ specifies helicities of particles 1 and 2
#    * %<n>=<h>   -- restriction by PDG code,                        #
#             e.g. %23=+- specifies the helicity of all Z-bosons to be
#             '+' and '-' only (no '0' polarisation).                #
#                                                                    #
#             %<n> refers to both +n and -n                          #
#             %+<n> refers to +n only                                #
#             %-<n> refers to -n only                                #
#                                                                    #
######################################################################
# symmetries=family,generation

# samurai.fcflags=-I@GOSAMCONTRIBPREFIX@/include/gosam-contrib
# samurai.ldflags=-L@GOSAMCONTRIBLIBS@ -lgolem -lsamurai -lavh_olo -lqcdloop -lff
# golem95.fcflags=-I@GOSAMCONTRIBPREFIX@/include/gosam-contrib
# golem95.ldflags=-L@GOSAMCONTRIBLIBS@ -lgolem -lsamurai -lavh_olo -lqcdloop -lff
# ninja.fcflags=-I@GOSAMCONTRIBPREFIX@/include/gosam-contrib
# ninja.ldflags=-L@GOSAMCONTRIBLIBS@ -lninja

