<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>index</name>
    <title>ThePEG Reference Manual</title>
    <filename>index</filename>
    <docanchor file="index">ThePEGIntroduction</docanchor>
  </compound>
  <compound kind="file">
    <name>ACDCGenConfig.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/ACDC/</path>
    <filename>ACDCGenConfig_8h</filename>
    <namespace>ACDCGenerator</namespace>
    <member kind="typedef">
      <type>short</type>
      <name>DimType</name>
      <anchorfile>namespaceACDCGenerator.html</anchorfile>
      <anchor>626ba08a6f6baf01f63b63307965c6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; double &gt;</type>
      <name>DVector</name>
      <anchorfile>namespaceACDCGenerator.html</anchorfile>
      <anchor>ae64652d001153f2e1e242cb5af0a163</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>algorithm.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/Config/</path>
    <filename>algorithm_8h</filename>
    <includes id="ThePEG_8h" name="ThePEG.h" local="yes" imported="no">ThePEG/Config/ThePEG.h</includes>
    <namespace>ThePEG</namespace>
    <class kind="struct">ThePEG::IteratorRange</class>
    <member kind="function">
      <type>IteratorRange&lt; typename Container::iterator &gt;</type>
      <name>range</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>624578a24dfb147e93f3b54f4d149d17</anchor>
      <arglist>(Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange&lt; typename Container::const_iterator &gt;</type>
      <name>range</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c2b2c23f832d4695a5d5f03e78c84c59</anchor>
      <arglist>(const Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange&lt; typename Container::reverse_iterator &gt;</type>
      <name>rrange</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>94a42e8a953bf1da50188d4c20c25e1f</anchor>
      <arglist>(Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange&lt; typename Container::const_reverse_iterator &gt;</type>
      <name>rrange</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c36099ba7287773aa01dccdd5a688aac</anchor>
      <arglist>(const Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>FNC</type>
      <name>for_each</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c311365abf6b1db62576027033ccbf6c</anchor>
      <arglist>(IteratorRange&lt; Iterator &gt; r, FNC f)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>find</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3884a55fb5a6bb6770db50b00e9498a2</anchor>
      <arglist>(IteratorRange&lt; Iterator &gt; r, const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>find_if</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6772faec8686e48e1d9345759965dc60</anchor>
      <arglist>(IteratorRange&lt; Iterator &gt; r, Pred p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>093b6311dc925dd426264f0a73e0fefc</anchor>
      <arglist>(IteratorRange&lt; Iterator &gt; r, const T &amp;oval, const T &amp;nval)</arglist>
    </member>
    <member kind="function">
      <type>FNC</type>
      <name>for_each</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e0ef254b4d57b7b967f6024dfeb04113</anchor>
      <arglist>(Cont &amp;c, FNC f)</arglist>
    </member>
    <member kind="function">
      <type>FNC</type>
      <name>for_each</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c173a979d8b320c48ef6f740848fe0d6</anchor>
      <arglist>(const Cont &amp;c, FNC f)</arglist>
    </member>
    <member kind="function">
      <type>Cont::iterator</type>
      <name>find</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>183ff4864c35502e22c56d691f3c97dc</anchor>
      <arglist>(Cont &amp;c, const Type &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Cont::const_iterator</type>
      <name>find</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b1a8b5c6238ce86f01b3565c9ba9a818</anchor>
      <arglist>(const Cont &amp;c, const Type &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Cont::iterator</type>
      <name>find_if</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>da0934638f6402c4172d048564c1b715</anchor>
      <arglist>(Cont &amp;c, const Pred &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Cont::const_iterator</type>
      <name>find_if</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0ebb27b2c0e14011ed91e9edc8e209b4</anchor>
      <arglist>(const Cont &amp;c, const Pred &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b08b06cba54c7c852bf8dc1b41622135</anchor>
      <arglist>(Cont &amp;c, const T &amp;oval, const T &amp;nval)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Containers.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/Config/</path>
    <filename>Containers_8h</filename>
    <namespace>ThePEG</namespace>
    <member kind="typedef">
      <type>set&lt; PDPtr, less&lt; PDPtr &gt;, Allocator&lt; PDPtr &gt; &gt;</type>
      <name>ParticleDataSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a1700a899c9d0fddb8044303139a1dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PDPtr &gt;</type>
      <name>PDVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1d720f2d1fbcb8fb3924d0820bcdd3f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; cPDPtr &gt;</type>
      <name>cPDVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f183f29010cb64498a402fd5eb650044</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tPDPtr &gt;</type>
      <name>tPDVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>820e17796ec1aecca4db1ae8f6f1ac6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tcPDPtr &gt;</type>
      <name>tcPDVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e960840ea888ba45627b84d1c3a5dcfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; PMPtr, less&lt; PMPtr &gt;, Allocator&lt; PMPtr &gt; &gt;</type>
      <name>MatcherSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>29fa27b3cf4fb3289a2faa1d7676d2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; DMPtr, less&lt; DMPtr &gt;, Allocator&lt; DMPtr &gt; &gt;</type>
      <name>DecayModeSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0a75ec1ced80c3bd61c47ea7ce7eae40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; IBPtr, less&lt; IBPtr &gt;, Allocator&lt; IBPtr &gt; &gt;</type>
      <name>ObjectSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b99dd76174d74fa4a1d07fa54f0508af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; IBPtr, less&lt; IBPtr &gt;, Allocator&lt; IBPtr &gt; &gt;</type>
      <name>DependencySet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e66d164ede5d4be1dc08f3bd6494bbfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; long, PDPtr, less&lt; long &gt;, Allocator&lt; std::pair&lt; long const, PDPtr &gt; &gt; &gt;</type>
      <name>ParticleMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e99b41f65a3087d40dda71ed5cb35437</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; string, IBPtr, less&lt; string &gt;, Allocator&lt; std::pair&lt; string const, IBPtr &gt; &gt; &gt;</type>
      <name>ObjectMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>427f58f67f40b840a3a606d519e26c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; IBPtr, DependencySet, less&lt; IBPtr &gt;, Allocator&lt; std::pair&lt; IBPtr const, DependencySet &gt; &gt; &gt;</type>
      <name>DependencyMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8ff0e4e06626999490e51a12a62d1a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; IBPtr &gt;</type>
      <name>IVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e110bd975b76c619ca2af32cf7ab12a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; cIBPtr &gt;</type>
      <name>CIVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>095808e71f718b8e1a561350ca30f37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PPtr &gt;</type>
      <name>ParticleVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a01ae5d763b3b76942bb7b80e5a182f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PPtr &gt;</type>
      <name>PVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b061629adb6fa545317c4af272a0b599</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; cPPtr &gt;</type>
      <name>cPVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>83b122243ff4a5954304e977227fa334</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tPPtr &gt;</type>
      <name>tPVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>82ac9680b5e88529c2ffecfccc85bd5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tcPPtr &gt;</type>
      <name>tcPVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e5913d91aef4c24595e6bcf61e0c0c8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; string, const InterfaceBase *, less&lt; string &gt;, Allocator&lt; std::pair&lt; string const, const InterfaceBase * &gt; &gt; &gt;</type>
      <name>InterfaceMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0248f1c8c6e5f7083d06efeaf9abad61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Rebinder&lt; InterfacedBase &gt;</type>
      <name>TranslationMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c91ede12a1d16a762a83f029519a867c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; string, EGPtr, less&lt; string &gt;, Allocator&lt; std::pair&lt; string const, EGPtr &gt; &gt; &gt;</type>
      <name>GeneratorMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c48666f37e54dd84b2f771e0f84aabc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; AnaPtr &gt;</type>
      <name>AnalysisVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>418681392acf8eedff9cb7913ca2fa68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; PDPtr, PDPtr &gt;</type>
      <name>PDPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cba2b8743eaf2bc45047dfef42c5b897</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; cPDPtr, cPDPtr &gt;</type>
      <name>cPDPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3d73fe4fbb248b38f4eb60ad9a9243c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tPDPtr, tPDPtr &gt;</type>
      <name>tPDPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4976dec8dc0f56840d4ccccf6524c716</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tcPDPtr, tcPDPtr &gt;</type>
      <name>tcPDPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9096b22f5636d09d908df8269d790009</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; PPtr, PPtr &gt;</type>
      <name>PPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>074f012a304ba7abb69387889511532b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; cPPtr, cPPtr &gt;</type>
      <name>cPPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c7338279c31397055f8794301aede35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tPPtr, tPPtr &gt;</type>
      <name>tPPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>98ed1f22f1be3e6fa098e975d45cf397</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tcPPtr, tcPPtr &gt;</type>
      <name>tcPPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>940ce1547c69c2a8c3e7c5661be0bea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Interval&lt; Energy2 &gt;</type>
      <name>SInterval</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8adf6989c8e3f646f6a952751a3c7d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; SInterval &gt;</type>
      <name>SIntervalVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b12a3d74103dad52d6ba401244abd168</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tPDPair &gt;</type>
      <name>tPartonPairVec</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ad4480ba40e72769c8c987cd52e34e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tColinePtr, tColinePtr &gt;</type>
      <name>tColinePair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a685e23d169ab33bce8df578d7fcc5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; tDMPtr, less&lt; tDMPtr &gt;, Allocator&lt; tDMPtr &gt; &gt;</type>
      <name>DecaySet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>71bd1bb2380f133365a67249dd38f54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; string, less&lt; string &gt;, Allocator&lt; string &gt; &gt;</type>
      <name>StringSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4ed3019e1af895121c06cf5de36818eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; Energy &gt;</type>
      <name>EnergyVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a4de20fd8d3944bbdc1cc1e5d13d4483</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; EIPtr &gt;</type>
      <name>EIVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0149a559d9f1217b6e70dbcbfc805229</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; double &gt;</type>
      <name>DVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b1428c846136050edaf52f604acdde55</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; double, double &gt;</type>
      <name>DPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c0888a32049c5b023e71830de77f849c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>vector&lt; T &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ea164afff21f78a50486bb4c79860ec6</anchor>
      <arglist>(vector&lt; T &gt; &amp;tv, const U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; T &gt; &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>433a1f97f01804d6230ac949e1d6d740</anchor>
      <arglist>(vector&lt; T &gt; &amp;tv, U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>stack&lt; T &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c85641f1d65f947bbb7e582454e721b4</anchor>
      <arglist>(stack&lt; T &gt; &amp;ts, const U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>stack&lt; T &gt; &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d060e5febb9e59eb2e0a9c9b6cc48032</anchor>
      <arglist>(stack&lt; T &gt; &amp;ts, U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>deque&lt; T &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e2fbd7b9624cc9dd85ea1789133533eb</anchor>
      <arglist>(deque&lt; T &gt; &amp;td, const U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>deque&lt; T &gt; &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a1c204e45478c56aa108c7802fb64fcf</anchor>
      <arglist>(deque&lt; T &gt; &amp;td, U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>set&lt; T &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b6f8137e7bf80d03b6acd880a7ba2861</anchor>
      <arglist>(set&lt; T &gt; &amp;ts, const U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1f8fb616cd12785e0fb022ba09b7e20f</anchor>
      <arglist>(OStream &amp;os, const vector&lt; T, Alloc &gt; &amp;v, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6d8dc42abd6550768376ea8d1fbce5d3</anchor>
      <arglist>(IStream &amp;is, vector&lt; T, Alloc &gt; &amp;v, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>db5b1aef787c50754fbb853f900cc356</anchor>
      <arglist>(OStream &amp;os, const set&lt; T, CMP, A &gt; &amp;s, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>07288d8b84f051ae5a801d3944c3fea6</anchor>
      <arglist>(IStream &amp;is, set&lt; T, CMP, A &gt; &amp;s, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e58d1a8db99ab47a0a9cfd0ce318d89a</anchor>
      <arglist>(OStream &amp;os, const map&lt; K, T, CMP, A &gt; &amp;m, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b6e35ae72be22b025b46816afeb0cf2e</anchor>
      <arglist>(IStream &amp;is, map&lt; K, T, CMP, A &gt; &amp;m, UT &amp;u)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventConfig.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/EventRecord/</path>
    <filename>EventConfig_8h</filename>
    <includes id="ThePEG_8h" name="ThePEG.h" local="yes" imported="no">ThePEG/Config/ThePEG.h</includes>
    <namespace>ThePEG</namespace>
    <class kind="struct">ThePEG::EventConfig</class>
    <member kind="typedef">
      <type>Base</type>
      <name>EventRecordBase</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a000f171866aea56540f3d673a9c3322</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventRecordBase &gt;::pointer</type>
      <name>EventBasePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>703b3669b712930b6ff592d70835ec8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventRecordBase &gt;::const_pointer</type>
      <name>cEventBasePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>32eec95439c33a4a732ac07f378dbfa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventRecordBase &gt;::transient_pointer</type>
      <name>tEventBasePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>006c4949e4a7144a758018bdd851e19f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventRecordBase &gt;::transient_const_pointer</type>
      <name>tcEventBasePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0df177f18080e3affe46d35ae4c164f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Rebinder&lt; EventRecordBase &gt;</type>
      <name>EventTranslationMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>583df33e48205d2621b615aced1e8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Particle</type>
      <name>ParticleClass</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f297feb2a84aaa457f153a5fb49015cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleData</type>
      <name>ParticleDataClass</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>44732b381ea26d3b4992329a339de3d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleDataClass &gt;::pointer</type>
      <name>EventPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9a12cc4ebab76b3ab2a5862957ef9b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleDataClass &gt;::const_pointer</type>
      <name>cEventPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f90f61203a5340419f35caf5ab933033</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleDataClass &gt;::transient_pointer</type>
      <name>tEventPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8544939dbba3a803b409c87635c93159</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleDataClass &gt;::transient_const_pointer</type>
      <name>tcEventPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ef3de8b7436a0ead4d1e5fcff09dad6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tPPtr &gt;</type>
      <name>tParticleVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>98ed3941b0be2cf9d711e67876236b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PPtr &gt;</type>
      <name>ParticleVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a01ae5d763b3b76942bb7b80e5a182f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; PPtr, less&lt; PPtr &gt;, Allocator&lt; PPtr &gt; &gt;</type>
      <name>ParticleSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>53c7e77c5ceab7414cfde6a06a94650c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; tPPtr, less&lt; tPPtr &gt;, Allocator&lt; tPPtr &gt; &gt;</type>
      <name>tParticleSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>951cc8229818f9fa4a575f43148e5771</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; tcPPtr, less&lt; tcPPtr &gt;, Allocator&lt; tcPPtr &gt; &gt;</type>
      <name>tcParticleSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>42944e05c403b6033baa28c2a7090b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; StepPtr &gt;</type>
      <name>StepVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>69531ff9fa8f3039de8388c0090091c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; SubProPtr &gt;</type>
      <name>SubProcessVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7cc8d9e97da748d42bed2c6683f33ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tSubProPtr &gt;</type>
      <name>tSubProcessVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>32d67c83189e59cc10471331973fc4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; CollPtr &gt;</type>
      <name>CollisionVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7f3258f20a05a8805f4feecae5bfddb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; StepPtr, less&lt; StepPtr &gt;, Allocator&lt; StepPtr &gt; &gt;</type>
      <name>StepSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c30e746f9e6687b8a409cb4cdbc9e3dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; SubProPtr, less&lt; SubProPtr &gt;, Allocator&lt; SubProPtr &gt; &gt;</type>
      <name>SubProcessSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>38642a2850cbbcd7ebee6d0f558043f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HelicityDefinitions.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/Helicity/</path>
    <filename>HelicityDefinitions_8h</filename>
    <includes id="ThePEG_8h" name="ThePEG.h" local="yes" imported="no">ThePEG/Config/ThePEG.h</includes>
    <namespace>ThePEG</namespace>
    <namespace>ThePEG::Helicity</namespace>
    <member kind="enumeration">
      <name>DiracRep</name>
      <anchor>5b05e6acd23f9aa61bc3dd928136a8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HELASDRep</name>
      <anchor>5b05e6acd23f9aa61bc3dd928136a8eef7aa0fc69b6420489aadcd0a34b099bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HaberDRep</name>
      <anchor>5b05e6acd23f9aa61bc3dd928136a8ee6eb0e0b30ccf6e9eb98f70f327688f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultDRep</name>
      <anchor>5b05e6acd23f9aa61bc3dd928136a8ee7867bf83cfa2f67c938c32fe9b56d387</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SpinorType</name>
      <anchor>63fa66c36082393e568951b4badf2df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>u_spinortype</name>
      <anchor>63fa66c36082393e568951b4badf2df1931046419af9a8ca4a8b658ad7f6a213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>v_spinortype</name>
      <anchor>63fa66c36082393e568951b4badf2df1f7c5ec11f72df23c2a8b9f186554b3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>unknown_spinortype</name>
      <anchor>63fa66c36082393e568951b4badf2df17772c5a567ae2ed6fc4d3ae52024b10d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JamesRandom.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>JamesRandom_8h</filename>
  </compound>
  <compound kind="file">
    <name>LorentzVector.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>LorentzVector_8h</filename>
    <namespace>ThePEG</namespace>
    <member kind="function">
      <type>double</type>
      <name>dirPlus</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>17bbb434618876769681704b9220d859</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dirMinus</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bdd4e3065eef87b83ae7b53b59792302</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dirZ</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6d16497daa1b0ae71da6b50d3d8715f6</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dirTheta</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c7d14648277d8bd555a80556d9170d83</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dirCosTheta</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>66ae6e647bcf065cb8d5253e04e3a4e6</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>dirBoostVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d3c2d72e0296c1309e5e82c0fcf75112</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>LorentzVector</type>
      <name>lightCone</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0c4e27655932850aa2844097867bd3df</anchor>
      <arglist>(FloatType plus, FloatType minus, FloatType x=FloatType(), FloatType y=FloatType())</arglist>
    </member>
    <member kind="function">
      <type>LorentzVector</type>
      <name>lightCone</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0eb3a1ee7878ade966449bc130cd4c54</anchor>
      <arglist>(FloatType plus, FloatType minus, Transverse&lt; FloatType &gt; pt)</arglist>
    </member>
    <member kind="function">
      <type>LorentzVector</type>
      <name>lightConeDir</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>acb1c3a30870256214fd9d2946a21196</anchor>
      <arglist>(FloatType plus, FloatType minus, FloatType x=FloatType(), FloatType y=FloatType())</arglist>
    </member>
    <member kind="function">
      <type>LorentzVector</type>
      <name>lightConeDir</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6d012ddfca25291639c0745c6caf2dfb</anchor>
      <arglist>(FloatType plus, FloatType minus, Transverse&lt; FloatType &gt; pt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>aedbf47fbd80d881e6553cbabe6baa3c</anchor>
      <arglist>(OStream &amp;os, const LorentzVector &amp;p, UnitT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cabbbab0a3383f98e50a5deaee8b064a</anchor>
      <arglist>(IStream &amp;is, LorentzVector &amp;p, UnitT &amp;u)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Matrix.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>Matrix_8h</filename>
  </compound>
  <compound kind="file">
    <name>PhysicalConstants.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>PhysicalConstants_8h</filename>
  </compound>
  <compound kind="file">
    <name>Pointers.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/Config/</path>
    <filename>Pointers_8h</filename>
    <includes id="ThePEG_8h" name="ThePEG.h" local="yes" imported="no">ThePEG/Config/ThePEG.h</includes>
    <namespace>ThePEG</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_DECLARE_TEMPLATE_POINTERS</name>
      <anchorfile>Pointers_8h.html</anchorfile>
      <anchor>5991a6ee4622ff924adccc497610e540</anchor>
      <arglist>(full, abbrev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_DECLARE_POINTERS</name>
      <anchorfile>Pointers_8h.html</anchorfile>
      <anchor>cf51a17964aa20275b8b57e64142e21c</anchor>
      <arglist>(full, abbrev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_DECLARE_CLASS_POINTERS</name>
      <anchorfile>Pointers_8h.html</anchorfile>
      <anchor>5633feb76cd1e290d82db84e0450e41d</anchor>
      <arglist>(full, abbrev)</arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; InterfacedBase &gt;::pointer</type>
      <name>IBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7f865a9e19143cd344730b2d44981b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; InterfacedBase &gt;::const_pointer</type>
      <name>cIBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2a49339aa35c0de62e469071ca565a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; InterfacedBase &gt;::transient_pointer</type>
      <name>tIBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>36f47ec6e444f9df2f91d6bbecb6254e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; InterfacedBase &gt;::transient_const_pointer</type>
      <name>tcIBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e9fe3951d78d063d93381d3c1a1a993b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Interfaced &gt;::pointer</type>
      <name>IPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>39473481c28efc973683fe9544b075ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Interfaced &gt;::const_pointer</type>
      <name>cIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>eb4be0f0c9cbc28a0ef5d5eb4cc8cfb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Interfaced &gt;::transient_pointer</type>
      <name>tIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>df209c5dd1b1cfbf01a7e263ac96ba02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Interfaced &gt;::transient_const_pointer</type>
      <name>tcIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e9f92fb60b03fba5800a9c6c815ea242</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleData &gt;::pointer</type>
      <name>PDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f78b56a2a9eef2c20060fd7708370359</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleData &gt;::const_pointer</type>
      <name>cPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>86858222a5d86a69fccc4b7e8f8a6965</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleData &gt;::transient_pointer</type>
      <name>tPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0ec8344eb6d3796b6c31dcbb95846346</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleData &gt;::transient_const_pointer</type>
      <name>tcPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a26618716713aa109d91ea728dd56479</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MatcherBase &gt;::pointer</type>
      <name>PMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>19dd003b6d924c65808e99f23b9f8355</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MatcherBase &gt;::const_pointer</type>
      <name>cPMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>40205df43562f18828e3d398b1d8d791</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MatcherBase &gt;::transient_pointer</type>
      <name>tPMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1cc9ba6a57e7fcec7bf835fc606b58e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MatcherBase &gt;::transient_const_pointer</type>
      <name>tcPMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1f61e08180c90885f8625e6ef1c47f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayMode &gt;::pointer</type>
      <name>DMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>66a6661b8f08d81a97abecc517f7a426</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayMode &gt;::const_pointer</type>
      <name>cDMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ff2a51cf46785d0d04071b6872ce3da5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayMode &gt;::transient_pointer</type>
      <name>tDMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>78f4a6963144395bdefd5c1b0568102c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayMode &gt;::transient_const_pointer</type>
      <name>tcDMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4f334fdf763498e27ae02536419093cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Particle &gt;::pointer</type>
      <name>PPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>40c802d60a7398a6702eb5980d4df3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Particle &gt;::const_pointer</type>
      <name>cPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0e878918e275ee57cf21ef31fdedcfe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Particle &gt;::transient_pointer</type>
      <name>tPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cba5064868293f9784a5d03f9c8aa86b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Particle &gt;::transient_const_pointer</type>
      <name>tcPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>359f550081b648c4c7ed44cb12a3575a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::pointer</type>
      <name>EGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d2d14077d03db7fb627ab50022fd17aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::const_pointer</type>
      <name>cEGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c33bf8f397091b483520a08be7dcbdd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::transient_pointer</type>
      <name>tEGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4caab2752a0c8ad8d0e8c19a8e46e6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::transient_const_pointer</type>
      <name>tcEGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7eee6f98b03fda7d98e9628bfa5e00bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::pointer</type>
      <name>EHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c84ed38f98c1c0693ddba8ff1646f688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::const_pointer</type>
      <name>cEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e7d40b21a1cbd0e2ba674a78c0035011</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::transient_pointer</type>
      <name>tEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8b9462af61205651f49d9a83ed3beef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::transient_const_pointer</type>
      <name>tcEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c51a871f4b3397507ebb60aab1b2ae92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StepHandler &gt;::pointer</type>
      <name>StepHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>10a10be13c61e3f7f7287bbaab7254d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StepHandler &gt;::const_pointer</type>
      <name>cStepHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>59b806fea565f67b9602adf444e69b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StepHandler &gt;::transient_pointer</type>
      <name>tStepHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f9fcd03827405450a3c8644c1a66630e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StepHandler &gt;::transient_const_pointer</type>
      <name>tcStepHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2d78f97f728d7d1ddf6aabdb4ef652b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Hint &gt;::pointer</type>
      <name>HintPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2a266baa164f5c5e9adf778af225d05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Hint &gt;::const_pointer</type>
      <name>cHintPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e0166ddb0644d1e47dcc729bd1d1e2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Hint &gt;::transient_pointer</type>
      <name>tHintPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>17980d4c011197c21be059549bc9f80d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Hint &gt;::transient_const_pointer</type>
      <name>tcHintPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3a46056184336b8929b80f4b7a36bb5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HadronizationHandler &gt;::pointer</type>
      <name>HadrHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>70acb7b232506f3572ba5bc216ff9430</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HadronizationHandler &gt;::const_pointer</type>
      <name>cHadrHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4ca054a663c1b9a653d9762c59baba03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HadronizationHandler &gt;::transient_pointer</type>
      <name>tHadrHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9b89a88f6181412bd813dd7a4a19db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HadronizationHandler &gt;::transient_const_pointer</type>
      <name>tcHadrHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9c6ec9c8a7d2d508178a3781f0826c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; CascadeHandler &gt;::pointer</type>
      <name>CascHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>062950a97bd6f867ea706cccf57d3305</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; CascadeHandler &gt;::const_pointer</type>
      <name>cCascHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e4e5c30e807b007794b70135171341ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; CascadeHandler &gt;::transient_pointer</type>
      <name>tCascHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>aa0f9e27a7e35cf54d3d801926ef3e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; CascadeHandler &gt;::transient_const_pointer</type>
      <name>tcCascHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fb3c31fb10775802138ace6a7c6dc30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultipleInteractionHandler &gt;::pointer</type>
      <name>MIHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e77e2c3c65b4dc73feb2ff192bd4437f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultipleInteractionHandler &gt;::const_pointer</type>
      <name>cMIHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2895ef4cd5000eac9472bab7900cf9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultipleInteractionHandler &gt;::transient_pointer</type>
      <name>tMIHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0921dbe712fa2f4b24b3f5d3c0cc9cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultipleInteractionHandler &gt;::transient_const_pointer</type>
      <name>tcMIHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7a420b7f8408531b0984987444c07d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayHandler &gt;::pointer</type>
      <name>DecayHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a5a9f3d52ea529fed67b8c7ca18f4357</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayHandler &gt;::const_pointer</type>
      <name>cDecayHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6ae042770228b1efca1ede3f1b6b05cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayHandler &gt;::transient_pointer</type>
      <name>tDecayHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a8d593c4ce9d167af0cf7bccd597faaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayHandler &gt;::transient_const_pointer</type>
      <name>tcDecayHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e55591fcc8bc515db2a544dc522c2303</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PileupHandler &gt;::pointer</type>
      <name>PileHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6ab4cb13e153dac63fd7dc2af0f6d6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PileupHandler &gt;::const_pointer</type>
      <name>cPileHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>27789cd89bd65c333e25603ea1496eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PileupHandler &gt;::transient_pointer</type>
      <name>tPileHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ac436ea47bb54185c1c6bfdde39eff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PileupHandler &gt;::transient_const_pointer</type>
      <name>tcPileHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>91ee1385928fe9c9c9c8eca1d28e0758</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LuminosityFunction &gt;::pointer</type>
      <name>LumiFnPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>754ccc740c75297c39c30786868ba94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LuminosityFunction &gt;::const_pointer</type>
      <name>cLumiFnPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>555959c14b86f64b99435ac083819bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LuminosityFunction &gt;::transient_pointer</type>
      <name>tLumiFnPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8fea71abc83407745c75fa5d93cbcd0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LuminosityFunction &gt;::transient_const_pointer</type>
      <name>tcLumiFnPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>710e2cb23554576eec0a418b42156d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonExtractor &gt;::pointer</type>
      <name>PExtrPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1773e825a3f57e07d87297e8d7fd0e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonExtractor &gt;::const_pointer</type>
      <name>cPExtrPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c30ef65066802a89b5ee1b0afa84acf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonExtractor &gt;::transient_pointer</type>
      <name>tPExtrPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1b970c565a977057f4299777fa790e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonExtractor &gt;::transient_const_pointer</type>
      <name>tcPExtrPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ab56af07a9f0760926c783110b933033</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RandomGenerator &gt;::pointer</type>
      <name>RanGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>5c5baf78806b8300e0879daedaf7c9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RandomGenerator &gt;::const_pointer</type>
      <name>cRanGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>66dc089da218dca8997c14afee7e4f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RandomGenerator &gt;::transient_pointer</type>
      <name>tRanGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>322b0102feac51c17722bc04cb943c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RandomGenerator &gt;::transient_const_pointer</type>
      <name>tcRanGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6c8facc81ab53ca7915e42ebe45a8ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; AnalysisHandler &gt;::pointer</type>
      <name>AnaPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>564b2005104631ff8da56048389eba53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; AnalysisHandler &gt;::const_pointer</type>
      <name>cAnaPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3701aba0e921937167240d4e6e6851d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; AnalysisHandler &gt;::transient_pointer</type>
      <name>tAnaPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bbb999ac6a8f92692499e83832ee65a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; AnalysisHandler &gt;::transient_const_pointer</type>
      <name>tcAnaPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>94372dacad61d4d1fe355a469accf9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventManipulator &gt;::pointer</type>
      <name>EvtManipPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ff447e7fe2c8a6a436896943bf094361</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventManipulator &gt;::const_pointer</type>
      <name>cEvtManipPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d78893a5349f081a6d9c19d224a66f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventManipulator &gt;::transient_pointer</type>
      <name>tEvtManipPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>33bcb45248307a3ec53e103517cf0236</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventManipulator &gt;::transient_const_pointer</type>
      <name>tcEvtManipPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e04ea83ca91980da347f6ae014223afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Decayer &gt;::pointer</type>
      <name>DecayerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>49b96bf759e56acc5900395935726193</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Decayer &gt;::const_pointer</type>
      <name>cDecayerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>973b4a1e8337c75c6afae57334d69ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Decayer &gt;::transient_pointer</type>
      <name>tDecayerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>60d70117928c03f8e2394446421dbacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Decayer &gt;::transient_const_pointer</type>
      <name>tcDecayerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>704fa37c96876d7a15858b38db955c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Event &gt;::pointer</type>
      <name>EventPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a8a993157b782d0eccfc7b2823150241</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Event &gt;::const_pointer</type>
      <name>cEventPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f6bab5d9eabf52ff7ef9dc96c2b365a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Event &gt;::transient_pointer</type>
      <name>tEventPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>17d73e7976b4bf91a68f0a2e41e5297a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Event &gt;::transient_const_pointer</type>
      <name>tcEventPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7aa1bd50378abf90d9310f13641510be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Collision &gt;::pointer</type>
      <name>CollPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0d4fec5ebf9dbd1e0f2f18c5f5a897d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Collision &gt;::const_pointer</type>
      <name>cCollPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>38f116c354d24cee0666d4a4d455cabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Collision &gt;::transient_pointer</type>
      <name>tCollPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8212d1c005cca8ea6afd79fe95f7f00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Collision &gt;::transient_const_pointer</type>
      <name>tcCollPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bb59a81726986f1d7c2cc6743465539e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Step &gt;::pointer</type>
      <name>StepPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ea0d5196d5d3a64b4e8fdaf4cfa2a6c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Step &gt;::const_pointer</type>
      <name>cStepPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6f292d88ebea8c3e5256c4e409ef7d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Step &gt;::transient_pointer</type>
      <name>tStepPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>5ebfeb8ba59f54c0d65b1bc9c0953e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Step &gt;::transient_const_pointer</type>
      <name>tcStepPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9f361d934b33da801e39397253be6649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcess &gt;::pointer</type>
      <name>SubProPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4163a59bbf6f69f412e47692f3f61cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcess &gt;::const_pointer</type>
      <name>cSubProPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>04727eaad18a9173b8b864a05c6fccc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcess &gt;::transient_pointer</type>
      <name>tSubProPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>10bbc33e55cbd3807e6837c825a925be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcess &gt;::transient_const_pointer</type>
      <name>tcSubProPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>330ade944671c2bd1a78a3fa1f9e15ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::pointer</type>
      <name>StrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cd3c16f62faa174f876f33055788ff74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::const_pointer</type>
      <name>cStrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>633a13d13c69afb8bdb0d3af3349099c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::transient_pointer</type>
      <name>tStrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f34cc9e132054633e12289746cbe253e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::transient_const_pointer</type>
      <name>tcStrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d18f743fc4dc5e0fd827721b0978d0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XComb &gt;::pointer</type>
      <name>XCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1f948ca1dc279e2eb52e22eb841ba868</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XComb &gt;::const_pointer</type>
      <name>cXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>124346596746133556c39545038e4fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XComb &gt;::transient_pointer</type>
      <name>tXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d3ff7c5bd693a3285b63993b70b39358</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XComb &gt;::transient_const_pointer</type>
      <name>tcXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>40fdc3152b0dccb482f0b098bbcd0a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemnantHandler &gt;::pointer</type>
      <name>RemHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e26bbb07e49f0aa81494fc49d6784ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemnantHandler &gt;::const_pointer</type>
      <name>cRemHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f2a8005870519b108a4d96c6fcc565de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemnantHandler &gt;::transient_pointer</type>
      <name>tRemHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6026b0c3739da5fdce71a70220de23a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemnantHandler &gt;::transient_const_pointer</type>
      <name>tcRemHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c23ff450f94600e571a2334ed1c6f18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PDFBase &gt;::pointer</type>
      <name>PDFPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b22f23e71813c3ee20393141b73467bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PDFBase &gt;::const_pointer</type>
      <name>cPDFPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2156567499a908d4058bb2d6afc232ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PDFBase &gt;::transient_pointer</type>
      <name>tPDFPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>be1a74db5dd0596512c58e83b8c6666c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PDFBase &gt;::transient_const_pointer</type>
      <name>tcPDFPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2058d383ddcb9491fe1b3b1f8773316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardModelBase &gt;::pointer</type>
      <name>SMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ce881fe50c242724f2a29cc102530d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardModelBase &gt;::const_pointer</type>
      <name>cSMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>02c4087fb982351172bf1f1b0ff7729d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardModelBase &gt;::transient_pointer</type>
      <name>tSMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6b99963edbebdb3a8f87cc09b5e4ff67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardModelBase &gt;::transient_const_pointer</type>
      <name>tcSMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3ed312816c0aa5b1c87dc52e2ad84b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourBase &gt;::pointer</type>
      <name>CBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2b2f41c8513f1be31f1e53bc978e9f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourBase &gt;::const_pointer</type>
      <name>cCBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2535b5bd61df87e9d44694605c8ae96b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourBase &gt;::transient_pointer</type>
      <name>tCBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d8a59894f0b7e835e53420b951690358</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourBase &gt;::transient_const_pointer</type>
      <name>tcCBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>864b8301b3ed44241e6dd13e8b8dcf05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinBase &gt;::pointer</type>
      <name>SpinPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3b7cf4e112b6844dda1ddda5e0eaa491</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinBase &gt;::const_pointer</type>
      <name>cSpinPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>23c5272088057bb55173f567d0467b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinBase &gt;::transient_pointer</type>
      <name>tSpinPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bd9200add6c772df46407358d655875e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinBase &gt;::transient_const_pointer</type>
      <name>tcSpinPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>90a37792695173233ee017b6fdffc8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventInfoBase &gt;::pointer</type>
      <name>EIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f274d9bbe9d8784c2c37c87143431a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventInfoBase &gt;::const_pointer</type>
      <name>cEIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>333f71c4383b68f7276b4fabad16a6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventInfoBase &gt;::transient_pointer</type>
      <name>tEIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d3d396dca236c34acbe0cc49673411eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventInfoBase &gt;::transient_const_pointer</type>
      <name>tcEIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>30ee29a8e0480a8bb66da44f7b47e9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ReweightBase &gt;::pointer</type>
      <name>ReweightPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1288dac6511ed261856e0956f2f824fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ReweightBase &gt;::const_pointer</type>
      <name>cReweightPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e70d002a321b00590f51f5da67cb3de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ReweightBase &gt;::transient_pointer</type>
      <name>tReweightPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>343ba5de204a0427a430b35964db33ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ReweightBase &gt;::transient_const_pointer</type>
      <name>tcReweightPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>30a0f93bbda39671f18c5a9d56281f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourLine &gt;::pointer</type>
      <name>ColinePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>28526bcf0b18b64a9f887574552741f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourLine &gt;::const_pointer</type>
      <name>cColinePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3cd4b8dd1f9aa884cc30f3706ae26aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourLine &gt;::transient_pointer</type>
      <name>tColinePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>67f450ba61e61ab64f51828239406810</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourLine &gt;::transient_const_pointer</type>
      <name>tcColinePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2be538f8fe7cdaa5872160a6c4c1319d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::pointer</type>
      <name>BPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>242ec6bfd4cc1f13918ac61ef5fbbccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::const_pointer</type>
      <name>cBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>11a5c25cbb1a29a434343cb4491837cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::transient_pointer</type>
      <name>tBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>151d4fdf8199f3831fbf398ccb4b9db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::transient_const_pointer</type>
      <name>tcBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>115a9007f3e73554f6e8b5cb6df1a832</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RandBreitWigner.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>RandBreitWigner_8h</filename>
  </compound>
  <compound kind="file">
    <name>RandExponential.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>RandExponential_8h</filename>
  </compound>
  <compound kind="file">
    <name>RandomEngine.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>RandomEngine_8h</filename>
  </compound>
  <compound kind="file">
    <name>RandPoisson.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>RandPoisson_8h</filename>
  </compound>
  <compound kind="file">
    <name>Rotation.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>Rotation_8h</filename>
  </compound>
  <compound kind="file">
    <name>SpinOneLorentzRotation.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>SpinOneLorentzRotation_8h</filename>
  </compound>
  <compound kind="file">
    <name>StandardMatchers.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/PDT/</path>
    <filename>StandardMatchers_8h</filename>
    <namespace>ThePEG</namespace>
    <class kind="struct">ThePEG::AnyMatcher</class>
    <class kind="struct">ThePEG::ChargedMatcher</class>
    <class kind="struct">ThePEG::PositiveMatcher</class>
    <class kind="struct">ThePEG::NeutralMatcher</class>
    <class kind="struct">ThePEG::NegativeMatcher</class>
    <class kind="struct">ThePEG::BaryonMatcher</class>
    <class kind="struct">ThePEG::MesonMatcher</class>
    <class kind="struct">ThePEG::DiquarkMatcher</class>
    <class kind="struct">ThePEG::QuarkMatcher</class>
    <class kind="struct">ThePEG::LeptonMatcher</class>
    <class kind="struct">ThePEG::LightQuarkMatcher</class>
    <class kind="struct">ThePEG::LightAntiQuarkMatcher</class>
    <class kind="struct">ThePEG::StandardQCDPartonMatcher</class>
    <class kind="struct">ThePEG::PseudoScalarMesonMatcher</class>
    <class kind="struct">ThePEG::VectorMesonMatcher</class>
    <member kind="typedef">
      <type>Matcher&lt; AnyMatcher &gt;</type>
      <name>MatchAny</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a63115283157648cfb8d4807d723a6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; ChargedMatcher &gt;</type>
      <name>MatchCharged</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9bf0d1588d6194e32f17364f063c3a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; PositiveMatcher &gt;</type>
      <name>MatchPositive</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8105f6e9073e52620b2d8fb4c202e83d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; NeutralMatcher &gt;</type>
      <name>MatchNeutral</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f334d3f6cf154b8849ced9524a9919ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; NegativeMatcher &gt;</type>
      <name>MatchNegative</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fcf37f5046d422f64f41add8a1b3ca0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; BaryonMatcher &gt;</type>
      <name>MatchBaryon</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7e70f4d6778d394b396b705faed88efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; MesonMatcher &gt;</type>
      <name>MatchMeson</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c4b775f1d99657fa4720d0d9a5d22a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; DiquarkMatcher &gt;</type>
      <name>MatchDiquark</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8b548d70fd4792d84307fc17f80a7452</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; QuarkMatcher &gt;</type>
      <name>MatchQuark</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3b0077016845e4d50ded6720e39d9a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; LeptonMatcher &gt;</type>
      <name>MatchLepton</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d3b5b4ea6011f15942a301390823d369</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; LightQuarkMatcher &gt;</type>
      <name>MatchLightQuark</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0cf73a01cf491cc8433163ae51ebfd61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; LightAntiQuarkMatcher &gt;</type>
      <name>MatchLightAntiQuark</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1096261138ff785ee608856b4da3e221</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; StandardQCDPartonMatcher &gt;</type>
      <name>MatchStandardQCDParton</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>72ed37066bc7c9c42045ccd0b924f178</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; PseudoScalarMesonMatcher &gt;</type>
      <name>MatchPseudoScalarMeson</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d0dc54b1a9aa8d2a7848180040e09596</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; VectorMesonMatcher &gt;</type>
      <name>MatchVectorMeson</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9467ca2c0ee4f6f171eb0eb81bd8f3f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StandardSelectors.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/EventRecord/</path>
    <filename>StandardSelectors_8h</filename>
    <namespace>ThePEG</namespace>
    <class kind="struct">ThePEG::AllSelector</class>
    <class kind="struct">ThePEG::FinalStateSelector</class>
    <class kind="struct">ThePEG::IntermediateSelector</class>
    <class kind="struct">ThePEG::PrimaryCollisionSelector</class>
    <class kind="struct">ThePEG::ChargedSelector</class>
    <member kind="typedef">
      <type>ParticleSelector&lt; AllSelector &gt;</type>
      <name>SelectAll</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b74b11373ff741427170b4c1c98cba98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleSelector&lt; FinalStateSelector &gt;</type>
      <name>SelectFinalState</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>84486786cafdbe9a3ec0fc6672e2a3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleSelector&lt; FinalStateSelector &gt;</type>
      <name>SelectFinalState</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>84486786cafdbe9a3ec0fc6672e2a3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleSelector&lt; PrimaryCollisionSelector &gt;</type>
      <name>SelectPrimaryCollision</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0b5cc3ec8848f8df6bc3958dee43ed66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleSelector&lt; ChargedSelector &gt;</type>
      <name>SelectCharged</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cc50e9b96415eff6ba7adac02c2da72b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>std.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/Config/</path>
    <filename>std_8h</filename>
    <namespace>std</namespace>
    <namespace>ThePEG</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_DECLARE_SET</name>
      <anchorfile>std_8h.html</anchorfile>
      <anchor>db44858a3226afddd41e4045b67ebd69</anchor>
      <arglist>(VALTYPE, NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_DECLARE_MULTISET</name>
      <anchorfile>std_8h.html</anchorfile>
      <anchor>3700df3cbedb9b655a987880a3ea4491</anchor>
      <arglist>(VALTYPE, NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_DECLARE_MAP</name>
      <anchorfile>std_8h.html</anchorfile>
      <anchor>644b5b1ab9b4b5edb59c359381f36fe5</anchor>
      <arglist>(KEYTYPE, VALTYPE, NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_IMPLEMENT_SET</name>
      <anchorfile>std_8h.html</anchorfile>
      <anchor>8c6e575e2b22c55f371107327dfb742d</anchor>
      <arglist>(VALTYPE, NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_IMPLEMENT_MULTISET</name>
      <anchorfile>std_8h.html</anchorfile>
      <anchor>454c04106b39db1b734e096b5d326f9b</anchor>
      <arglist>(VALTYPE, NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_IMPLEMENT_MAP</name>
      <anchorfile>std_8h.html</anchorfile>
      <anchor>b1e5f69c7c10267c737094bc92d4aefc</anchor>
      <arglist>(KEYTYPE, VALTYPE, NAME)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>member</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4e26bcdf8af52196e8cac40b32acb9ef</anchor>
      <arglist>(const Container &amp;c, const Key &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>member</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3cdcfd07b85a8ee9c01d62824193d107</anchor>
      <arglist>(const vector&lt; T &gt; &amp;v, const Key &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>std::insert_iterator&lt; Cont &gt;</type>
      <name>inserter</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a566ad654b959f01e27b222548bba06a</anchor>
      <arglist>(Cont &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>left</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0f4189c754e38a8bdc05512cca25558c</anchor>
      <arglist>(ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>right</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2bcac1c480c680759d76af39adefdec4</anchor>
      <arglist>(ostream &amp;os)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SystemOfUnits.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>SystemOfUnits_8h</filename>
  </compound>
  <compound kind="file">
    <name>ThePEG.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/Config/</path>
    <filename>ThePEG_8h</filename>
    <includes id="std_8h" name="std.h" local="yes" imported="no">std.h</includes>
    <includes id="Pointers_8h" name="Pointers.h" local="yes" imported="no">Pointers.h</includes>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Containers.h</includes>
    <namespace>ThePEG</namespace>
    <class kind="struct">ThePEG::Base</class>
    <class kind="struct">ThePEG::TraitsType</class>
    <class kind="struct">ThePEG::Veto</class>
    <class kind="struct">ThePEG::Stop</class>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_THROW_SPEC</name>
      <anchorfile>ThePEG_8h.html</anchorfile>
      <anchor>6f5170229664f1cf6ec3e62750ac08e4</anchor>
      <arglist>(classes)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_DEBUG_LEVEL</name>
      <anchorfile>ThePEG_8h.html</anchorfile>
      <anchor>8ae1bb53a99c58951b59315480ef2b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ThePEG_DEBUG_ITEM</name>
      <anchorfile>ThePEG_8h.html</anchorfile>
      <anchor>90d4f51ac64f80f03bfdea82c55f65cb</anchor>
      <arglist>(item)</arglist>
    </member>
    <member kind="typedef">
      <type>Base</type>
      <name>PersistentBase</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2c8d24233a015d2e95ea8289b3839110</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>MultiplicationTraits&lt; T &gt;::ResultType</type>
      <name>sqr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>883534d86b21d97a98ab922f7d8a044f</anchor>
      <arglist>(const T &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>abs</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9eac1e8d2a2dca7111a644e552af541b</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ThreeVector.h</name>
    <path>/home/richardn/montecarlo/c++/trunk/thepeg/ThePEG/CLHEPWrap/</path>
    <filename>ThreeVector_8h</filename>
    <namespace>ThePEG</namespace>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>40438f40547fbc36ba06296e36d8f54b</anchor>
      <arglist>(OStream &amp;os, const Vector3 &amp;p, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>177d2490cc61afe78dd1971a31b747fc</anchor>
      <arglist>(IStream &amp;is, Vector3 &amp;p, UT &amp;u)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>V2PPDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::V2PPDecayer class.</title>
    <filename>V2PPDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>DalitzDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::DalitzDecayer class.</title>
    <filename>DalitzDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>QuarksToHadronsDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::QuarksToHadronsDecayer class.</title>
    <filename>QuarksToHadronsDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>WeakToHadronsDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::WeakToHadronsDecayer class.</title>
    <filename>WeakToHadronsDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>O1AlphaSInterfaces</name>
    <title>Interfaces defined for the ThePEG::O1AlphaS class.</title>
    <filename>O1AlphaSInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>SimpleAlphaEMInterfaces</name>
    <title>Interfaces defined for the ThePEG::SimpleAlphaEM class.</title>
    <filename>SimpleAlphaEMInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEee2gZ2qqInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEee2gZ2qq class.</title>
    <filename>MEee2gZ2qqInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>GRVBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::GRVBase class.</title>
    <filename>GRVBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>GRV94LInterfaces</name>
    <title>Interfaces defined for the ThePEG::GRV94L class.</title>
    <filename>GRV94LInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>PartonExtractorInterfaces</name>
    <title>Interfaces defined for the ThePEG::PartonExtractor class.</title>
    <filename>PartonExtractorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>PDFBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::PDFBase class.</title>
    <filename>PDFBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>RemnantHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::RemnantHandler class.</title>
    <filename>RemnantHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>BeamParticleDataInterfaces</name>
    <title>Interfaces defined for the ThePEG::BeamParticleData class.</title>
    <filename>BeamParticleDataInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>SoftRemnantHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::SoftRemnantHandler class.</title>
    <filename>SoftRemnantHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>AmplitudeInterfaces</name>
    <title>Interfaces defined for the ThePEG::Amplitude class.</title>
    <filename>AmplitudeInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEBase class.</title>
    <filename>MEBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ReweightBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::ReweightBase class.</title>
    <filename>ReweightBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ME2to2BaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::ME2to2Base class.</title>
    <filename>ME2to2BaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ME2to2QCDInterfaces</name>
    <title>Interfaces defined for the ThePEG::ME2to2QCD class.</title>
    <filename>ME2to2QCDInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>EventGeneratorInterfaces</name>
    <title>Interfaces defined for the ThePEG::EventGenerator class.</title>
    <filename>EventGeneratorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>RandomGeneratorInterfaces</name>
    <title>Interfaces defined for the ThePEG::RandomGenerator class.</title>
    <filename>RandomGeneratorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>StrategyInterfaces</name>
    <title>Interfaces defined for the ThePEG::Strategy class.</title>
    <filename>StrategyInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>StandardRandomInterfaces</name>
    <title>Interfaces defined for the ThePEG::StandardRandom class.</title>
    <filename>StandardRandomInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>EventHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::EventHandler class.</title>
    <filename>EventHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>SubProcessHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::SubProcessHandler class.</title>
    <filename>SubProcessHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>AnalysisHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::AnalysisHandler class.</title>
    <filename>AnalysisHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>CascadeHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::CascadeHandler class.</title>
    <filename>CascadeHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MultipleInteractionHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::MultipleInteractionHandler class.</title>
    <filename>MultipleInteractionHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>DecayHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::DecayHandler class.</title>
    <filename>DecayHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>EventManipulatorInterfaces</name>
    <title>Interfaces defined for the ThePEG::EventManipulator class.</title>
    <filename>EventManipulatorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>StepHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::StepHandler class.</title>
    <filename>StepHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>HadronizationHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::HadronizationHandler class.</title>
    <filename>HadronizationHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>FlavourGeneratorInterfaces</name>
    <title>Interfaces defined for the ThePEG::FlavourGenerator class.</title>
    <filename>FlavourGeneratorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>LuminosityFunctionInterfaces</name>
    <title>Interfaces defined for the ThePEG::LuminosityFunction class.</title>
    <filename>LuminosityFunctionInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>StandardEventHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::StandardEventHandler class.</title>
    <filename>StandardEventHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>SamplerBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::SamplerBase class.</title>
    <filename>SamplerBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ClusterCollapserInterfaces</name>
    <title>Interfaces defined for the ThePEG::ClusterCollapser class.</title>
    <filename>ClusterCollapserInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>PtGeneratorInterfaces</name>
    <title>Interfaces defined for the ThePEG::PtGenerator class.</title>
    <filename>PtGeneratorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ZGeneratorInterfaces</name>
    <title>Interfaces defined for the ThePEG::ZGenerator class.</title>
    <filename>ZGeneratorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MultiColourInterfaces</name>
    <title>Interfaces defined for the ThePEG::MultiColour class.</title>
    <filename>MultiColourInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ParticleDataInterfaces</name>
    <title>Interfaces defined for the ThePEG::ParticleData class.</title>
    <filename>ParticleDataInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>DecayModeInterfaces</name>
    <title>Interfaces defined for the ThePEG::DecayMode class.</title>
    <filename>DecayModeInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>DecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::Decayer class.</title>
    <filename>DecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MassGeneratorInterfaces</name>
    <title>Interfaces defined for the ThePEG::MassGenerator class.</title>
    <filename>MassGeneratorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>WidthGeneratorInterfaces</name>
    <title>Interfaces defined for the ThePEG::WidthGenerator class.</title>
    <filename>WidthGeneratorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>DummyDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::DummyDecayer class.</title>
    <filename>DummyDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ConstituentParticleDataInterfaces</name>
    <title>Interfaces defined for the ThePEG::ConstituentParticleData class.</title>
    <filename>ConstituentParticleDataInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>FlatDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::FlatDecayer class.</title>
    <filename>FlatDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>RemnantDataInterfaces</name>
    <title>Interfaces defined for the ThePEG::RemnantData class.</title>
    <filename>RemnantDataInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>RemnantDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::RemnantDecayer class.</title>
    <filename>RemnantDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>SimpleBaryonRemnantDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::SimpleBaryonRemnantDecayer class.</title>
    <filename>SimpleBaryonRemnantDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>StandardModelBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::StandardModelBase class.</title>
    <filename>StandardModelBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>AlphaEMBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::AlphaEMBase class.</title>
    <filename>AlphaEMBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>CKMBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::CKMBase class.</title>
    <filename>CKMBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>AlphaSBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::AlphaSBase class.</title>
    <filename>AlphaSBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>Helicity::RSFermionSpinInfoInterfaces</name>
    <title>Interfaces defined for the ThePEG::Helicity::RSFermionSpinInfo class.</title>
    <filename>Helicity::RSFermionSpinInfoInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>CutsInterfaces</name>
    <title>Interfaces defined for the ThePEG::Cuts class.</title>
    <filename>CutsInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>OneCutBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::OneCutBase class.</title>
    <filename>OneCutBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>TwoCutBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::TwoCutBase class.</title>
    <filename>TwoCutBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MultiCutBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::MultiCutBase class.</title>
    <filename>MultiCutBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>FactoryBaseInterfaces</name>
    <title>Interfaces defined for the ThePEG::FactoryBase class.</title>
    <filename>FactoryBaseInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>LWHFactoryInterfaces</name>
    <title>Interfaces defined for the ThePEG::LWHFactory class.</title>
    <filename>LWHFactoryInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEGG2GGInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEGG2GG class.</title>
    <filename>MEGG2GGInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEQG2QGInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEQG2QG class.</title>
    <filename>MEQG2QGInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEQQ2QQInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEQQ2QQ class.</title>
    <filename>MEQQ2QQInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEQq2QqInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEQq2Qq class.</title>
    <filename>MEQq2QqInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEGG2QQInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEGG2QQ class.</title>
    <filename>MEGG2QQInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEQQ2GGInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEQQ2GG class.</title>
    <filename>MEQQ2GGInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEQQ2qqInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEQQ2qq class.</title>
    <filename>MEQQ2qqInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MEqq2qqInterfaces</name>
    <title>Interfaces defined for the ThePEG::MEqq2qq class.</title>
    <filename>MEqq2qqInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>LeptonLeptonRemnantInterfaces</name>
    <title>Interfaces defined for the ThePEG::LeptonLeptonRemnant class.</title>
    <filename>LeptonLeptonRemnantInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>GRV94MInterfaces</name>
    <title>Interfaces defined for the ThePEG::GRV94M class.</title>
    <filename>GRV94MInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>FixedCMSLuminosityInterfaces</name>
    <title>Interfaces defined for the ThePEG::FixedCMSLuminosity class.</title>
    <filename>FixedCMSLuminosityInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ReweightMinPTInterfaces</name>
    <title>Interfaces defined for the ThePEG::ReweightMinPT class.</title>
    <filename>ReweightMinPTInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>GaussianPtGeneratorInterfaces</name>
    <title>Interfaces defined for the ThePEG::GaussianPtGenerator class.</title>
    <filename>GaussianPtGeneratorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>SimpleDISCutInterfaces</name>
    <title>Interfaces defined for the ThePEG::SimpleDISCut class.</title>
    <filename>SimpleDISCutInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>V2LeptonsCutInterfaces</name>
    <title>Interfaces defined for the ThePEG::V2LeptonsCut class.</title>
    <filename>V2LeptonsCutInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>LeptonLeptonPDFInterfaces</name>
    <title>Interfaces defined for the ThePEG::LeptonLeptonPDF class.</title>
    <filename>LeptonLeptonPDFInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ReweightConstantInterfaces</name>
    <title>Interfaces defined for the ThePEG::ReweightConstant class.</title>
    <filename>ReweightConstantInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>Tau2HadronsDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::Tau2HadronsDecayer class.</title>
    <filename>Tau2HadronsDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MadGraphReaderInterfaces</name>
    <title>Interfaces defined for the ThePEG::MadGraphReader class.</title>
    <filename>MadGraphReaderInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MadGraphOneCutInterfaces</name>
    <title>Interfaces defined for the ThePEG::MadGraphOneCut class.</title>
    <filename>MadGraphOneCutInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>MadGraphTwoCutInterfaces</name>
    <title>Interfaces defined for the ThePEG::MadGraphTwoCut class.</title>
    <filename>MadGraphTwoCutInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>KTClusInterfaces</name>
    <title>Interfaces defined for the ThePEG::KTClus class.</title>
    <filename>KTClusInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ACDCSamplerInterfaces</name>
    <title>Interfaces defined for the ThePEG::ACDCSampler class.</title>
    <filename>ACDCSamplerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>LesHouchesReaderInterfaces</name>
    <title>Interfaces defined for the ThePEG::LesHouchesReader class.</title>
    <filename>LesHouchesReaderInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>LesHouchesFileReaderInterfaces</name>
    <title>Interfaces defined for the ThePEG::LesHouchesFileReader class.</title>
    <filename>LesHouchesFileReaderInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>LesHouchesEventHandlerInterfaces</name>
    <title>Interfaces defined for the ThePEG::LesHouchesEventHandler class.</title>
    <filename>LesHouchesEventHandlerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>SimpleZGeneratorInterfaces</name>
    <title>Interfaces defined for the ThePEG::SimpleZGenerator class.</title>
    <filename>SimpleZGeneratorInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>OmegaPhi3PiDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::OmegaPhi3PiDecayer class.</title>
    <filename>OmegaPhi3PiDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>SimpleFlavourInterfaces</name>
    <title>Interfaces defined for the ThePEG::SimpleFlavour class.</title>
    <filename>SimpleFlavourInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>SimpleKTCutInterfaces</name>
    <title>Interfaces defined for the ThePEG::SimpleKTCut class.</title>
    <filename>SimpleKTCutInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>StandardCKMInterfaces</name>
    <title>Interfaces defined for the ThePEG::StandardCKM class.</title>
    <filename>StandardCKMInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>ColourPairDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::ColourPairDecayer class.</title>
    <filename>ColourPairDecayerInterfaces</filename>
  </compound>
  <compound kind="page">
    <name>Onium3GDecayerInterfaces</name>
    <title>Interfaces defined for the ThePEG::Onium3GDecayer class.</title>
    <filename>Onium3GDecayerInterfaces</filename>
  </compound>
  <compound kind="group">
    <name>Persistency</name>
    <title>Persistency classes</title>
    <filename>group__Persistency.html</filename>
    <class kind="class">ThePEG::InputDescription</class>
    <class kind="class">ThePEG::PersistentIStream</class>
    <class kind="class">ThePEG::PersistentOStream</class>
  </compound>
  <compound kind="namespace">
    <name>ACDCGenerator</name>
    <filename>namespaceACDCGenerator.html</filename>
    <class kind="class">ACDCGenerator::ACDCGen</class>
    <class kind="class">ACDCGenerator::ACDCGenCell</class>
    <class kind="struct">ACDCGenerator::ACDCGenCellInfo</class>
    <class kind="struct">ACDCGenerator::ACDCTraitsType</class>
    <class kind="struct">ACDCGenerator::ACDCFncTraits</class>
    <class kind="struct">ACDCGenerator::ACDCRandomTraits</class>
    <member kind="typedef">
      <type>short</type>
      <name>DimType</name>
      <anchorfile>namespaceACDCGenerator.html</anchorfile>
      <anchor>626ba08a6f6baf01f63b63307965c6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; double &gt;</type>
      <name>DVector</name>
      <anchorfile>namespaceACDCGenerator.html</anchorfile>
      <anchor>ae64652d001153f2e1e242cb5af0a163</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ACDCGenerator::ACDCGen</name>
    <filename>classACDCGenerator_1_1ACDCGen.html</filename>
    <templarg>Rnd</templarg>
    <templarg>FncPtr</templarg>
    <member kind="typedef">
      <type>Rnd</type>
      <name>RndType</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>1ef8adb094991ffbfe1e799cfa162897</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ACDCRandomTraits&lt; RndType &gt;</type>
      <name>RndTraits</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>a072bb24d1a38eee138e8ea805e8c94f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FncPtr</type>
      <name>FncPtrType</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>48b0cc2abea2ba445a73f0950dba12dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; ACDCGenCell * &gt;</type>
      <name>CellVector</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>10cc5d883929e00e9dcba784b64a5dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; FncPtrType &gt;</type>
      <name>FncVector</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>3f80756c4e9a19dc2a1d9b6febd04b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; DimType &gt;</type>
      <name>DimVector</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>1aea8e43b6e4a61a99eb03af99cf88ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DimVector::size_type</type>
      <name>size_type</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>7c8a12d56128d32d9b1b68bb34218a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ACDCFncTraits&lt; FncPtrType &gt;</type>
      <name>FncTraits</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>ee104fa10abcd72df201dd0f97a61e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ACDCGen</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>d8b9eaabc98a39e233fe7c36ddab0714</anchor>
      <arglist>(Rnd *r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ACDCGen</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>22ca15d89da83a3ea24897e4886b6bc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ACDCGen</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>bc4783ccdb13926771bbb756d65ecbdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFunction</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>71092f675f1e4b1689097f85c27ecc81</anchor>
      <arglist>(DimType dim, FncPtrType f, double maxrat=-1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>729c1983f7df3053fbc8fea8d8f16ae3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FncPtrType</type>
      <name>generate</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>19a43ccab499f43743df079315526e61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>44cb02fc32823ff1a242154b694d2556</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DVector &amp;</type>
      <name>lastPoint</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>5c877f3dd60bccef04e99ccc4bd2dafc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastF</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>70753495b92a1b8a460d811094eccd81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FncPtrType</type>
      <name>lastFunction</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>046de4a77558e5ef240bf6dc078e6928</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>last</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>e1036773e8f7af24d41a380d978fc634</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>4763e74e36da68c7a848aa0eef4f20cf</anchor>
      <arglist>(POStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>input</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>8c96729c3612c16ff36a0714d0cee9eb</anchor>
      <arglist>(PIStream &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eps</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>ca8bc5612b41484207c3711a7b29588c</anchor>
      <arglist>(double newEps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>margin</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>8a4cc4baf79306e9d5c4e8745743fcc7</anchor>
      <arglist>(double newMargin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nTry</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>3b2ad326b308381962f4138f7cc85149</anchor>
      <arglist>(size_type newNTry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maxTry</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>d0d8035c608b7f636b53c71dabb2649f</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integral</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>d2be0baa0d9f9fb57b8b9a626b444165</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>n</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>5f74ac97287fa9cb17accc910fe075b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>N</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>18d9e94a4cbe0b8bae504bf8a2409c8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>efficiency</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>03c3592792364da6ee2ce2567dfa470c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nBins</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>510eef69b9526fce8d5c51beb8aa20ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>4fc054142ca402fe58e792d62dd8ec04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxInt</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>2a90d04d85cd865c17ec005f9dab1f61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eps</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>f2390af9daebd426e9872c3926d76c67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>margin</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>05e9eb3b5290d9a57eb70bce6bb37331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nTry</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>b591f284000c54c8b7239c14b910e8b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>maxTry</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>fc0f5ebbc88cabd23197153355c1c0e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cheapRandom</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>5ac27c5470a9d9b7cb25fad7f09ed3cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>8d80f102aa71c2758d010c34e38e7476</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compensating</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>c1b93ab367769e75fa393f4f1de5c97e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>compleft</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>d855c4643b7ad6d92451ea5d71420f7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; ACDCGenCellInfo &gt;</type>
      <name>extractCellInfo</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>c931f70c8c9ea23e3d39d4b0baaafea9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cheapRandom</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>00968e52d2247e9e8b86601e484d4668</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRnd</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>0eb575808f5e2889e0d03b7ae16d2860</anchor>
      <arglist>(Rnd *r)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rnd</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>b512b5e57f5b1dc3e20da16b071d8720</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rnd</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>a35259702e57b0f6957dfb8ca7045008</anchor>
      <arglist>(double lo, double up) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rnd</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>2e681915a6917c0b37167adea14dde80</anchor>
      <arglist>(const DVector &amp;lo, const DVector &amp;up, DVector &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rnd</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>1ba487bea0d24dc004cd0a850779dff1</anchor>
      <arglist>(DimType D, DVector &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>rndInt</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>018fabda2a351ddfd7e2f15c3df4b87e</anchor>
      <arglist>(long x) const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static size_type</type>
      <name>maxsize</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>e701a6d376527402e7361817720da33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>vector&lt; Level &gt;</type>
      <name>LevelVector</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>71ee777996877c095b78c12e371f6d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>doMaxInt</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>319ae90d43454456d4f5072cab86111e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const FncVector &amp;</type>
      <name>functions</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>d0fa9a4241265009be2de150157f53ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>FncPtrType</type>
      <name>function</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>13713d9da85da562c3711f6dfe0cc612</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const DimVector &amp;</type>
      <name>dimensions</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>1fdf516ffc366a5d606dc39834361a4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DimType</type>
      <name>dimension</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>a3db7ae6b90d478f85ec647ef1f78dfa</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>DimType</type>
      <name>lastDimension</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>f5e098cdcc1de0c2236a4566ab197a26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const CellVector &amp;</type>
      <name>cells</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>4e69fb94c138a0e5aaf5cde8515c30c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ACDCGenCell *</type>
      <name>cell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>75293520ee03ffdff5ef5f77bd6cd82c</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>ACDCGenCell *</type>
      <name>lastPrimary</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>cdbe7d6f785881a7b0ab98d1f5e85eaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const DVector &amp;</type>
      <name>sumMaxInts</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>9bc43111a734a6ce862bba684528a6d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ACDCGenCell *</type>
      <name>lastCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>76eb2722b5ffa6cd2df94278279d6467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>chooseCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>389e461e22e1329f1e9ada08afc79fa0</anchor>
      <arglist>(DVector &amp;lo, DVector &amp;up)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>compensate</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>c6ac741c9c40b8cbd4dc78666c40f075</anchor>
      <arglist>(const DVector &amp;lo, const DVector &amp;up)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ACDCGen</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>b12e8baa6517f81779c60e37a0b1e294</anchor>
      <arglist>(const ACDCGen &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ACDCGen &amp;</type>
      <name>operator=</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>de40728cea8c27c163a85365dabaf4bc</anchor>
      <arglist>(const ACDCGen &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RndType *</type>
      <name>theRnd</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>0a5ab1be564f58591ebee7d270883517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theNAcc</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>f07ea57def234f41ae4087e38826fc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theN</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>887519e14ac7146e0b6144a49439ad8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEps</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>49295e1edf6ce23633a381814ca850f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theMargin</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>93dcbed40e1d930bc6fd7c6dc80f4391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>theNTry</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>a3aedc2eed1653df8adcc45f8ef9deac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theMaxTry</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>816e0462a38a22909d12715ba17d7e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useCheapRandom</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>73755e1a8c7a9c8127518c18a0d70aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FncVector</type>
      <name>theFunctions</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>ae0c788a5004fea2799e928c253f3fbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DimVector</type>
      <name>theDimensions</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>9b8be44d334da3d0327072d700ecc948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CellVector</type>
      <name>thePrimaryCells</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>a5db45e41ce2550180c5b4fd515345a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DVector</type>
      <name>theSumMaxInts</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>024146bbda71daa3a39a11ac15af0f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>theLast</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>714d425a43586e8b597a5c7ec3435e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ACDCGenCell *</type>
      <name>theLastCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>fb82029b3cf2a6e6d325933fa00b535b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DVector</type>
      <name>theLastPoint</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>74d4c09d8c99acf75d0a39e48b4813b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theLastF</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>6ea428f633202f3f55a05f76c1764cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LevelVector</type>
      <name>levels</name>
      <anchorfile>classACDCGenerator_1_1ACDCGen.html</anchorfile>
      <anchor>bba201d9eb66a64eec9ba021eb76c3a2</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ACDCGenerator::ACDCGen::Level</class>
    <class kind="struct">ACDCGenerator::ACDCGen::Slicer</class>
  </compound>
  <compound kind="struct">
    <name>ACDCGenerator::ACDCGen::Level</name>
    <filename>structACDCGenerator_1_1ACDCGen_1_1Level.html</filename>
    <member kind="variable">
      <type>long</type>
      <name>lastN</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Level.html</anchorfile>
      <anchor>a8e4255a55b53a4ff3d3f1c1b8a0d8b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>g</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Level.html</anchorfile>
      <anchor>f93ffbde6d3dd11399307e439a0bda38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ACDCGenCell *</type>
      <name>cell</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Level.html</anchorfile>
      <anchor>85d147d13d1ceac1fe8e82525b68331a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_type</type>
      <name>index</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Level.html</anchorfile>
      <anchor>90184305f008197364e1a7c65e3fe9f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>up</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Level.html</anchorfile>
      <anchor>11eeaec89ce2e2601a8c5392b472552c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>lo</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Level.html</anchorfile>
      <anchor>7079084ad0f5525a1167ce420d73659e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ACDCGenerator::ACDCGen::Slicer</name>
    <filename>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</filename>
    <member kind="function">
      <type></type>
      <name>Slicer</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>343be6addfe1f76f051790133acdbe58</anchor>
      <arglist>(DimType, ACDCGen &amp;, const DVector &amp;, const DVector &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Slicer</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>b909cb7fc52e7951f86e9c6b79ccc8de</anchor>
      <arglist>(DimType Din, const Slicer &amp;s, ACDCGenCell *cellin, const DVector &amp;loin, const DVector &amp;xselin, const DVector &amp;upin, double fselin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Slicer</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>eb777f43a26c3099d7f3cc219537a7cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divideandconquer</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>0be31d1fc2c8322c16daf5d896ea52c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>69abf3fe85f08791c0a5e8203cbe57ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slice</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>37d5600312ad5bf34d6e6daabcbfd06d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>shiftmaxmin</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>8441f627a17b637dd5d8b1cd425f4f58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dohalf</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>7ca6dc33161d1ec39fa48ec38d2e919d</anchor>
      <arglist>(DimType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkdiag</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>b7ffa13dd58249584da12d6c44130e9f</anchor>
      <arglist>(ACDCGenCell *cell, DimType d, double lod, double upd)</arglist>
    </member>
    <member kind="variable">
      <type>DimType</type>
      <name>D</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>79b5888253947481ec2ff3eedaceccee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>lo</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>f2215bc6d22b0f2339dde9784cebdaab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>up</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>5add9dcd1bfc555ea625d3232e5573a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>xcl</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>42e39291f5a85013015036b840038307</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>xcu</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>30a96ca2b0b943bed5adad54b8e0b95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>xhl</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>039de66b014e4226fa7862736c12ea2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>xhu</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>ad4dce133a27d309640bbe0c8616e502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>fhl</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>1cf5453965b203dc74c64b6d248f20bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>fhu</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>4ad5e12e8e02503199006299acc5d531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>xsel</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>903d1efd9a36cbbb68adebd9ab0538fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fsel</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>a439d5771523f22b92927eaddca94eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ACDCGenCell *</type>
      <name>current</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>36f5ac31896d8914bc94a2edc5ac4472</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ACDCGenCell *</type>
      <name>first</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>8e9c4b5eeb39fdac654b133a65df4a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>firstlo</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>641aa72b9a172ac381e47060a3bb95b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>firstup</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>3edd7a9848ffee1235838b0c46bf5e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FncPtr</type>
      <name>f</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>e92ff8030c0fcededa0162f716fee6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epsilon</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>b14cedc2714edf1115f0d6a9a68bba85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>margin</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>195f822807545f8fa1f0cd05c1cad776</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>multimap&lt; double, DimType &gt;</type>
      <name>rateslice</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>273fd1274933686d3f4bb7374af478a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minf</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>2cab5fcbd3960c2e35e71491d667e659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wholecomp</name>
      <anchorfile>structACDCGenerator_1_1ACDCGen_1_1Slicer.html</anchorfile>
      <anchor>40ce70d46f4adc4c8db30199bfa884a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ACDCGenerator::ACDCGenCell</name>
    <filename>classACDCGenerator_1_1ACDCGenCell.html</filename>
    <member kind="function">
      <type></type>
      <name>ACDCGenCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>a48c9d0778c23858b3e9365742e76bb0</anchor>
      <arglist>(double newG)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ACDCGenCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>8ba194dda1bce089200f498c403743e5</anchor>
      <arglist>(double newG, double newV)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ACDCGenCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>0ba6a1f9fa49a87d9ae1f2405e1d4b40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ACDCGenCell *</type>
      <name>generate</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>f030856db1684c7e35768cfb46f80e5b</anchor>
      <arglist>(DVector &amp;lo, DVector &amp;up, RndType *rnd)</arglist>
    </member>
    <member kind="function">
      <type>ACDCGenCell *</type>
      <name>generate</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>659e1dcfb7a878f1945903d08a839a0c</anchor>
      <arglist>(DVector &amp;lo, DVector &amp;up, DVector &amp;rndv)</arglist>
    </member>
    <member kind="function">
      <type>ACDCGenCell *</type>
      <name>getCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>0ec8d0d769713e842a1dedf135ddcb12</anchor>
      <arglist>(DVector &amp;lo, const DVector &amp;x, DVector &amp;up)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>smooth</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>ba1b0568575473d6a89111773f862227</anchor>
      <arglist>(double frac)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSplit</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>2a98ebc2e0221d3fcaa232aa5a1620aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>doMaxInt</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>d21f97c38839f78724d09dd0cc82903e</anchor>
      <arglist>(double rescale=1.0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxInt</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>f598dbb68b30fa56b78ed35b1c50b8b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>splitme</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>4b2379480e3e422c5d2af3e8668704ef</anchor>
      <arglist>(double lo, double newDiv, double up, DimType newDim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>g</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>cec1760fc4d20ad88550b22283346b1a</anchor>
      <arglist>(double newG)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>g</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>0f15d0c38fde94f6a88768b3bb113794</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>v</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>5d629242ae581cd7169abd9469b9f8a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DimType</type>
      <name>dim</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>b0ab33e288766f26e2a30215b4ea598a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>div</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>e8bce615f3c86c993cdf8d1f368f60a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ACDCGenCell *</type>
      <name>upper</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>275f3f76ea52b0b23c2ffc230d0a94c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ACDCGenCell *</type>
      <name>lower</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>3335b43696d6e8754400e2a039c176e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nBins</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>4c77befc874f10a3a0a1bfe8ab602394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>8017358ae59ac8e9d189cd5b3c855b6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extract</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>6048fe92fba77ea4e6f25325658f6c55</anchor>
      <arglist>(DVector &amp;lo, DVector &amp;up, vector&lt; ACDCGenCellInfo &gt; &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getIndex</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>226b6c09a94bf0b5cb5e1b15600609e6</anchor>
      <arglist>(const ACDCGenCell *c) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getIndex</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>13bccff52ab8876c484a6f77e3c2781d</anchor>
      <arglist>(const ACDCGenCell *c, long &amp;indx) const </arglist>
    </member>
    <member kind="function">
      <type>ACDCGenCell *</type>
      <name>getCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>ce290caafaef235285dcc7388238d095</anchor>
      <arglist>(long i)</arglist>
    </member>
    <member kind="function">
      <type>ACDCGenCell *</type>
      <name>getCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>ecc8a19ff2e1033192503856d9e301a9</anchor>
      <arglist>(long i, long &amp;indx)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>theG</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>2681707c9905ac059558f2bfb2c4471c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>theV</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>c0d727d6c6649965d75b024b587acf72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ACDCGenCell *</type>
      <name>theUpper</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>e1ec2df1c96796e0c79d02624f66d831</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ACDCGenCell *</type>
      <name>theLower</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>98d4afc9062ecffae9f65a57a0673e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>theDivision</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>7f287fbf53e0e4189053d74938e35c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DimType</type>
      <name>theSplitDimension</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>3d5d55ca0cf4c5fea9338ff0dcb1169a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ACDCGenCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>35c79fdab93e327942fea596fe26fbf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ACDCGenCell</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>c5bfab90c351d687ee512e85c5e0324a</anchor>
      <arglist>(const ACDCGenCell &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ACDCGenCell &amp;</type>
      <name>operator=</name>
      <anchorfile>classACDCGenerator_1_1ACDCGenCell.html</anchorfile>
      <anchor>225ef8bf93253123301a001228af9fb9</anchor>
      <arglist>(const ACDCGenCell &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ACDCGenerator::ACDCGenCellInfo</name>
    <filename>structACDCGenerator_1_1ACDCGenCellInfo.html</filename>
    <member kind="typedef">
      <type>vector&lt; ACDCGenCellInfo &gt;::size_type</type>
      <name>Index</name>
      <anchorfile>structACDCGenerator_1_1ACDCGenCellInfo.html</anchorfile>
      <anchor>4ad45124251e5404dd0494d8f14e1499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>g</name>
      <anchorfile>structACDCGenerator_1_1ACDCGenCellInfo.html</anchorfile>
      <anchor>5429c48468721b16460eed2a0b8e3a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>v</name>
      <anchorfile>structACDCGenerator_1_1ACDCGenCellInfo.html</anchorfile>
      <anchor>9506fd53f056d6e6b6f91f4c04c0658e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>up</name>
      <anchorfile>structACDCGenerator_1_1ACDCGenCellInfo.html</anchorfile>
      <anchor>51b0ea6f1e17252c7398d68268005277</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DVector</type>
      <name>lo</name>
      <anchorfile>structACDCGenerator_1_1ACDCGenCellInfo.html</anchorfile>
      <anchor>bc0a6d45c58641609c4ed6098445fd1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Index</type>
      <name>iup</name>
      <anchorfile>structACDCGenerator_1_1ACDCGenCellInfo.html</anchorfile>
      <anchor>71d89f7ef1eba7647d72e355a3220249</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Index</type>
      <name>ilo</name>
      <anchorfile>structACDCGenerator_1_1ACDCGenCellInfo.html</anchorfile>
      <anchor>db820910e6b1859411fa60cefebe242e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ACDCGenerator::ACDCTraitsType</name>
    <filename>structACDCGenerator_1_1ACDCTraitsType.html</filename>
  </compound>
  <compound kind="struct">
    <name>ACDCGenerator::ACDCFncTraits</name>
    <filename>structACDCGenerator_1_1ACDCFncTraits.html</filename>
    <templarg>FncPtr</templarg>
    <base>ACDCGenerator::ACDCTraitsType</base>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>value</name>
      <anchorfile>structACDCGenerator_1_1ACDCFncTraits.html</anchorfile>
      <anchor>ab9e6c8ba9a96c8eca920e2efa70ef67</anchor>
      <arglist>(const FncPtr &amp;f, const DVector &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ACDCGenerator::ACDCRandomTraits</name>
    <filename>structACDCGenerator_1_1ACDCRandomTraits.html</filename>
    <templarg>Rnd</templarg>
    <base>ACDCGenerator::ACDCTraitsType</base>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>rnd</name>
      <anchorfile>structACDCGenerator_1_1ACDCRandomTraits.html</anchorfile>
      <anchor>862dafc01dd9af5093fb8ff31f6ee11a</anchor>
      <arglist>(Rnd *r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>rnd</name>
      <anchorfile>structACDCGenerator_1_1ACDCRandomTraits.html</anchorfile>
      <anchor>df43cc9ab73115f9860e9647b2608c7e</anchor>
      <arglist>(Rnd *r, double xl, double xu)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rnd</name>
      <anchorfile>structACDCGenerator_1_1ACDCRandomTraits.html</anchorfile>
      <anchor>4a04d76403bbb799ab8ab09c9df1aea5</anchor>
      <arglist>(Rnd *r, InputIterator l, InputIterator lend, InputIterator u, OutputIterator res)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rnd</name>
      <anchorfile>structACDCGenerator_1_1ACDCRandomTraits.html</anchorfile>
      <anchor>a5759d4e42faddc339d3759c1e519d43</anchor>
      <arglist>(Rnd *r, int D, OutputIterator res)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>rndBool</name>
      <anchorfile>structACDCGenerator_1_1ACDCRandomTraits.html</anchorfile>
      <anchor>ead829490ef909c10ee25aa89a68e8bb</anchor>
      <arglist>(Rnd *r, double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>rndBool</name>
      <anchorfile>structACDCGenerator_1_1ACDCRandomTraits.html</anchorfile>
      <anchor>c76f696f30ddef912fda209397091bc3</anchor>
      <arglist>(Rnd *r, double x, double y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>rndInt</name>
      <anchorfile>structACDCGenerator_1_1ACDCRandomTraits.html</anchorfile>
      <anchor>7f9905d893c59d574409ebfec169a268</anchor>
      <arglist>(Rnd *r, long x)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CLHEP</name>
    <filename>namespaceCLHEP.html</filename>
    <member kind="typedef">
      <type>HepJamesRandom</type>
      <name>JamesRandom</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>018361df43dcf895d0317432666cc961</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HepLorentzVector</type>
      <name>LorentzVector</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>e6054e79c867123d82d2ebec6c5f2bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HepMatrix</type>
      <name>Matrix</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>5b09097499376a58078d7d119624d145</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HepSymMatrix</type>
      <name>SymMatrix</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>3951ececf56d828d71cd974505008dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HepVector</type>
      <name>Vector</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>a1cfb409c6194fd92784354564aecbe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RandBreitWigner</type>
      <name>ThePEGRandBreitWigner</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>10c4a3109a0751809430271641091b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RandExponential</type>
      <name>ThePEGRandExponential</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>dc549498915fb14f7f012c3723e21995</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HepRandomEngine</type>
      <name>RandomEngine</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>46de82da88d8bca8e5d4c7cac3501123</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RandPoisson</type>
      <name>ThePEGRandPoisson</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>b274626a6b5d7d2fe700f82db0d849d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HepRotation</type>
      <name>Rotation</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>e7b48a5ae2ace1b0c658825bba0282fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Hep3Vector</type>
      <name>Vector3</name>
      <anchorfile>namespaceCLHEP.html</anchorfile>
      <anchor>3f13bc89724d92661b066c6263196c6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>HepMC</name>
    <filename>namespaceHepMC.html</filename>
  </compound>
  <compound kind="namespace">
    <name>LWH</name>
    <filename>namespaceLWH.html</filename>
    <class kind="class">LWH::AnalysisFactory</class>
    <class kind="class">LWH::Axis</class>
    <class kind="class">LWH::DataPoint</class>
    <class kind="class">LWH::DataPointSet</class>
    <class kind="class">LWH::DataPointSetFactory</class>
    <class kind="class">LWH::Histogram1D</class>
    <class kind="class">LWH::HistogramFactory</class>
    <class kind="class">LWH::ManagedObject</class>
    <class kind="class">LWH::Measurement</class>
    <class kind="class">LWH::Tree</class>
    <class kind="class">LWH::TreeFactory</class>
    <class kind="class">LWH::VariAxis</class>
  </compound>
  <compound kind="class">
    <name>LWH::AnalysisFactory</name>
    <filename>classLWH_1_1AnalysisFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AnalysisFactory</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>39bfed5f0ed7a07d523f3cf1c10133e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ITreeFactory *</type>
      <name>createTreeFactory</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>d4e63cb162feb243f1dc9c41154f74c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IHistogramFactory *</type>
      <name>createHistogramFactory</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>2fa8bd86913e8a99e88cec6e69569676</anchor>
      <arglist>(ITree &amp;tree)</arglist>
    </member>
    <member kind="function">
      <type>IDataPointSetFactory *</type>
      <name>createDataPointSetFactory</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>537b35e349b07a713750685d8cac2b8e</anchor>
      <arglist>(ITree &amp;tree)</arglist>
    </member>
    <member kind="function">
      <type>ITupleFactory *</type>
      <name>createTupleFactory</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>553a19f0cdbc6c2a936933983bceada2</anchor>
      <arglist>(ITree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IFunctionFactory *</type>
      <name>createFunctionFactory</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>50f89474b0dc730be6962075216501bc</anchor>
      <arglist>(ITree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IPlotterFactory *</type>
      <name>createPlotterFactory</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>06dcfa898370a400cf511dddb5191582</anchor>
      <arglist>(int=0, char **=0, const std::string &amp;=&quot;&quot;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IFitFactory *</type>
      <name>createFitFactory</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>1d7ddd880da6fa2a425af96e17818b85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>5d2ec015747d27e8bac632dc357364df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; HistogramFactory * &gt;</type>
      <name>histfacs</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>5a7a890df123e95f42d130df1de736e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; DataPointSetFactory * &gt;</type>
      <name>datafacs</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>d7fbf0b5613b98a610676e484b28a472</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; TreeFactory * &gt;</type>
      <name>treefacs</name>
      <anchorfile>classLWH_1_1AnalysisFactory.html</anchorfile>
      <anchor>407b0cd6c6eae221c767277b7d8209ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::Axis</name>
    <filename>classLWH_1_1Axis.html</filename>
    <member kind="function">
      <type></type>
      <name>Axis</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>dbec15df90d1958aecf5812765e2ec43</anchor>
      <arglist>(int n, double lo, double up)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Axis</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>30bb23b02d1b6c51bd01ec0e40c60ba8</anchor>
      <arglist>(const Axis &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Axis</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>785069d2990f60975ae5a521df4428b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFixedBinning</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>54401a9534eaf2eeb81b510dfdb42040</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lowerEdge</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>a57486de9cab74608d9f578f94605b2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>upperEdge</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>78f6f6d762102d150de0cfadb5a1f449</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bins</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>e7c5623d12ac4d89e3b062b9902fdcdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binLowerEdge</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>193c84659bab03ea36d2760e119fc332</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binUpperEdge</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>069a1040ae1168cd94937ccad67f7a9a</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binWidth</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>bbd6bf62df9e742457ecd4aa2bf72862</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>coordToIndex</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>84af603b2cd43e24bcb2ce9227f7c582</anchor>
      <arglist>(double coord) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binMidPoint</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>7d0a8f110b4774cba0fa0c9b44d17c96</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>lower</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>3f36ecaffaafc747ad25a9135037248e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>upper</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>db67aa5dc04321854c208bf282bf9a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nbins</name>
      <anchorfile>classLWH_1_1Axis.html</anchorfile>
      <anchor>f50b8a20f3d0375e2d298306c9e1ad9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::DataPoint</name>
    <filename>classLWH_1_1DataPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>DataPoint</name>
      <anchorfile>classLWH_1_1DataPoint.html</anchorfile>
      <anchor>7616ee6b688b3cd5e8aa2f7f68f18414</anchor>
      <arglist>(int dim=2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataPoint</name>
      <anchorfile>classLWH_1_1DataPoint.html</anchorfile>
      <anchor>2d9c8bcb9b5c5bcc8b1d14141e8e8ba0</anchor>
      <arglist>(const DataPoint &amp;d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataPoint</name>
      <anchorfile>classLWH_1_1DataPoint.html</anchorfile>
      <anchor>cec035bb79fb56d7d09b758803654580</anchor>
      <arglist>(const IDataPoint &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DataPoint</name>
      <anchorfile>classLWH_1_1DataPoint.html</anchorfile>
      <anchor>6770dd069da11d155688cc563afbd44e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>classLWH_1_1DataPoint.html</anchorfile>
      <anchor>6d38960c5e7b1e63a1614edbdafdfc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>IMeasurement *</type>
      <name>coordinate</name>
      <anchorfile>classLWH_1_1DataPoint.html</anchorfile>
      <anchor>b0e646c3d80f4a5038421a6a91373595</anchor>
      <arglist>(int coord)</arglist>
    </member>
    <member kind="function">
      <type>const IMeasurement *</type>
      <name>coordinate</name>
      <anchorfile>classLWH_1_1DataPoint.html</anchorfile>
      <anchor>76f59806f5a422a7b784e2088b910599</anchor>
      <arglist>(int coord) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Measurement &gt;</type>
      <name>m</name>
      <anchorfile>classLWH_1_1DataPoint.html</anchorfile>
      <anchor>1c630d8e302a485b702c4655f5e424c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::DataPointSet</name>
    <filename>classLWH_1_1DataPointSet.html</filename>
    <base>LWH::ManagedObject</base>
    <member kind="function">
      <type></type>
      <name>DataPointSet</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>ee51744e52a16fe98d299e8ff1944205</anchor>
      <arglist>(int D)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DataPointSet</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>1113736b173a5e50c0a18e6a065228a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IAnnotation &amp;</type>
      <name>annotation</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>af62d37e3bc39a6a9b9cf5cec0af603a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const IAnnotation &amp;</type>
      <name>annotation</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>f3c8ecdc74ed0eda7e31ebd1d7ea4176</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>58df4f9841b7eeb479c4777f5e401df5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>705e61e23180bba9e573d0b0b248e7db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTitle</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>9e21d3716f9ead77c78bf5cc108e2551</anchor>
      <arglist>(const std::string &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>9af66a8f75068ee0c5e9e0eef7e71f6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>6d0d175b99b54a24c03b576e24a18940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>e1d2fe2a150f2877973883038ecfb76a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>IDataPoint *</type>
      <name>point</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>d3f229c0fda6dd93928ce3bfe0ae6cf1</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setCoordinate</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>7b3a09bfe71c1f697b527b6c3c9d0928</anchor>
      <arglist>(int coord, const std::vector&lt; double &gt; &amp;val, const std::vector&lt; double &gt; &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setCoordinate</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>ef6fdd97bb5f97c0b7703ece775c4796</anchor>
      <arglist>(int coord, const std::vector&lt; double &gt; &amp;val, const std::vector&lt; double &gt; &amp;errp, const std::vector&lt; double &gt; &amp;errm)</arglist>
    </member>
    <member kind="function">
      <type>const IDataPoint *</type>
      <name>point</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>5825baeed26025f2f45b601b4b774e68</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>IDataPoint *</type>
      <name>addPoint</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>e829e5a19b2ce0848e357007a5570d68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addPoint</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>a9eede9db2281037d3c8c46293c0efd6</anchor>
      <arglist>(const IDataPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removePoint</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>e7a8b9367846d33dd1b6e0c5a9333d96</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lowerExtent</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>ec68bdf20f3e60f505ccc397959289e7</anchor>
      <arglist>(int coord) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>upperExtent</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>6b1e6a1ff5c334c4422ec57556ee2963</anchor>
      <arglist>(int coord) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scale</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>112054dc76856af401d02f6f46062bf2</anchor>
      <arglist>(double scale)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scaleValues</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>b3548f5a0dade607bf5859b1fca6e910</anchor>
      <arglist>(double scale)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scaleErrors</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>b84e1271e0bdc97df7d6ac02357418a3</anchor>
      <arglist>(double scale)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>cast</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>687736ef3aa12a20debc85460961d84c</anchor>
      <arglist>(const std::string &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeXML</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>41b5913dc28921dc0193178597a0e929</anchor>
      <arglist>(std::ostream &amp;os, std::string path, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFLAT</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>df9a740ec857f4205b01db28e3f542b3</anchor>
      <arglist>(std::ostream &amp;os, std::string path, std::string name)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>theTitle</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>1265d9fe1490467f4d7adfd7d9cf640a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; DataPoint &gt;</type>
      <name>dset</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>5a28b798158b10a54756108bc5278a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>dim</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>307418c94bf8c424456fe21010158d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IAnnotation *</type>
      <name>anno</name>
      <anchorfile>classLWH_1_1DataPointSet.html</anchorfile>
      <anchor>9b84c1b7c48690c2a20e16ab2702d251</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::DataPointSetFactory</name>
    <filename>classLWH_1_1DataPointSetFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>DataPointSetFactory</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>2bffe4c7c03604a5a9c45a4c1f25103d</anchor>
      <arglist>(Tree &amp;t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DataPointSetFactory</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>74356331335bc0b7933097f106b34ec9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>8955e8b4632938cd2181e3b99c508ddd</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, int dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>86a47745cf4b457c9d9e3b36bb53459d</anchor>
      <arglist>(const std::string &amp;pathAndTitle, int dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createY</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>5b8a0c3136b805a48542ecb125a77a38</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;ey)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createY</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>201735641cadb6e19a951a57ea9d1f8d</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;eyp, const std::vector&lt; double &gt; &amp;eym)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createY</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>be53c0f56510c28b3d0454b3e4129036</anchor>
      <arglist>(const std::string &amp;pathAndTitle, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;ey)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createY</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>ee566c7b9a2d47aab977c6c3e2286fec</anchor>
      <arglist>(const std::string &amp;pathAndTitle, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;eyp, const std::vector&lt; double &gt; &amp;eym)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createX</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>d48567e6750655f9790af008cb991072</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;ex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createX</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>2a5aff61135443e404b137a24a2b4869</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;exp, const std::vector&lt; double &gt; &amp;exm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createX</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>6751db2368ed6efab5d2c5fa1cc11426</anchor>
      <arglist>(const std::string &amp;pathAndTitle, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;ex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createX</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>8dcc2c96eae3230044ad97b4f585d756</anchor>
      <arglist>(const std::string &amp;pathAndTitle, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;exp, const std::vector&lt; double &gt; &amp;exm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createXY</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>d5a71994d8af7b69c2ba6d911b1a1d59</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;exp, const std::vector&lt; double &gt; &amp;eyp, const std::vector&lt; double &gt; &amp;exm, const std::vector&lt; double &gt; &amp;eym)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createXY</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>b697d10e884dca03111750e39c45652e</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;ex, const std::vector&lt; double &gt; &amp;ey)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createXY</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>bc8e1c11d1ae0d1fde22ac8ae0bba863</anchor>
      <arglist>(const std::string &amp;pathAndTitle, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;exp, const std::vector&lt; double &gt; &amp;eyp, const std::vector&lt; double &gt; &amp;exm, const std::vector&lt; double &gt; &amp;eym)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createXY</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>9dc7deaa07445534cbe4543c6e58aa51</anchor>
      <arglist>(const std::string &amp;pathAndTitle, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;ex, const std::vector&lt; double &gt; &amp;ey)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createXYZ</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>9831ba294fd64d8e932af1fdf4166d0a</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;z, const std::vector&lt; double &gt; &amp;exp, const std::vector&lt; double &gt; &amp;eyp, const std::vector&lt; double &gt; &amp;ezp, const std::vector&lt; double &gt; &amp;exm, const std::vector&lt; double &gt; &amp;eym, const std::vector&lt; double &gt; &amp;ezm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createXYZ</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>88ce1cbfbd43ec85fb2ea4c8a4707b05</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;z, const std::vector&lt; double &gt; &amp;ex, const std::vector&lt; double &gt; &amp;ey, const std::vector&lt; double &gt; &amp;ez)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createXYZ</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>ada3320fb6bbfb98ef4a97b25f57ace6</anchor>
      <arglist>(const std::string &amp;pathAndTitle, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;z, const std::vector&lt; double &gt; &amp;exp, const std::vector&lt; double &gt; &amp;eyp, const std::vector&lt; double &gt; &amp;ezp, const std::vector&lt; double &gt; &amp;exm, const std::vector&lt; double &gt; &amp;eym, const std::vector&lt; double &gt; &amp;ezm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createXYZ</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>a08cf706df2d9d63c3218e0697323b65</anchor>
      <arglist>(const std::string &amp;pathAndTitle, const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;z, const std::vector&lt; double &gt; &amp;ex, const std::vector&lt; double &gt; &amp;ey, const std::vector&lt; double &gt; &amp;ez)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>createCopy</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>c18a2c9285c801313349d7750d1d56f7</anchor>
      <arglist>(const std::string &amp;path, const IDataPointSet &amp;dataPointSet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>destroy</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>ff19548955447b8680a80e35fbeeb75e</anchor>
      <arglist>(IDataPointSet *dataPointSet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>b60f642420f5e597a40f2eab7ba354a9</anchor>
      <arglist>(const std::string &amp;path, const IHistogram1D &amp;hist, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>dff8056073ade89121b685c5f9537f25</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>1af67724531f934537fc3e156b16d462</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>fc4f75cf68658f0568f03d922b0c9424</anchor>
      <arglist>(const std::string &amp;, const ICloud1D &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>44ab9a863cb66da57904be27ad63d92f</anchor>
      <arglist>(const std::string &amp;, const ICloud2D &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>ea3126d9e12486d9ebe5831075865c67</anchor>
      <arglist>(const std::string &amp;, const ICloud3D &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>9154c4e781340f7e68aa73ea6fa98de0</anchor>
      <arglist>(const std::string &amp;, const IProfile1D &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>019079de4b07b8edd00c80e9542849a1</anchor>
      <arglist>(const std::string &amp;, const IProfile2D &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>add</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>5fd18b9020ddff92db511d5ee81c39d2</anchor>
      <arglist>(const std::string &amp;, const IDataPointSet &amp;, const IDataPointSet &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>subtract</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>902209992aea7429af49f6037ef541f6</anchor>
      <arglist>(const std::string &amp;, const IDataPointSet &amp;, const IDataPointSet &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>multiply</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>bc4463d37abd188ee80413f1373bb02c</anchor>
      <arglist>(const std::string &amp;, const IDataPointSet &amp;, const IDataPointSet &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>divide</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>c302cad58f4238029f1ad04559c89dd2</anchor>
      <arglist>(const std::string &amp;, const IDataPointSet &amp;, const IDataPointSet &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IDataPointSet *</type>
      <name>weightedMean</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>c2b42b9cb7c61af67a48eaf65e6ea106</anchor>
      <arglist>(const std::string &amp;, const IDataPointSet &amp;, const IDataPointSet &amp;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static T *</type>
      <name>error</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>0afd791b273517443318bcf78710752c</anchor>
      <arglist>(std::string feature)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Tree *</type>
      <name>tree</name>
      <anchorfile>classLWH_1_1DataPointSetFactory.html</anchorfile>
      <anchor>01b6a7030ca7333cbb5949d2845414f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::Histogram1D</name>
    <filename>classLWH_1_1Histogram1D.html</filename>
    <base>LWH::ManagedObject</base>
    <member kind="function">
      <type></type>
      <name>Histogram1D</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>c5c5aac639d7e8b122e5ea41c5665854</anchor>
      <arglist>(int n, double lo, double up)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Histogram1D</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>844828ea5dc8a679f269e61131473597</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;edges)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Histogram1D</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>35c0c9e5de7df51d37ec416537ace90a</anchor>
      <arglist>(const Histogram1D &amp;h)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Histogram1D</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>fec877cccedad6c5020c4f22ce0df0e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>f781d8f077e14cbcf4da6d5c5895abb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>53521507a5f2c37359cfee53811e84fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTitle</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>88ea41dc99c1a0cbfee85847759e93b6</anchor>
      <arglist>(const std::string &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>IAnnotation &amp;</type>
      <name>annotation</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>49d1e459c8afcf073bf1b4bbd6d503df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const IAnnotation &amp;</type>
      <name>annotation</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>dc7fa82aedbaf5e25225eed61242acce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>cf882800d4f09e6dbbd35edf83918c27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reset</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>cc71f8cf3475747030ace2852dbfb762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>entries</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>b07fc693a9d06c192bebb7d975cf8dd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>allEntries</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>e691907ea281ba7e0df2c637b4b10b5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>extraEntries</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>51364b0ce16efc4e25239960373a07d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>equivalentBinEntries</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>d5ac50700414f2b4bbf80757c2d89699</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumBinHeights</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>37709ff4c3d683d8f20cae2ccd8440aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumAllBinHeights</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>c1935608e4c89df69aa36328a166bb8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumExtraBinHeights</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>674bb84fc6fe20699a04f2b11b5fbdb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minBinHeight</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>e6e54e359430b4fa25c24d2479540c01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxBinHeight</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>a3f7af667f970c6f4dd3a6236170283b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fill</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>a0cbea9ab95e3d703188aeef94599f72</anchor>
      <arglist>(double x, double weight=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binMean</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>d9a6607c61cc9c73c49bcd5dcae08e8d</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binRms</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>81beac63f2ff1db9ea322264b90aa7db</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>binEntries</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>766ae4107ca24d5c7947a2d152f6a12e</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binHeight</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>f556211c882c5be564d569425bcd2272</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binError</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>2f98f0e925167117d46d86f193256089</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>mean</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>f8626e5b868109ff557f16149b5cd30f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rms</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>1a5cf35005dcffafd1dbc22387270b60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const IAxis &amp;</type>
      <name>axis</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>d14174d83223fbc86aa880b22cd4dd05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>coordToIndex</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>3fc77f3de6b74b7073efc3591725f4a1</anchor>
      <arglist>(double coord) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>afd9d4a90e90a741566d5df4d9832d23</anchor>
      <arglist>(const Histogram1D &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>623c914dd794e80a1798f83264224382</anchor>
      <arglist>(const IHistogram1D &amp;hist)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scale</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>1d2d88f49bae5d44b511d5cc22ca1f55</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>bea88503d979de13f3c765b4f7fcacb2</anchor>
      <arglist>(double intg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>integral</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>1821c0d1f96989da1eafbb77c6838a9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>cast</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>1d16d6d43a67c820a7163aae53be247e</anchor>
      <arglist>(const std::string &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeXML</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>9f3d57b7808af3f9356c09497abffe96</anchor>
      <arglist>(std::ostream &amp;os, std::string path, std::string name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFLAT</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>29d471d95b1d2beca58d23b2cb95b94e</anchor>
      <arglist>(std::ostream &amp;os, std::string path, std::string name)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>theTitle</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>849affa94b1d5827710623c9dc7e05f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IAxis *</type>
      <name>ax</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>7ba1edd5d23faa9b214874be203ea4c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Axis *</type>
      <name>fax</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>1572c393d66830ffe294a03551668afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VariAxis *</type>
      <name>vax</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>dae87ab48f7fdec59ba22a880558be41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>sum</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>969d77ed13012246b26781731030bb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>sumw</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>8835d4768c921e78cd0440273a1bbc01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>sumw2</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>4f12e9961579a7c9a8b09dfc78c93b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>sumxw</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>398a3ec44af33e76046fe5369b8f1b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>sumx2w</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>4e6483098e0bf27f91d8a21f41bcb866</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IAnnotation *</type>
      <name>anno</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>9bf1bf40d5e06e6d67d1a4b958f885f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>HistogramFactory</name>
      <anchorfile>classLWH_1_1Histogram1D.html</anchorfile>
      <anchor>d56c7c40c20dec689064b6fd85d8023a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::HistogramFactory</name>
    <filename>classLWH_1_1HistogramFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>HistogramFactory</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>0304b8f02d996cd56aecf98fd2d1c22c</anchor>
      <arglist>(Tree &amp;t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HistogramFactory</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>72e96ecd08281e8fc240c921fe28dc07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>destroy</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>1feaf64afff9ebf992043de949871146</anchor>
      <arglist>(IBaseHistogram *hist)</arglist>
    </member>
    <member kind="function">
      <type>ICloud1D *</type>
      <name>createCloud1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>5945ba1da5cb430b18ab3f0de3e4504c</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, int=-1, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>ICloud1D *</type>
      <name>createCloud1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>67253bbeb0ed29f4f07fe0c10735d55a</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ICloud1D *</type>
      <name>createCopy</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>2bc4bb6a24c440f2accf7f93020b431f</anchor>
      <arglist>(const std::string &amp;, const ICloud1D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ICloud2D *</type>
      <name>createCloud2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>645931a901fcc7840797a1533b25cf4e</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, int=-1, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>ICloud2D *</type>
      <name>createCloud2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>3a655edce5c811818e3d0138ea626851</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ICloud2D *</type>
      <name>createCopy</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>fd1b755fc6308e36a65ab9c0070c8910</anchor>
      <arglist>(const std::string &amp;, const ICloud2D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ICloud3D *</type>
      <name>createCloud3D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>96b119560b70e29bc9a8d94d954655c4</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, int=-1, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>ICloud3D *</type>
      <name>createCloud3D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>45e77875771f760d178f345f09f4af6f</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ICloud3D *</type>
      <name>createCopy</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>5ef106355330c06febdf8e02a38f4b5f</anchor>
      <arglist>(const std::string &amp;, const ICloud3D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>createHistogram1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>481f00561b8e48e4abd0ec2205762377</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, int nBins, double lowerEdge, double upperEdge, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>createHistogram1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>5d5e593250206083fd8c4cba7f0895eb</anchor>
      <arglist>(const std::string &amp;pathAndTitle, int nBins, double lowerEdge, double upperEdge)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>createHistogram1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>68f9305199e8106f7faa55333b27600a</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;title, const std::vector&lt; double &gt; &amp;binEdges, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>createCopy</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>16726c3b486cb296205bfc90f524667b</anchor>
      <arglist>(const std::string &amp;path, const IHistogram1D &amp;hist)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>createHistogram2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>bf91a8b5bd252a24bdeaf8aa27dbe949</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, int, double, double, int, double, double, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>createHistogram2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>3556da3b19619cd39efba17c95d8b637</anchor>
      <arglist>(const std::string &amp;, int, double, double, int, double, double)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>createHistogram2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>fa3fb150429802226e731a324d689926</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, const std::vector&lt; double &gt; &amp;, const std::vector&lt; double &gt; &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>createCopy</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>747d777c4b08420857e4c8e8140af3d9</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram3D *</type>
      <name>createHistogram3D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>dfb1a5c3e0214676c4f62177f7d4931e</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, int, double, double, int, double, double, int, double, double, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram3D *</type>
      <name>createHistogram3D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>d24bd9b2adf9430fb1dd5ebeb109c9bd</anchor>
      <arglist>(const std::string &amp;, int, double, double, int, double, double, int, double, double)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram3D *</type>
      <name>createHistogram3D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>8eddd288111519ea10fa11cde655d11e</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, const std::vector&lt; double &gt; &amp;, const std::vector&lt; double &gt; &amp;, const std::vector&lt; double &gt; &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram3D *</type>
      <name>createCopy</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>4fafccf1162e3f153258cd548858838c</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile1D *</type>
      <name>createProfile1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>74b4a601d47cadf086558e78d065a5c6</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, int, double, double, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile1D *</type>
      <name>createProfile1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>355492437a7e4779f24cdbfc47c87777</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, int, double, double, double, double, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile1D *</type>
      <name>createProfile1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>3b7572af17fd204b61764e5fe8d0548f</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, const std::vector&lt; double &gt; &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile1D *</type>
      <name>createProfile1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>f7cecf150cae5af5caaf3901b09e0a4a</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, const std::vector&lt; double &gt; &amp;, double, double, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile1D *</type>
      <name>createProfile1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>a714a435415efe0b73fb54f0f4641b76</anchor>
      <arglist>(const std::string &amp;, int, double, double)</arglist>
    </member>
    <member kind="function">
      <type>IProfile1D *</type>
      <name>createProfile1D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>31b69fa7de4a4bdf56a00eb25f7070a4</anchor>
      <arglist>(const std::string &amp;, int, double, double, double, double)</arglist>
    </member>
    <member kind="function">
      <type>IProfile1D *</type>
      <name>createCopy</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>2fe9fea0b16d0833f25e91f07fabd779</anchor>
      <arglist>(const std::string &amp;, const IProfile1D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile2D *</type>
      <name>createProfile2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>ac39ad62249743dd531db315fa072b83</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, int, double, double, int, double, double, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile2D *</type>
      <name>createProfile2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>fcfe654ed91e521e151f91ab1305b42d</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, int, double, double, int, double, double, double, double, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile2D *</type>
      <name>createProfile2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>56bf86c03c97fe5b1e63b1f11d93067e</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, const std::vector&lt; double &gt; &amp;, const std::vector&lt; double &gt; &amp;, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile2D *</type>
      <name>createProfile2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>219ff43ac1e81375e8d6c7c170b25ceb</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, const std::vector&lt; double &gt; &amp;, const std::vector&lt; double &gt; &amp;, double, double, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IProfile2D *</type>
      <name>createProfile2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>e1d3f400422b7514946bcf3fb72a98fb</anchor>
      <arglist>(const std::string &amp;, int, double, double, int, double, double)</arglist>
    </member>
    <member kind="function">
      <type>IProfile2D *</type>
      <name>createProfile2D</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>a2737daeffcec89946896edab1c248c4</anchor>
      <arglist>(const std::string &amp;, int, double, double, int, double, double, double, double)</arglist>
    </member>
    <member kind="function">
      <type>IProfile2D *</type>
      <name>createCopy</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>a1b1c99707dfb95d4134c82d08e4af9d</anchor>
      <arglist>(const std::string &amp;, const IProfile2D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Histogram1D *</type>
      <name>add</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>daa22d198390bd0d8ad9307dd3122aed</anchor>
      <arglist>(const std::string &amp;path, const Histogram1D &amp;hist1, const Histogram1D &amp;hist2)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>add</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>e43ce92f3a15de99055c0c9dae573a27</anchor>
      <arglist>(const std::string &amp;path, const IHistogram1D &amp;hist1, const IHistogram1D &amp;hist2)</arglist>
    </member>
    <member kind="function">
      <type>Histogram1D *</type>
      <name>subtract</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>a5448012afd19a321fe1836298ac3803</anchor>
      <arglist>(const std::string &amp;path, const Histogram1D &amp;h1, const Histogram1D &amp;h2)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>subtract</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>088c0c6f0ac3c45f96aa95eacf9b7c01</anchor>
      <arglist>(const std::string &amp;path, const IHistogram1D &amp;hist1, const IHistogram1D &amp;hist2)</arglist>
    </member>
    <member kind="function">
      <type>Histogram1D *</type>
      <name>multiply</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>d88e6a6720dc29119408607f958adb2b</anchor>
      <arglist>(const std::string &amp;path, const Histogram1D &amp;h1, const Histogram1D &amp;h2)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>multiply</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>b02d28c2a53c8d8d8d55f80e5ee7b25f</anchor>
      <arglist>(const std::string &amp;path, const IHistogram1D &amp;hist1, const IHistogram1D &amp;hist2)</arglist>
    </member>
    <member kind="function">
      <type>Histogram1D *</type>
      <name>divide</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>2b20f54008eb0a5bba2a71189ee91c6a</anchor>
      <arglist>(const std::string &amp;path, const Histogram1D &amp;h1, const Histogram1D &amp;h2)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>divide</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>a27062897ce5c1cf52b106986afd4df1</anchor>
      <arglist>(const std::string &amp;path, const IHistogram1D &amp;hist1, const IHistogram1D &amp;hist2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkBins</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>ab55d8549487ed3abaad196ff12ba2a9</anchor>
      <arglist>(const Histogram1D &amp;h1, const Histogram1D &amp;h2) const </arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>add</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>f925bb9aa89db6b8e99b359e82e56b8e</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;, const IHistogram2D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>subtract</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>02cce900e531934217057a0e99932662</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;, const IHistogram2D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>multiply</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>13b1a6ffcb658ed3f789f4dfdd9266d8</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;, const IHistogram2D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>divide</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>44af21e768f77e1614fded624b000290</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;, const IHistogram2D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram3D *</type>
      <name>add</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>cadb9b6b69f53c943c5c657384fd45a7</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;, const IHistogram3D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram3D *</type>
      <name>subtract</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>89174395e858539e129b6331bf21d2dd</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;, const IHistogram3D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram3D *</type>
      <name>multiply</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>f78a5abb6cba3f0855f05a393a5ef47a</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;, const IHistogram3D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram3D *</type>
      <name>divide</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>55812422cc6bae5041ab61f775551a46</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;, const IHistogram3D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>projectionX</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>e005b0ebf72ebfb60782a1bd44bdbcaa</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>projectionY</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>6736776d07ab82cd4d40c34945c073ef</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>sliceX</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>e081411e24164dfb471336b672213d91</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;, int)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>sliceY</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>86f47e5433a5145ba17f18f3c840d237</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;, int)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>sliceX</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>eb2df0b2191b0b2300bb7417ac3d79f8</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;, int, int)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram1D *</type>
      <name>sliceY</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>8addeb9c6f3cdb01576f48052e488d33</anchor>
      <arglist>(const std::string &amp;, const IHistogram2D &amp;, int, int)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>projectionXY</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>64bbcd4ee9d2825f3c80b202de6f40b3</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>projectionXZ</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>0e2736d3a0df7ca55943de9c3e91fc13</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>projectionYZ</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>059dac3dba1a6f4c05e5db5c9da84ff7</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>sliceXY</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>4eed7d61f4ff7cf1800be3f9e26913e5</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;, int, int)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>sliceXZ</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>64ab9569b1ee06d1b0565043360880f0</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;, int, int)</arglist>
    </member>
    <member kind="function">
      <type>IHistogram2D *</type>
      <name>sliceYZ</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>25bc182714f3279f9090c95e0100dfed</anchor>
      <arglist>(const std::string &amp;, const IHistogram3D &amp;, int, int)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static T *</type>
      <name>error</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>efe878c4e446e2e531b8eadfe33b42f8</anchor>
      <arglist>(std::string feature)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Tree *</type>
      <name>tree</name>
      <anchorfile>classLWH_1_1HistogramFactory.html</anchorfile>
      <anchor>a8ecd7b5ed054ff6405e5254a4cd2a91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::ManagedObject</name>
    <filename>classLWH_1_1ManagedObject.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ManagedObject</name>
      <anchorfile>classLWH_1_1ManagedObject.html</anchorfile>
      <anchor>178e5436fac34529a1df6770932a6d36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>writeXML</name>
      <anchorfile>classLWH_1_1ManagedObject.html</anchorfile>
      <anchor>240cc5371b8520633c2de380dc1e4c78</anchor>
      <arglist>(std::ostream &amp;os, std::string path, std::string name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>writeFLAT</name>
      <anchorfile>classLWH_1_1ManagedObject.html</anchorfile>
      <anchor>817b77d53434384f4c484e64f6bd8c54</anchor>
      <arglist>(std::ostream &amp;os, std::string path, std::string name)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::Measurement</name>
    <filename>classLWH_1_1Measurement.html</filename>
    <member kind="function">
      <type></type>
      <name>Measurement</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>4a7664bf98b42eac6a8a4d865f5a9e14</anchor>
      <arglist>(double v=0.0, double ep=0.0, double em=0.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Measurement</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>a8c919077a76635a19922df500fa6f3b</anchor>
      <arglist>(const Measurement &amp;m)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Measurement</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>e891db907931f79cac9b071762537ff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>7fd37aed47e332f5853e7c824e610b5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>errorPlus</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>75f83dd25fef47216a9c1f2caaf2f968</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>errorMinus</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>a3da17cd0ee1d7b1099b17d12f811188</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>ab1902e8bc30a619850edf8797c68b0a</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setErrorPlus</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>7e85955bd8420f272c5c27365bd361ee</anchor>
      <arglist>(double ep)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setErrorMinus</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>5d7748fe85e715a03cac803892726f90</anchor>
      <arglist>(double em)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>val</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>1916818b1e8cdfc33c9c0acaf85a9f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>errp</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>ed2a5e1f30fc7f7cf069e437c05d0fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>errm</name>
      <anchorfile>classLWH_1_1Measurement.html</anchorfile>
      <anchor>cc3fc30ee7aff4129af33a3cc34f316c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::Tree</name>
    <filename>classLWH_1_1Tree.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>Path</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>a5ffd0d301e4dcdd2baa6e49476e4601</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; Path &gt;</type>
      <name>PathSet</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>718e1c6d50c805759cde79641d5dadf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, IManagedObject * &gt;</type>
      <name>ObjMap</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>09515f019d8a9b2084de3b0556432e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tree</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>8064e8a33b39a11e664587a288fc28ff</anchor>
      <arglist>(std::string storename, bool xml=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tree</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>8b2975a0e2b001c0273a0a6c544c8738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tree</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>655be682da3fcc18062f7f6ba9a8ceac</anchor>
      <arglist>(const Tree &amp;dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Tree</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>f6c0e46dc6059d2f085c2c4016f23ff2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>storeName</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>07f1b7581c6302475cf71c56bbb9619a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>IManagedObject *</type>
      <name>find</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>0a917ff8bc70969e1220f10abea8acca</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>ITree *</type>
      <name>findTree</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>b996667f8d70fa92401cec7df8686728</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cd</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>5cd4544644d4304cb67379f43d16cc70</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insert</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>d854d99f235de542d0fbe295c7112332</anchor>
      <arglist>(std::string str, IManagedObject *o)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pwd</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>38bb65c8366e31b4191befed04dff5a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ls</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>498dd38e7aaa7ccb3d0bf5ed3c86b671</anchor>
      <arglist>(const std::string &amp;=&quot;.&quot;, bool=false, std::ostream &amp;=std::cout) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listObjectNames</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>caec8b6cafce1fd359a5d4b6b273a0ac</anchor>
      <arglist>(const std::string &amp;=&quot;.&quot;, bool=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listObjectTypes</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>315bf0addf508ae6f1250464a56dcc32</anchor>
      <arglist>(const std::string &amp;=&quot;.&quot;, bool=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkdir</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>412ecf5b5633f89d312313309e25a122</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkdirs</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>460e1088b0888b3d757e47c79e9e1d5b</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkdirs</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>a6ae9e3315443dc9a83f4768645f906f</anchor>
      <arglist>(Path p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rmdir</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>c802738d71f77b438db4548624c8bb84</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rm</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>896b3c6ea0ac982c3c4b59647199ee3a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>findPath</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>d7105c944cd9868ceaed4568212cce00</anchor>
      <arglist>(const IManagedObject &amp;o) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mv</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>e51f81751863826d63d915921421c74c</anchor>
      <arglist>(const std::string &amp;oldp, const std::string &amp;newp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>commit</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>4e9b4e630db9853be0500df5fb8192dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverwrite</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>9e58dffe5d529f73fffd791b29736d6f</anchor>
      <arglist>(bool o=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cp</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>5bd92b0846e7084260d6255f28be7a8d</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;, bool=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>symlink</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>95d3e29e79d8e7dc1d1cb1b43e002e70</anchor>
      <arglist>(const std::string &amp;, const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mount</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>f67e328ff0f057be91c55100834c717c</anchor>
      <arglist>(const std::string &amp;, ITree &amp;, const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unmount</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>0af34ecba2d45836b2bd69e5c53e9acd</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>close</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>8824737a9ffefa3ac1753bfc670a2638</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>cast</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>7eb2173b1fa1f55fcc6b71f8faff09fb</anchor>
      <arglist>(const std::string &amp;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>sts</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>7abd35ec1345af3dac2a7aa433b0a5b9</anchor>
      <arglist>(std::string s) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>stn</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>a900a41b52b7785bfc2376bc27927be2</anchor>
      <arglist>(std::string s) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>fullpath</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>6cdeedeb25bd5b06324ff327a6c53c15</anchor>
      <arglist>(std::string d) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>str2pth</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>c809518a1337a5cbb6235af279db9f1d</anchor>
      <arglist>(std::string s) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>pth2str</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>05a1f2f42fa4c9fa59090764d369f292</anchor>
      <arglist>(const Path &amp;pth) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>purgepath</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>9171f08662daffebc893bb0e991e394e</anchor>
      <arglist>(const Path &amp;pth) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>8a444c211e5ca167727bc99f151b8aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>flat</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>aeceeb3f9a1e814b4398d14354acce56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PathSet</type>
      <name>dirs</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>4a5ad3ac7b03a2aee54abd2a84307267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ObjMap</type>
      <name>objs</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>73aa5c6d7118b1401e44efb2525456ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>cwd</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>169f244800ae7a8b7aebe8ff76fe78d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>overwrite</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>90ef15eba401f81c4702f616c4885e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>AnalysisFactory</name>
      <anchorfile>classLWH_1_1Tree.html</anchorfile>
      <anchor>0ecd43bedb3a9a470d7b9660e0bd813b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::TreeFactory</name>
    <filename>classLWH_1_1TreeFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TreeFactory</name>
      <anchorfile>classLWH_1_1TreeFactory.html</anchorfile>
      <anchor>fa2679a4863be65aff4967a0b3630bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ITree *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1TreeFactory.html</anchorfile>
      <anchor>79db5b61d0b82c9c9fa88b156533f13d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Tree *</type>
      <name>createTree</name>
      <anchorfile>classLWH_1_1TreeFactory.html</anchorfile>
      <anchor>d085f715ff1a1297d1ba8f27889838e7</anchor>
      <arglist>(const std::string &amp;storeName)</arglist>
    </member>
    <member kind="function">
      <type>ITree *</type>
      <name>create</name>
      <anchorfile>classLWH_1_1TreeFactory.html</anchorfile>
      <anchor>1edfcc5d2cd4314d3215bd89e97d5400</anchor>
      <arglist>(const std::string &amp;storeName, const std::string &amp;storeType=&quot;&quot;, bool readOnly=false, bool createNew=false, const std::string &amp;=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classLWH_1_1TreeFactory.html</anchorfile>
      <anchor>1e7a5adb3836d7a90b38e51c48f5ed8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; Tree * &gt;</type>
      <name>trees</name>
      <anchorfile>classLWH_1_1TreeFactory.html</anchorfile>
      <anchor>d9e4b7053bd2c235519fa6f05ae3efcb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LWH::VariAxis</name>
    <filename>classLWH_1_1VariAxis.html</filename>
    <member kind="function">
      <type></type>
      <name>VariAxis</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>48c55a129e93d6f48045f4293c493b10</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;edges)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VariAxis</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>ecd6f74a7ff6d62e193866249d6a12b1</anchor>
      <arglist>(const VariAxis &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VariAxis</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>6148f5116bdbb8904b209d73c0f58a5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFixedBinning</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>87d5a4490afa4460093acb05da7c1a32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lowerEdge</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>bb7c4f3a8019c93dcafd01a4864a5a6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>upperEdge</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>dc813309d8c11fd8abbfd59b559842d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bins</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>8794aeee2aa49e3638990d5edfae12c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>binEdges</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>70dbef6a3ccd6a981e0821b658b0b9b1</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binLowerEdge</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>a3b9b8d1bb17743f9d7307ac0f328aaa</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binUpperEdge</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>74c8d76292bb4a7812858c4ee3e88bc3</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binWidth</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>d5e6f2147100d7320fc3c05f8ecd75de</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>coordToIndex</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>44610534e2f04e70cd2d387552561c30</anchor>
      <arglist>(double coord) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>binMidPoint</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>1b8333d186b5ccdecf652ec9bbdb3d0c</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; double, int &gt;</type>
      <name>binco</name>
      <anchorfile>classLWH_1_1VariAxis.html</anchorfile>
      <anchor>99fc7cf85df66dbdc0971bcb877b6b04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>namespacestd.html</filename>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>namespacestd.html</anchorfile>
      <anchor>0691377c7054f107fde0a59cf395fb0b</anchor>
      <arglist>(ThePEG::Pointer::RCPtr&lt; T &gt; &amp;, ThePEG::Pointer::RCPtr&lt; T &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>namespacestd.html</anchorfile>
      <anchor>fbb67d32fbd298127a84209b44a018f4</anchor>
      <arglist>(ThePEG::Pointer::ConstRCPtr&lt; T &gt; &amp;, ThePEG::Pointer::ConstRCPtr&lt; T &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG</name>
    <filename>namespaceThePEG.html</filename>
    <class kind="class">ThePEG::FactoryBase</class>
    <class kind="class">ThePEG::LWHFactory</class>
    <class kind="class">ThePEG::HepMCConverter</class>
    <class kind="struct">ThePEG::HepMCTraitsBase</class>
    <class kind="struct">ThePEG::HepMCTraits</class>
    <class kind="class">ThePEG::Lorentz5Vector</class>
    <class kind="class">ThePEG::LorentzRotation</class>
    <class kind="class">ThePEG::SpinHalfLorentzRotation</class>
    <class kind="class">ThePEG::Transverse</class>
    <class kind="struct">ThePEG::IteratorRange</class>
    <class kind="struct">ThePEG::Base</class>
    <class kind="struct">ThePEG::TraitsType</class>
    <class kind="struct">ThePEG::Veto</class>
    <class kind="struct">ThePEG::Stop</class>
    <class kind="struct">ThePEG::MultiplicationTraits</class>
    <class kind="class">ThePEG::Cuts</class>
    <class kind="class">ThePEG::KTClus</class>
    <class kind="class">ThePEG::MultiCutBase</class>
    <class kind="class">ThePEG::OneCutBase</class>
    <class kind="class">ThePEG::SimpleDISCut</class>
    <class kind="class">ThePEG::SimpleKTCut</class>
    <class kind="class">ThePEG::TwoCutBase</class>
    <class kind="class">ThePEG::V2LeptonsCut</class>
    <class kind="class">ThePEG::Collision</class>
    <class kind="class">ThePEG::ColourBase</class>
    <class kind="class">ThePEG::ColourLine</class>
    <class kind="class">ThePEG::ColourSinglet</class>
    <class kind="class">ThePEG::Event</class>
    <class kind="struct">ThePEG::EventConfig</class>
    <class kind="class">ThePEG::EventInfoBase</class>
    <class kind="class">ThePEG::MultiColour</class>
    <class kind="class">ThePEG::Particle</class>
    <class kind="struct">ThePEG::ParticleTraits</class>
    <class kind="struct">ThePEG::Transformer</class>
    <class kind="class">ThePEG::RemnantParticle</class>
    <class kind="class">ThePEG::SelectorBase</class>
    <class kind="struct">ThePEG::ParticleSelector</class>
    <class kind="class">ThePEG::SelectIfNot</class>
    <class kind="class">ThePEG::SelectIfBoth</class>
    <class kind="class">ThePEG::SelectIfEither</class>
    <class kind="class">ThePEG::SpinBase</class>
    <class kind="struct">ThePEG::AllSelector</class>
    <class kind="struct">ThePEG::FinalStateSelector</class>
    <class kind="struct">ThePEG::IntermediateSelector</class>
    <class kind="struct">ThePEG::PrimaryCollisionSelector</class>
    <class kind="struct">ThePEG::ChargedSelector</class>
    <class kind="class">ThePEG::Step</class>
    <class kind="class">ThePEG::SubProcess</class>
    <class kind="class">ThePEG::TmpTransform</class>
    <class kind="class">ThePEG::ACDCSampler</class>
    <class kind="class">ThePEG::AnalysisHandler</class>
    <class kind="class">ThePEG::CascadeHandler</class>
    <class kind="class">ThePEG::ClusterCollapser</class>
    <class kind="class">ThePEG::DecayHandler</class>
    <class kind="class">ThePEG::EventHandler</class>
    <class kind="class">ThePEG::EventManipulator</class>
    <class kind="class">ThePEG::FixedCMSLuminosity</class>
    <class kind="class">ThePEG::FlavourGenerator</class>
    <class kind="class">ThePEG::GaussianPtGenerator</class>
    <class kind="class">ThePEG::HadronizationHandler</class>
    <class kind="class">ThePEG::HandlerBaseT</class>
    <class kind="class">ThePEG::HandlerBase</class>
    <class kind="class">ThePEG::HandlerGroupBase</class>
    <class kind="class">ThePEG::HandlerGroup</class>
    <class kind="class">ThePEG::Hint</class>
    <class kind="class">ThePEG::LastXCombInfo</class>
    <class kind="class">ThePEG::LuminosityFunction</class>
    <class kind="class">ThePEG::MultipleInteractionHandler</class>
    <class kind="class">ThePEG::PtGenerator</class>
    <class kind="class">ThePEG::SamplerBase</class>
    <class kind="class">ThePEG::SimpleFlavour</class>
    <class kind="class">ThePEG::SimpleZGenerator</class>
    <class kind="class">ThePEG::StandardEventHandler</class>
    <class kind="class">ThePEG::StandardXComb</class>
    <class kind="class">ThePEG::StepHandler</class>
    <class kind="class">ThePEG::SubProcessHandler</class>
    <class kind="class">ThePEG::XComb</class>
    <class kind="class">ThePEG::ZGenerator</class>
    <class kind="class">ThePEG::ClassDocumentationBase</class>
    <class kind="class">ThePEG::ClassDocumentation</class>
    <class kind="class">ThePEG::CommandBase</class>
    <class kind="class">ThePEG::Command</class>
    <class kind="class">ThePEG::InterfaceBase</class>
    <class kind="class">ThePEG::RefInterfaceBase</class>
    <class kind="class">ThePEG::Interfaced</class>
    <class kind="class">ThePEG::InterfacedBase</class>
    <class kind="class">ThePEG::ParameterBase</class>
    <class kind="class">ThePEG::ParameterTBase</class>
    <class kind="class">ThePEG::Parameter</class>
    <class kind="class">ThePEG::ParameterTBase&lt; string &gt;</class>
    <class kind="class">ThePEG::Parameter&lt; T, string &gt;</class>
    <class kind="class">ThePEG::ParVectorBase</class>
    <class kind="class">ThePEG::ParVectorTBase</class>
    <class kind="class">ThePEG::ParVector</class>
    <class kind="class">ThePEG::ReferenceBase</class>
    <class kind="class">ThePEG::Reference</class>
    <class kind="class">ThePEG::RefVectorBase</class>
    <class kind="class">ThePEG::RefVector</class>
    <class kind="class">ThePEG::SwitchOption</class>
    <class kind="class">ThePEG::SwitchBase</class>
    <class kind="class">ThePEG::Switch</class>
    <class kind="class">ThePEG::HEPRUP</class>
    <class kind="class">ThePEG::HEPEUP</class>
    <class kind="class">ThePEG::LesHouchesEventHandler</class>
    <class kind="class">ThePEG::LesHouchesFileReader</class>
    <class kind="class">ThePEG::LesHouchesReader</class>
    <class kind="class">ThePEG::MadGraphOneCut</class>
    <class kind="class">ThePEG::MadGraphReader</class>
    <class kind="class">ThePEG::MadGraphTwoCut</class>
    <class kind="class">ThePEG::Amplitude</class>
    <class kind="class">ThePEG::ColourLines</class>
    <class kind="class">ThePEG::DiagramBase</class>
    <class kind="class">ThePEG::ME2to2Base</class>
    <class kind="class">ThePEG::ME2to2QCD</class>
    <class kind="class">ThePEG::MEBase</class>
    <class kind="class">ThePEG::MECuts</class>
    <class kind="class">ThePEG::MEee2gZ2qq</class>
    <class kind="class">ThePEG::MEGG2GG</class>
    <class kind="class">ThePEG::MEGG2QQ</class>
    <class kind="class">ThePEG::MENCDIS</class>
    <class kind="class">ThePEG::MEQG2QG</class>
    <class kind="class">ThePEG::MEQQ2GG</class>
    <class kind="class">ThePEG::MEqq2qq</class>
    <class kind="class">ThePEG::MEQQ2qq</class>
    <class kind="class">ThePEG::MEQQ2QQ</class>
    <class kind="class">ThePEG::MEQq2Qq</class>
    <class kind="class">ThePEG::ReweightBase</class>
    <class kind="class">ThePEG::ReweightConstant</class>
    <class kind="class">ThePEG::ReweightMinPT</class>
    <class kind="class">ThePEG::Tree2toNDiagram</class>
    <class kind="class">ThePEG::BaryonRemnants</class>
    <class kind="struct">ThePEG::BaryonRemInfo</class>
    <class kind="class">ThePEG::BeamParticleData</class>
    <class kind="class">ThePEG::GRV94L</class>
    <class kind="class">ThePEG::GRV94M</class>
    <class kind="class">ThePEG::GRVBase</class>
    <class kind="class">ThePEG::LeptonLeptonPDF</class>
    <class kind="class">ThePEG::LeptonLeptonRemnant</class>
    <class kind="class">ThePEG::LHAPDF</class>
    <class kind="class">ThePEG::NoPDF</class>
    <class kind="class">ThePEG::NoRemnants</class>
    <class kind="class">ThePEG::PartonBin</class>
    <class kind="class">ThePEG::PartonBinInstance</class>
    <class kind="struct">ThePEG::RemInfoBase</class>
    <class kind="class">ThePEG::PartonExtractor</class>
    <class kind="class">ThePEG::PDF</class>
    <class kind="class">ThePEG::PDFBase</class>
    <class kind="class">ThePEG::PDFCuts</class>
    <class kind="class">ThePEG::RemnantHandler</class>
    <class kind="class">ThePEG::SoftRemnantHandler</class>
    <class kind="class">ThePEG::BreitWignerMass</class>
    <class kind="class">ThePEG::ColourPairDecayer</class>
    <class kind="struct">ThePEG::AndMatcher</class>
    <class kind="struct">ThePEG::OrMatcher</class>
    <class kind="struct">ThePEG::NotMatcher</class>
    <class kind="class">ThePEG::ConstituentParticleData</class>
    <class kind="class">ThePEG::DalitzDecayer</class>
    <class kind="class">ThePEG::Decayer</class>
    <class kind="class">ThePEG::DecayMode</class>
    <class kind="class">ThePEG::DummyDecayer</class>
    <class kind="class">ThePEG::FlatDecayer</class>
    <class kind="class">ThePEG::MassGenerator</class>
    <class kind="class">ThePEG::Matcher</class>
    <class kind="struct">ThePEG::MatcherType</class>
    <class kind="class">ThePEG::MatcherBase</class>
    <class kind="class">ThePEG::OmegaPhi3PiDecayer</class>
    <class kind="class">ThePEG::Onium3GDecayer</class>
    <class kind="class">ThePEG::ParticleData</class>
    <class kind="class">ThePEG::PDT</class>
    <class kind="class">ThePEG::QuarksToHadronsDecayer</class>
    <class kind="class">ThePEG::RemnantData</class>
    <class kind="class">ThePEG::RemnantDecayer</class>
    <class kind="class">ThePEG::SimpleBaryonRemnantDecayer</class>
    <class kind="struct">ThePEG::AnyMatcher</class>
    <class kind="struct">ThePEG::ChargedMatcher</class>
    <class kind="struct">ThePEG::PositiveMatcher</class>
    <class kind="struct">ThePEG::NeutralMatcher</class>
    <class kind="struct">ThePEG::NegativeMatcher</class>
    <class kind="struct">ThePEG::BaryonMatcher</class>
    <class kind="struct">ThePEG::MesonMatcher</class>
    <class kind="struct">ThePEG::DiquarkMatcher</class>
    <class kind="struct">ThePEG::QuarkMatcher</class>
    <class kind="struct">ThePEG::LeptonMatcher</class>
    <class kind="struct">ThePEG::LightQuarkMatcher</class>
    <class kind="struct">ThePEG::LightAntiQuarkMatcher</class>
    <class kind="struct">ThePEG::StandardQCDPartonMatcher</class>
    <class kind="struct">ThePEG::PseudoScalarMesonMatcher</class>
    <class kind="struct">ThePEG::VectorMesonMatcher</class>
    <class kind="class">ThePEG::Tau2HadronsDecayer</class>
    <class kind="class">ThePEG::V2PPDecayer</class>
    <class kind="class">ThePEG::WeakToHadronsDecayer</class>
    <class kind="class">ThePEG::WidthGenerator</class>
    <class kind="class">ThePEG::InputDescription</class>
    <class kind="class">ThePEG::PersistentIStream</class>
    <class kind="class">ThePEG::PersistentOStream</class>
    <class kind="class">ThePEG::BaseRepository</class>
    <class kind="class">ThePEG::CurrentGenerator</class>
    <class kind="class">ThePEG::EventGenerator</class>
    <class kind="class">ThePEG::Main</class>
    <class kind="class">ThePEG::MultiEventGenerator</class>
    <class kind="class">ThePEG::RandomGenerator</class>
    <class kind="class">ThePEG::Repository</class>
    <class kind="class">ThePEG::StandardRandom</class>
    <class kind="class">ThePEG::Strategy</class>
    <class kind="class">ThePEG::ThePEGStrategy</class>
    <class kind="class">ThePEG::UseRandom</class>
    <class kind="class">ThePEG::TestLHAPDF</class>
    <class kind="class">ThePEG::AlphaEMBase</class>
    <class kind="class">ThePEG::AlphaSBase</class>
    <class kind="class">ThePEG::CKMBase</class>
    <class kind="class">ThePEG::O1AlphaS</class>
    <class kind="class">ThePEG::SimpleAlphaEM</class>
    <class kind="class">ThePEG::StandardCKM</class>
    <class kind="class">ThePEG::StandardModelBase</class>
    <class kind="class">ThePEG::CFileLineReader</class>
    <class kind="class">ThePEG::ClassDescriptionBase</class>
    <class kind="class">ThePEG::ClassDescriptionTBase</class>
    <class kind="class">ThePEG::AbstractClassDescription</class>
    <class kind="class">ThePEG::ClassDescription</class>
    <class kind="class">ThePEG::NoPIOClassDescription</class>
    <class kind="class">ThePEG::AbstractNoPIOClassDescription</class>
    <class kind="struct">ThePEG::ClassDescriptionHelper</class>
    <class kind="struct">ThePEG::ClassTraitsType</class>
    <class kind="struct">ThePEG::ClassTraitsBase</class>
    <class kind="struct">ThePEG::ClassTraits</class>
    <class kind="struct">ThePEG::BaseClassTrait</class>
    <class kind="class">ThePEG::CompSelector</class>
    <class kind="class">ThePEG::Debug</class>
    <class kind="class">ThePEG::DescriptionList</class>
    <class kind="class">ThePEG::Direction</class>
    <class kind="class">ThePEG::DIterator</class>
    <class kind="class">ThePEG::DynamicLoader</class>
    <class kind="struct">ThePEG::OEnum</class>
    <class kind="struct">ThePEG::IEnum</class>
    <class kind="class">ThePEG::Exception</class>
    <class kind="class">ThePEG::FixedSizeAllocator</class>
    <class kind="struct">ThePEG::SizeOf8</class>
    <class kind="struct">ThePEG::FixedAllocator</class>
    <class kind="class">ThePEG::Allocator</class>
    <class kind="class">ThePEG::HoldFlag</class>
    <class kind="class">ThePEG::HoldFlag&lt; bool &gt;</class>
    <class kind="class">ThePEG::Interval</class>
    <class kind="class">ThePEG::Level</class>
    <class kind="class">ThePEG::LoopGuard</class>
    <class kind="class">ThePEG::MaxCmp</class>
    <class kind="class">ThePEG::Named</class>
    <class kind="class">ThePEG::ObjectIndexer</class>
    <class kind="class">ThePEG::Rebinder</class>
    <class kind="class">ThePEG::Selector</class>
    <class kind="struct">ThePEG::SimplePhaseSpace</class>
    <class kind="class">ThePEG::StringUtils</class>
    <class kind="class">ThePEG::SystemUtils</class>
    <class kind="struct">ThePEG::Throw</class>
    <class kind="class">ThePEG::TimeCounter</class>
    <class kind="class">ThePEG::MainTimer</class>
    <class kind="class">ThePEG::Timer</class>
    <class kind="struct">ThePEG::Triplet</class>
    <class kind="struct">ThePEG::TypeInfo</class>
    <class kind="struct">ThePEG::OUnit</class>
    <class kind="struct">ThePEG::IUnit</class>
    <class kind="struct">ThePEG::UtilityBase</class>
    <class kind="struct">ThePEG::Utilities</class>
    <class kind="class">ThePEG::VSelector</class>
    <class kind="class">ThePEG::XSecStat</class>
    <namespace>ThePEG::Constants</namespace>
    <namespace>ThePEG::Group</namespace>
    <namespace>ThePEG::Helicity</namespace>
    <namespace>ThePEG::Interface</namespace>
    <namespace>ThePEG::Math</namespace>
    <namespace>ThePEG::ParticleID</namespace>
    <namespace>ThePEG::Pointer</namespace>
    <namespace>ThePEG::Units</namespace>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::FactoryBase &gt;::pointer</type>
      <name>HistFacPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f2b6fe9fbf928f897e138196b7a5475d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::FactoryBase &gt;::const_pointer</type>
      <name>cHistFacPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>80dcb8b8b3e67397e2c90dec163d1734</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::FactoryBase &gt;::transient_pointer</type>
      <name>tHistFacPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7815a68820294e9ab8b3f0f54ab7076f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::FactoryBase &gt;::transient_const_pointer</type>
      <name>tcHistFacPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>597725dc8708ad4318eeb5ac59794bef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CLHEP::ThePEGRandBreitWigner</type>
      <name>RandBreitWigner</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>38ffe90c5399441ad9686f165590ed88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CLHEP::ThePEGRandExponential</type>
      <name>RandExponential</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d0380d10b526bafd8df735a7d5afbbfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CLHEP::ThePEGRandPoisson</type>
      <name>RandPoisson</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fbbef89494950878425fb42b4308c3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CLHEP::HepLorentzRotation</type>
      <name>SpinOneLorentzRotation</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a5241770a5f841ca5c64627fbd39477f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; double &gt;</type>
      <name>Complex</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2556a9653ca7a680a5e17b866abaeb43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; PDPtr, less&lt; PDPtr &gt;, Allocator&lt; PDPtr &gt; &gt;</type>
      <name>ParticleDataSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a1700a899c9d0fddb8044303139a1dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PDPtr &gt;</type>
      <name>PDVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1d720f2d1fbcb8fb3924d0820bcdd3f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; cPDPtr &gt;</type>
      <name>cPDVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f183f29010cb64498a402fd5eb650044</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tPDPtr &gt;</type>
      <name>tPDVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>820e17796ec1aecca4db1ae8f6f1ac6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tcPDPtr &gt;</type>
      <name>tcPDVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e960840ea888ba45627b84d1c3a5dcfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; PMPtr, less&lt; PMPtr &gt;, Allocator&lt; PMPtr &gt; &gt;</type>
      <name>MatcherSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>29fa27b3cf4fb3289a2faa1d7676d2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; DMPtr, less&lt; DMPtr &gt;, Allocator&lt; DMPtr &gt; &gt;</type>
      <name>DecayModeSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0a75ec1ced80c3bd61c47ea7ce7eae40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; IBPtr, less&lt; IBPtr &gt;, Allocator&lt; IBPtr &gt; &gt;</type>
      <name>ObjectSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b99dd76174d74fa4a1d07fa54f0508af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; IBPtr, less&lt; IBPtr &gt;, Allocator&lt; IBPtr &gt; &gt;</type>
      <name>DependencySet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e66d164ede5d4be1dc08f3bd6494bbfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; long, PDPtr, less&lt; long &gt;, Allocator&lt; std::pair&lt; long const, PDPtr &gt; &gt; &gt;</type>
      <name>ParticleMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e99b41f65a3087d40dda71ed5cb35437</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; string, IBPtr, less&lt; string &gt;, Allocator&lt; std::pair&lt; string const, IBPtr &gt; &gt; &gt;</type>
      <name>ObjectMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>427f58f67f40b840a3a606d519e26c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; IBPtr, DependencySet, less&lt; IBPtr &gt;, Allocator&lt; std::pair&lt; IBPtr const, DependencySet &gt; &gt; &gt;</type>
      <name>DependencyMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8ff0e4e06626999490e51a12a62d1a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; IBPtr &gt;</type>
      <name>IVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e110bd975b76c619ca2af32cf7ab12a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; cIBPtr &gt;</type>
      <name>CIVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>095808e71f718b8e1a561350ca30f37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PPtr &gt;</type>
      <name>ParticleVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a01ae5d763b3b76942bb7b80e5a182f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PPtr &gt;</type>
      <name>PVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b061629adb6fa545317c4af272a0b599</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; cPPtr &gt;</type>
      <name>cPVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>83b122243ff4a5954304e977227fa334</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tPPtr &gt;</type>
      <name>tPVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>82ac9680b5e88529c2ffecfccc85bd5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tcPPtr &gt;</type>
      <name>tcPVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e5913d91aef4c24595e6bcf61e0c0c8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; string, const InterfaceBase *, less&lt; string &gt;, Allocator&lt; std::pair&lt; string const, const InterfaceBase * &gt; &gt; &gt;</type>
      <name>InterfaceMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0248f1c8c6e5f7083d06efeaf9abad61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Rebinder&lt; InterfacedBase &gt;</type>
      <name>TranslationMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c91ede12a1d16a762a83f029519a867c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; string, EGPtr, less&lt; string &gt;, Allocator&lt; std::pair&lt; string const, EGPtr &gt; &gt; &gt;</type>
      <name>GeneratorMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c48666f37e54dd84b2f771e0f84aabc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; AnaPtr &gt;</type>
      <name>AnalysisVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>418681392acf8eedff9cb7913ca2fa68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; PDPtr, PDPtr &gt;</type>
      <name>PDPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cba2b8743eaf2bc45047dfef42c5b897</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; cPDPtr, cPDPtr &gt;</type>
      <name>cPDPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3d73fe4fbb248b38f4eb60ad9a9243c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tPDPtr, tPDPtr &gt;</type>
      <name>tPDPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4976dec8dc0f56840d4ccccf6524c716</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tcPDPtr, tcPDPtr &gt;</type>
      <name>tcPDPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9096b22f5636d09d908df8269d790009</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; PPtr, PPtr &gt;</type>
      <name>PPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>074f012a304ba7abb69387889511532b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; cPPtr, cPPtr &gt;</type>
      <name>cPPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c7338279c31397055f8794301aede35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tPPtr, tPPtr &gt;</type>
      <name>tPPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>98ed1f22f1be3e6fa098e975d45cf397</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tcPPtr, tcPPtr &gt;</type>
      <name>tcPPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>940ce1547c69c2a8c3e7c5661be0bea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Interval&lt; Energy2 &gt;</type>
      <name>SInterval</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8adf6989c8e3f646f6a952751a3c7d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; SInterval &gt;</type>
      <name>SIntervalVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b12a3d74103dad52d6ba401244abd168</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tPDPair &gt;</type>
      <name>tPartonPairVec</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ad4480ba40e72769c8c987cd52e34e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tColinePtr, tColinePtr &gt;</type>
      <name>tColinePair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a685e23d169ab33bce8df578d7fcc5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; tDMPtr, less&lt; tDMPtr &gt;, Allocator&lt; tDMPtr &gt; &gt;</type>
      <name>DecaySet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>71bd1bb2380f133365a67249dd38f54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; string, less&lt; string &gt;, Allocator&lt; string &gt; &gt;</type>
      <name>StringSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4ed3019e1af895121c06cf5de36818eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; Energy &gt;</type>
      <name>EnergyVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a4de20fd8d3944bbdc1cc1e5d13d4483</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; EIPtr &gt;</type>
      <name>EIVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0149a559d9f1217b6e70dbcbfc805229</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; double &gt;</type>
      <name>DVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b1428c846136050edaf52f604acdde55</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; double, double &gt;</type>
      <name>DPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c0888a32049c5b023e71830de77f849c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; InterfacedBase &gt;::pointer</type>
      <name>IBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7f865a9e19143cd344730b2d44981b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; InterfacedBase &gt;::const_pointer</type>
      <name>cIBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2a49339aa35c0de62e469071ca565a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; InterfacedBase &gt;::transient_pointer</type>
      <name>tIBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>36f47ec6e444f9df2f91d6bbecb6254e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; InterfacedBase &gt;::transient_const_pointer</type>
      <name>tcIBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e9fe3951d78d063d93381d3c1a1a993b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Interfaced &gt;::pointer</type>
      <name>IPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>39473481c28efc973683fe9544b075ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Interfaced &gt;::const_pointer</type>
      <name>cIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>eb4be0f0c9cbc28a0ef5d5eb4cc8cfb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Interfaced &gt;::transient_pointer</type>
      <name>tIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>df209c5dd1b1cfbf01a7e263ac96ba02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Interfaced &gt;::transient_const_pointer</type>
      <name>tcIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e9f92fb60b03fba5800a9c6c815ea242</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleData &gt;::pointer</type>
      <name>PDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f78b56a2a9eef2c20060fd7708370359</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleData &gt;::const_pointer</type>
      <name>cPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>86858222a5d86a69fccc4b7e8f8a6965</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleData &gt;::transient_pointer</type>
      <name>tPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0ec8344eb6d3796b6c31dcbb95846346</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleData &gt;::transient_const_pointer</type>
      <name>tcPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a26618716713aa109d91ea728dd56479</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MatcherBase &gt;::pointer</type>
      <name>PMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>19dd003b6d924c65808e99f23b9f8355</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MatcherBase &gt;::const_pointer</type>
      <name>cPMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>40205df43562f18828e3d398b1d8d791</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MatcherBase &gt;::transient_pointer</type>
      <name>tPMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1cc9ba6a57e7fcec7bf835fc606b58e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MatcherBase &gt;::transient_const_pointer</type>
      <name>tcPMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1f61e08180c90885f8625e6ef1c47f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayMode &gt;::pointer</type>
      <name>DMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>66a6661b8f08d81a97abecc517f7a426</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayMode &gt;::const_pointer</type>
      <name>cDMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ff2a51cf46785d0d04071b6872ce3da5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayMode &gt;::transient_pointer</type>
      <name>tDMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>78f4a6963144395bdefd5c1b0568102c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayMode &gt;::transient_const_pointer</type>
      <name>tcDMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4f334fdf763498e27ae02536419093cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Particle &gt;::pointer</type>
      <name>PPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>40c802d60a7398a6702eb5980d4df3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Particle &gt;::const_pointer</type>
      <name>cPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0e878918e275ee57cf21ef31fdedcfe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Particle &gt;::transient_pointer</type>
      <name>tPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cba5064868293f9784a5d03f9c8aa86b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Particle &gt;::transient_const_pointer</type>
      <name>tcPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>359f550081b648c4c7ed44cb12a3575a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::pointer</type>
      <name>EGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d2d14077d03db7fb627ab50022fd17aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::const_pointer</type>
      <name>cEGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c33bf8f397091b483520a08be7dcbdd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::transient_pointer</type>
      <name>tEGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4caab2752a0c8ad8d0e8c19a8e46e6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::transient_const_pointer</type>
      <name>tcEGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7eee6f98b03fda7d98e9628bfa5e00bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::pointer</type>
      <name>EHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c84ed38f98c1c0693ddba8ff1646f688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::const_pointer</type>
      <name>cEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e7d40b21a1cbd0e2ba674a78c0035011</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::transient_pointer</type>
      <name>tEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8b9462af61205651f49d9a83ed3beef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::transient_const_pointer</type>
      <name>tcEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c51a871f4b3397507ebb60aab1b2ae92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StepHandler &gt;::pointer</type>
      <name>StepHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>10a10be13c61e3f7f7287bbaab7254d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StepHandler &gt;::const_pointer</type>
      <name>cStepHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>59b806fea565f67b9602adf444e69b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StepHandler &gt;::transient_pointer</type>
      <name>tStepHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f9fcd03827405450a3c8644c1a66630e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StepHandler &gt;::transient_const_pointer</type>
      <name>tcStepHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2d78f97f728d7d1ddf6aabdb4ef652b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Hint &gt;::pointer</type>
      <name>HintPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2a266baa164f5c5e9adf778af225d05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Hint &gt;::const_pointer</type>
      <name>cHintPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e0166ddb0644d1e47dcc729bd1d1e2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Hint &gt;::transient_pointer</type>
      <name>tHintPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>17980d4c011197c21be059549bc9f80d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Hint &gt;::transient_const_pointer</type>
      <name>tcHintPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3a46056184336b8929b80f4b7a36bb5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HadronizationHandler &gt;::pointer</type>
      <name>HadrHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>70acb7b232506f3572ba5bc216ff9430</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HadronizationHandler &gt;::const_pointer</type>
      <name>cHadrHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4ca054a663c1b9a653d9762c59baba03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HadronizationHandler &gt;::transient_pointer</type>
      <name>tHadrHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9b89a88f6181412bd813dd7a4a19db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HadronizationHandler &gt;::transient_const_pointer</type>
      <name>tcHadrHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9c6ec9c8a7d2d508178a3781f0826c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; CascadeHandler &gt;::pointer</type>
      <name>CascHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>062950a97bd6f867ea706cccf57d3305</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; CascadeHandler &gt;::const_pointer</type>
      <name>cCascHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e4e5c30e807b007794b70135171341ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; CascadeHandler &gt;::transient_pointer</type>
      <name>tCascHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>aa0f9e27a7e35cf54d3d801926ef3e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; CascadeHandler &gt;::transient_const_pointer</type>
      <name>tcCascHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fb3c31fb10775802138ace6a7c6dc30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultipleInteractionHandler &gt;::pointer</type>
      <name>MIHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e77e2c3c65b4dc73feb2ff192bd4437f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultipleInteractionHandler &gt;::const_pointer</type>
      <name>cMIHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2895ef4cd5000eac9472bab7900cf9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultipleInteractionHandler &gt;::transient_pointer</type>
      <name>tMIHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0921dbe712fa2f4b24b3f5d3c0cc9cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultipleInteractionHandler &gt;::transient_const_pointer</type>
      <name>tcMIHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7a420b7f8408531b0984987444c07d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayHandler &gt;::pointer</type>
      <name>DecayHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a5a9f3d52ea529fed67b8c7ca18f4357</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayHandler &gt;::const_pointer</type>
      <name>cDecayHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6ae042770228b1efca1ede3f1b6b05cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayHandler &gt;::transient_pointer</type>
      <name>tDecayHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a8d593c4ce9d167af0cf7bccd597faaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DecayHandler &gt;::transient_const_pointer</type>
      <name>tcDecayHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e55591fcc8bc515db2a544dc522c2303</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PileupHandler &gt;::pointer</type>
      <name>PileHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6ab4cb13e153dac63fd7dc2af0f6d6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PileupHandler &gt;::const_pointer</type>
      <name>cPileHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>27789cd89bd65c333e25603ea1496eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PileupHandler &gt;::transient_pointer</type>
      <name>tPileHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ac436ea47bb54185c1c6bfdde39eff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PileupHandler &gt;::transient_const_pointer</type>
      <name>tcPileHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>91ee1385928fe9c9c9c8eca1d28e0758</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LuminosityFunction &gt;::pointer</type>
      <name>LumiFnPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>754ccc740c75297c39c30786868ba94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LuminosityFunction &gt;::const_pointer</type>
      <name>cLumiFnPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>555959c14b86f64b99435ac083819bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LuminosityFunction &gt;::transient_pointer</type>
      <name>tLumiFnPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8fea71abc83407745c75fa5d93cbcd0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LuminosityFunction &gt;::transient_const_pointer</type>
      <name>tcLumiFnPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>710e2cb23554576eec0a418b42156d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonExtractor &gt;::pointer</type>
      <name>PExtrPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1773e825a3f57e07d87297e8d7fd0e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonExtractor &gt;::const_pointer</type>
      <name>cPExtrPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c30ef65066802a89b5ee1b0afa84acf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonExtractor &gt;::transient_pointer</type>
      <name>tPExtrPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1b970c565a977057f4299777fa790e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonExtractor &gt;::transient_const_pointer</type>
      <name>tcPExtrPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ab56af07a9f0760926c783110b933033</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RandomGenerator &gt;::pointer</type>
      <name>RanGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>5c5baf78806b8300e0879daedaf7c9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RandomGenerator &gt;::const_pointer</type>
      <name>cRanGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>66dc089da218dca8997c14afee7e4f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RandomGenerator &gt;::transient_pointer</type>
      <name>tRanGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>322b0102feac51c17722bc04cb943c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RandomGenerator &gt;::transient_const_pointer</type>
      <name>tcRanGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6c8facc81ab53ca7915e42ebe45a8ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; AnalysisHandler &gt;::pointer</type>
      <name>AnaPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>564b2005104631ff8da56048389eba53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; AnalysisHandler &gt;::const_pointer</type>
      <name>cAnaPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3701aba0e921937167240d4e6e6851d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; AnalysisHandler &gt;::transient_pointer</type>
      <name>tAnaPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bbb999ac6a8f92692499e83832ee65a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; AnalysisHandler &gt;::transient_const_pointer</type>
      <name>tcAnaPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>94372dacad61d4d1fe355a469accf9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventManipulator &gt;::pointer</type>
      <name>EvtManipPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ff447e7fe2c8a6a436896943bf094361</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventManipulator &gt;::const_pointer</type>
      <name>cEvtManipPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d78893a5349f081a6d9c19d224a66f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventManipulator &gt;::transient_pointer</type>
      <name>tEvtManipPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>33bcb45248307a3ec53e103517cf0236</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventManipulator &gt;::transient_const_pointer</type>
      <name>tcEvtManipPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e04ea83ca91980da347f6ae014223afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Decayer &gt;::pointer</type>
      <name>DecayerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>49b96bf759e56acc5900395935726193</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Decayer &gt;::const_pointer</type>
      <name>cDecayerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>973b4a1e8337c75c6afae57334d69ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Decayer &gt;::transient_pointer</type>
      <name>tDecayerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>60d70117928c03f8e2394446421dbacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Decayer &gt;::transient_const_pointer</type>
      <name>tcDecayerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>704fa37c96876d7a15858b38db955c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Event &gt;::pointer</type>
      <name>EventPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a8a993157b782d0eccfc7b2823150241</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Event &gt;::const_pointer</type>
      <name>cEventPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f6bab5d9eabf52ff7ef9dc96c2b365a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Event &gt;::transient_pointer</type>
      <name>tEventPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>17d73e7976b4bf91a68f0a2e41e5297a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Event &gt;::transient_const_pointer</type>
      <name>tcEventPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7aa1bd50378abf90d9310f13641510be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Collision &gt;::pointer</type>
      <name>CollPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0d4fec5ebf9dbd1e0f2f18c5f5a897d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Collision &gt;::const_pointer</type>
      <name>cCollPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>38f116c354d24cee0666d4a4d455cabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Collision &gt;::transient_pointer</type>
      <name>tCollPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8212d1c005cca8ea6afd79fe95f7f00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Collision &gt;::transient_const_pointer</type>
      <name>tcCollPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bb59a81726986f1d7c2cc6743465539e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Step &gt;::pointer</type>
      <name>StepPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ea0d5196d5d3a64b4e8fdaf4cfa2a6c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Step &gt;::const_pointer</type>
      <name>cStepPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6f292d88ebea8c3e5256c4e409ef7d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Step &gt;::transient_pointer</type>
      <name>tStepPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>5ebfeb8ba59f54c0d65b1bc9c0953e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Step &gt;::transient_const_pointer</type>
      <name>tcStepPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9f361d934b33da801e39397253be6649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcess &gt;::pointer</type>
      <name>SubProPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4163a59bbf6f69f412e47692f3f61cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcess &gt;::const_pointer</type>
      <name>cSubProPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>04727eaad18a9173b8b864a05c6fccc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcess &gt;::transient_pointer</type>
      <name>tSubProPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>10bbc33e55cbd3807e6837c825a925be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcess &gt;::transient_const_pointer</type>
      <name>tcSubProPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>330ade944671c2bd1a78a3fa1f9e15ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::pointer</type>
      <name>StrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cd3c16f62faa174f876f33055788ff74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::const_pointer</type>
      <name>cStrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>633a13d13c69afb8bdb0d3af3349099c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::transient_pointer</type>
      <name>tStrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f34cc9e132054633e12289746cbe253e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::transient_const_pointer</type>
      <name>tcStrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d18f743fc4dc5e0fd827721b0978d0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XComb &gt;::pointer</type>
      <name>XCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1f948ca1dc279e2eb52e22eb841ba868</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XComb &gt;::const_pointer</type>
      <name>cXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>124346596746133556c39545038e4fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XComb &gt;::transient_pointer</type>
      <name>tXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d3ff7c5bd693a3285b63993b70b39358</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XComb &gt;::transient_const_pointer</type>
      <name>tcXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>40fdc3152b0dccb482f0b098bbcd0a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemnantHandler &gt;::pointer</type>
      <name>RemHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e26bbb07e49f0aa81494fc49d6784ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemnantHandler &gt;::const_pointer</type>
      <name>cRemHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f2a8005870519b108a4d96c6fcc565de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemnantHandler &gt;::transient_pointer</type>
      <name>tRemHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6026b0c3739da5fdce71a70220de23a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemnantHandler &gt;::transient_const_pointer</type>
      <name>tcRemHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c23ff450f94600e571a2334ed1c6f18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PDFBase &gt;::pointer</type>
      <name>PDFPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b22f23e71813c3ee20393141b73467bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PDFBase &gt;::const_pointer</type>
      <name>cPDFPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2156567499a908d4058bb2d6afc232ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PDFBase &gt;::transient_pointer</type>
      <name>tPDFPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>be1a74db5dd0596512c58e83b8c6666c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PDFBase &gt;::transient_const_pointer</type>
      <name>tcPDFPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2058d383ddcb9491fe1b3b1f8773316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardModelBase &gt;::pointer</type>
      <name>SMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ce881fe50c242724f2a29cc102530d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardModelBase &gt;::const_pointer</type>
      <name>cSMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>02c4087fb982351172bf1f1b0ff7729d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardModelBase &gt;::transient_pointer</type>
      <name>tSMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6b99963edbebdb3a8f87cc09b5e4ff67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardModelBase &gt;::transient_const_pointer</type>
      <name>tcSMPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3ed312816c0aa5b1c87dc52e2ad84b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourBase &gt;::pointer</type>
      <name>CBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2b2f41c8513f1be31f1e53bc978e9f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourBase &gt;::const_pointer</type>
      <name>cCBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2535b5bd61df87e9d44694605c8ae96b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourBase &gt;::transient_pointer</type>
      <name>tCBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d8a59894f0b7e835e53420b951690358</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourBase &gt;::transient_const_pointer</type>
      <name>tcCBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>864b8301b3ed44241e6dd13e8b8dcf05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinBase &gt;::pointer</type>
      <name>SpinPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3b7cf4e112b6844dda1ddda5e0eaa491</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinBase &gt;::const_pointer</type>
      <name>cSpinPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>23c5272088057bb55173f567d0467b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinBase &gt;::transient_pointer</type>
      <name>tSpinPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bd9200add6c772df46407358d655875e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinBase &gt;::transient_const_pointer</type>
      <name>tcSpinPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>90a37792695173233ee017b6fdffc8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventInfoBase &gt;::pointer</type>
      <name>EIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f274d9bbe9d8784c2c37c87143431a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventInfoBase &gt;::const_pointer</type>
      <name>cEIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>333f71c4383b68f7276b4fabad16a6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventInfoBase &gt;::transient_pointer</type>
      <name>tEIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d3d396dca236c34acbe0cc49673411eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventInfoBase &gt;::transient_const_pointer</type>
      <name>tcEIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>30ee29a8e0480a8bb66da44f7b47e9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ReweightBase &gt;::pointer</type>
      <name>ReweightPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1288dac6511ed261856e0956f2f824fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ReweightBase &gt;::const_pointer</type>
      <name>cReweightPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e70d002a321b00590f51f5da67cb3de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ReweightBase &gt;::transient_pointer</type>
      <name>tReweightPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>343ba5de204a0427a430b35964db33ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ReweightBase &gt;::transient_const_pointer</type>
      <name>tcReweightPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>30a0f93bbda39671f18c5a9d56281f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourLine &gt;::pointer</type>
      <name>ColinePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>28526bcf0b18b64a9f887574552741f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourLine &gt;::const_pointer</type>
      <name>cColinePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3cd4b8dd1f9aa884cc30f3706ae26aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourLine &gt;::transient_pointer</type>
      <name>tColinePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>67f450ba61e61ab64f51828239406810</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ColourLine &gt;::transient_const_pointer</type>
      <name>tcColinePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2be538f8fe7cdaa5872160a6c4c1319d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::pointer</type>
      <name>BPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>242ec6bfd4cc1f13918ac61ef5fbbccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::const_pointer</type>
      <name>cBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>11a5c25cbb1a29a434343cb4491837cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::transient_pointer</type>
      <name>tBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>151d4fdf8199f3831fbf398ccb4b9db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::transient_const_pointer</type>
      <name>tcBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>115a9007f3e73554f6e8b5cb6df1a832</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Base</type>
      <name>PersistentBase</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2c8d24233a015d2e95ea8289b3839110</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Cuts &gt;::pointer</type>
      <name>CutsPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4e48a0c52e8ad2ac02bfc949f17b8cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Cuts &gt;::const_pointer</type>
      <name>cCutsPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ee7ba1b7a3e254ce214feff5957e26bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Cuts &gt;::transient_pointer</type>
      <name>tCutsPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>80d9e955e203c4727614b64d3481c719</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Cuts &gt;::transient_const_pointer</type>
      <name>tcCutsPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4c3b92982165d4547136706f638ee944</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultiCutBase &gt;::pointer</type>
      <name>MultiCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>65b44413f40853a99ed46439cedb59b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultiCutBase &gt;::const_pointer</type>
      <name>cMultiCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6ecc18f72ef5ffd38de7e87b998d5158</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultiCutBase &gt;::transient_pointer</type>
      <name>tMultiCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>62af0de6cbff4b6748e5b03f1cc39e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MultiCutBase &gt;::transient_const_pointer</type>
      <name>tcMultiCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>dfa45c673b1d99b70a7f6143e6269809</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; OneCutBase &gt;::pointer</type>
      <name>OneCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a91764492193ac0a3347ee448ec13249</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; OneCutBase &gt;::const_pointer</type>
      <name>cOneCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>431e1065d07ffc9b99cfb03af4713d93</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; OneCutBase &gt;::transient_pointer</type>
      <name>tOneCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f84708ab8ab0dbd471c48a6d8235c74b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; OneCutBase &gt;::transient_const_pointer</type>
      <name>tcOneCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c9f066adcac7bcbe4d3f4e5830c7b1bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; TwoCutBase &gt;::pointer</type>
      <name>TwoCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7251cdab104dace497153561b48302e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; TwoCutBase &gt;::const_pointer</type>
      <name>cTwoCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>88f503a3c294b24eede28786a394d41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; TwoCutBase &gt;::transient_pointer</type>
      <name>tTwoCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d001ade7900618e19aa2f16d2030aa80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; TwoCutBase &gt;::transient_const_pointer</type>
      <name>tcTwoCutPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>176b189968aaae54a92780a23ac2a306</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Base</type>
      <name>EventRecordBase</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a000f171866aea56540f3d673a9c3322</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventRecordBase &gt;::pointer</type>
      <name>EventBasePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>703b3669b712930b6ff592d70835ec8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventRecordBase &gt;::const_pointer</type>
      <name>cEventBasePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>32eec95439c33a4a732ac07f378dbfa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventRecordBase &gt;::transient_pointer</type>
      <name>tEventBasePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>006c4949e4a7144a758018bdd851e19f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventRecordBase &gt;::transient_const_pointer</type>
      <name>tcEventBasePtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0df177f18080e3affe46d35ae4c164f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Rebinder&lt; EventRecordBase &gt;</type>
      <name>EventTranslationMap</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>583df33e48205d2621b615aced1e8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Particle</type>
      <name>ParticleClass</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f297feb2a84aaa457f153a5fb49015cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleData</type>
      <name>ParticleDataClass</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>44732b381ea26d3b4992329a339de3d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleDataClass &gt;::pointer</type>
      <name>EventPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9a12cc4ebab76b3ab2a5862957ef9b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleDataClass &gt;::const_pointer</type>
      <name>cEventPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f90f61203a5340419f35caf5ab933033</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleDataClass &gt;::transient_pointer</type>
      <name>tEventPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8544939dbba3a803b409c87635c93159</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ParticleDataClass &gt;::transient_const_pointer</type>
      <name>tcEventPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ef3de8b7436a0ead4d1e5fcff09dad6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tPPtr &gt;</type>
      <name>tParticleVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>98ed3941b0be2cf9d711e67876236b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PPtr &gt;</type>
      <name>ParticleVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a01ae5d763b3b76942bb7b80e5a182f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; PPtr, less&lt; PPtr &gt;, Allocator&lt; PPtr &gt; &gt;</type>
      <name>ParticleSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>53c7e77c5ceab7414cfde6a06a94650c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; tPPtr, less&lt; tPPtr &gt;, Allocator&lt; tPPtr &gt; &gt;</type>
      <name>tParticleSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>951cc8229818f9fa4a575f43148e5771</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; tcPPtr, less&lt; tcPPtr &gt;, Allocator&lt; tcPPtr &gt; &gt;</type>
      <name>tcParticleSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>42944e05c403b6033baa28c2a7090b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; StepPtr &gt;</type>
      <name>StepVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>69531ff9fa8f3039de8388c0090091c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; SubProPtr &gt;</type>
      <name>SubProcessVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7cc8d9e97da748d42bed2c6683f33ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tSubProPtr &gt;</type>
      <name>tSubProcessVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>32d67c83189e59cc10471331973fc4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; CollPtr &gt;</type>
      <name>CollisionVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7f3258f20a05a8805f4feecae5bfddb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; StepPtr, less&lt; StepPtr &gt;, Allocator&lt; StepPtr &gt; &gt;</type>
      <name>StepSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c30e746f9e6687b8a409cb4cdbc9e3dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; SubProPtr, less&lt; SubProPtr &gt;, Allocator&lt; SubProPtr &gt; &gt;</type>
      <name>SubProcessSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>38642a2850cbbcd7ebee6d0f558043f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantParticle &gt;::pointer</type>
      <name>RemPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1653456cebabad6cc7c8506344fac2d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantParticle &gt;::const_pointer</type>
      <name>cRemPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7530301d68a5a1cf114543ecdb0af023</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantParticle &gt;::transient_pointer</type>
      <name>tRemPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d242201ed12f571c8fe14ac3315ecd03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantParticle &gt;::transient_const_pointer</type>
      <name>tcRemPPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2b56a08be3665fc803e66e73ef29356b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleSelector&lt; AllSelector &gt;</type>
      <name>SelectAll</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b74b11373ff741427170b4c1c98cba98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleSelector&lt; FinalStateSelector &gt;</type>
      <name>SelectFinalState</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>84486786cafdbe9a3ec0fc6672e2a3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleSelector&lt; FinalStateSelector &gt;</type>
      <name>SelectFinalState</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>84486786cafdbe9a3ec0fc6672e2a3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleSelector&lt; PrimaryCollisionSelector &gt;</type>
      <name>SelectPrimaryCollision</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0b5cc3ec8848f8df6bc3958dee43ed66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ParticleSelector&lt; ChargedSelector &gt;</type>
      <name>SelectCharged</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cc50e9b96415eff6ba7adac02c2da72b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ClusterCollapser &gt;::pointer</type>
      <name>ClusterCollapserPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>daeb9c302448f7fd88f2a5f7b5f3eb4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ClusterCollapser &gt;::const_pointer</type>
      <name>cClusterCollapserPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>952b93b102980faa8f18b2d1171a07ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ClusterCollapser &gt;::transient_pointer</type>
      <name>tClusterCollapserPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4ddd72eef448ad9ec46efe1b2e1be222</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ClusterCollapser &gt;::transient_const_pointer</type>
      <name>tcClusterCollapserPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>43285ff7b4ea61b18fe1b3e8aa0242f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::pointer</type>
      <name>EHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c84ed38f98c1c0693ddba8ff1646f688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::const_pointer</type>
      <name>cEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e7d40b21a1cbd0e2ba674a78c0035011</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::transient_pointer</type>
      <name>tEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8b9462af61205651f49d9a83ed3beef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventHandler &gt;::transient_const_pointer</type>
      <name>tcEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c51a871f4b3397507ebb60aab1b2ae92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SamplerBase &gt;::pointer</type>
      <name>SamplerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8ba57e432ecbdb62ada14f5d6a34be4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SamplerBase &gt;::const_pointer</type>
      <name>cSamplerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3fa68829b77491402dbf9c79fe71b47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SamplerBase &gt;::transient_pointer</type>
      <name>tSamplerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1818f9a5f0f2209daf4e584ec38b26bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SamplerBase &gt;::transient_const_pointer</type>
      <name>tcSamplerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>36adf39eaf5e6c77ff5421249ace93c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardEventHandler &gt;::pointer</type>
      <name>StdEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d7a1125c59f6a441e4a0f3e34e26a98c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardEventHandler &gt;::const_pointer</type>
      <name>cStdEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>942fce218b9f01b239799a9a3ccd046e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardEventHandler &gt;::transient_pointer</type>
      <name>tStdEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>40954a8bc16cd7e8253816c14c4fcbc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardEventHandler &gt;::transient_const_pointer</type>
      <name>tcStdEHPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>20a25cc756d286d57841dcf14d443d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardXComb &gt;::pointer</type>
      <name>StdXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b94d355d91783e90943f831381141385</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardXComb &gt;::const_pointer</type>
      <name>cStdXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>5d8e7c01656cb26154805d9b66fb50ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardXComb &gt;::transient_pointer</type>
      <name>tStdXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1ae8dc9d133e4b7b4c2c7493c3126bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; StandardXComb &gt;::transient_const_pointer</type>
      <name>tcStdXCombPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f04a98fd5496765d8221c13f4f8a05ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcessHandler &gt;::pointer</type>
      <name>SubHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7076cc3dd89cee01c7fce0ddda07d747</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcessHandler &gt;::const_pointer</type>
      <name>cSubHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bc25a0e09f3313acc186eaa56a30c72f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcessHandler &gt;::transient_pointer</type>
      <name>tSubHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>df0ba343087ba2c8938d0d983f29e114</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SubProcessHandler &gt;::transient_const_pointer</type>
      <name>tcSubHdlPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>dbc20cd6d075218d514e5f251feebc89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LesHouchesEventHandler &gt;::pointer</type>
      <name>LesHouchesEventHandlerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>793520cf68ea6c4d8d1fe280d90829e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LesHouchesEventHandler &gt;::const_pointer</type>
      <name>cLesHouchesEventHandlerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d36a109b0537b1790fd8eb7fa3be636f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LesHouchesEventHandler &gt;::transient_pointer</type>
      <name>tLesHouchesEventHandlerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1108034a7812c4c2fcb906f7b77168fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LesHouchesEventHandler &gt;::transient_const_pointer</type>
      <name>tcLesHouchesEventHandlerPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>eb075948a8a09556b97760066f2c73a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LesHouchesReader &gt;::pointer</type>
      <name>LesHouchesReaderPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d55022660e2c020792b4abd79a286ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LesHouchesReader &gt;::const_pointer</type>
      <name>cLesHouchesReaderPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2f63b3fa102c6559c4e9de19e7fb8e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LesHouchesReader &gt;::transient_pointer</type>
      <name>tLesHouchesReaderPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>dd5b70a379afc97428e3ec343c657e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; LesHouchesReader &gt;::transient_const_pointer</type>
      <name>tcLesHouchesReaderPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>04e0fe9f03479442f65f4a7d59d95da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DiagramBase &gt;::pointer</type>
      <name>DiagPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e28b2c2fdc00566d14ba8cc939de2160</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DiagramBase &gt;::const_pointer</type>
      <name>cDiagPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>55a19f8b3a5c5b6f81ebe5bbe7217946</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DiagramBase &gt;::transient_pointer</type>
      <name>tDiagPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>06abce6cbf4bd226fc1922feb4f4bf2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; DiagramBase &gt;::transient_const_pointer</type>
      <name>tcDiagPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>17ad7ed747a9c6ea4dd3a9d5e9c68e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MEBase &gt;::pointer</type>
      <name>MEPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f3aaab658c0016144b6a39e1bc415162</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MEBase &gt;::const_pointer</type>
      <name>cMEPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1486942867cc44f6778f4d22e6955db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MEBase &gt;::transient_pointer</type>
      <name>tMEPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ed93c4b68f16c99ff5526dbbc4f79670</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MEBase &gt;::transient_const_pointer</type>
      <name>tcMEPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ab6567485d496f489013701496e8b79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; MEPtr &gt;</type>
      <name>MEVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>380d8ad5259dc25e38a9cfea21557e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonBin &gt;::pointer</type>
      <name>PBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cbadf8fcb77263a251df5a2b31f277bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonBin &gt;::const_pointer</type>
      <name>cPBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fd47f940ef718110236c0746630f5de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonBin &gt;::transient_pointer</type>
      <name>tPBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>23083e803db62c4bf95973ef2541920d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonBin &gt;::transient_const_pointer</type>
      <name>tcPBPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e4b11e860f92427cb246c16762e47a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PBPtr &gt;</type>
      <name>PartonVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f726da7a5604e25ffb548df1978e7e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; PBPtr, PBPtr &gt;</type>
      <name>PBPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ff840ef1f1b1c005f05fa6bcd8a87f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; tcPBPtr, tcPBPtr &gt;</type>
      <name>tcPBPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>90779010905db89f8992f3af3b59507a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; PBPair &gt;</type>
      <name>PartonPairVec</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2448f3ade382d168384f91e9c6788ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonBinInstance &gt;::pointer</type>
      <name>PBIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>99a9592c683426b7c5904ecd7b8788f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonBinInstance &gt;::const_pointer</type>
      <name>cPBIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>268daea3bdae29acd70d59a9064ab85f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonBinInstance &gt;::transient_pointer</type>
      <name>tPBIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a033ec77c7bc530d3c51ba6ca53d3e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PartonBinInstance &gt;::transient_const_pointer</type>
      <name>tcPBIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>359c38f7a9f566b9aaadb766748f53e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; PBIPtr, PBIPtr &gt;</type>
      <name>PBIPair</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>64586e00d58ce18ff4389696e160bfe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemInfoBase &gt;::pointer</type>
      <name>RemIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e917841ce477d61fdb25f42d959aa58e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemInfoBase &gt;::const_pointer</type>
      <name>cRemIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>54410a1f24f48c57fd97662d6d4e2d78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemInfoBase &gt;::transient_pointer</type>
      <name>tRemIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>19320e593f2106ee03a1161695ce3528</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RemInfoBase &gt;::transient_const_pointer</type>
      <name>tcRemIPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fc6f02b63d1e7a4b349ca07b291064b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>multiset&lt; tPDPtr, less&lt; tPDPtr &gt;, Allocator&lt; tPDPtr &gt; &gt;</type>
      <name>ParticleMSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f4dd993641ed8e05f3212edb86629e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>multiset&lt; tPMPtr, less&lt; tPMPtr &gt;, Allocator&lt; tPMPtr &gt; &gt;</type>
      <name>MatcherMSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>42fca525e4cfda50b6a9a9771a40e12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>multiset&lt; tDMPtr, less&lt; tDMPtr &gt;, Allocator&lt; tDMPtr &gt; &gt;</type>
      <name>ModeMSet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>76a1f4dbd7eeea01f8ff880de6e9d87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MassGenerator &gt;::pointer</type>
      <name>MassGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e9a14989084931a15316ae4078fd2b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MassGenerator &gt;::const_pointer</type>
      <name>cMassGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8ad25da0904a0c21ec94c8bfe0c19848</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MassGenerator &gt;::transient_pointer</type>
      <name>tMassGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7f18069bc84f71fc70b3ef01ac6895c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; MassGenerator &gt;::transient_const_pointer</type>
      <name>tcMassGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>07b66aab1cfd378e9be6dcda42d7ba1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; FlavourGenerator &gt;::pointer</type>
      <name>FlavGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6e27fbe74bfe4150c5c300f9d0372a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; FlavourGenerator &gt;::const_pointer</type>
      <name>cFlavGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0cea360deaec96f34cad8beca3ffd82c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; FlavourGenerator &gt;::transient_pointer</type>
      <name>tFlavGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6003ca3a674c8666434df5776c0cf8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; FlavourGenerator &gt;::transient_const_pointer</type>
      <name>tcFlavGenPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>778a400618415ee6bf775846f8108f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantData &gt;::pointer</type>
      <name>RemPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>709967bc6ba3ee7c88f35a7d5dc72d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantData &gt;::const_pointer</type>
      <name>cRemPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>603f2b87afef982d76d0c9bdbee26b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantData &gt;::transient_pointer</type>
      <name>tRemPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cc6e1e0523892d6002fe72afc5890533</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantData &gt;::transient_const_pointer</type>
      <name>tcRemPDPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>844d387384402fbbd08f3ed7d4452868</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantDecayer &gt;::pointer</type>
      <name>RemDecPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bd7fc062d66559f600195afb0d1365f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantDecayer &gt;::const_pointer</type>
      <name>cRemDecPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ee9593bddc01eb6f95bd772155d5ce97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantDecayer &gt;::transient_pointer</type>
      <name>tRemDecPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ffe68f87b8572c484f664e47d3d83180</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ThePEG::RemnantDecayer &gt;::transient_const_pointer</type>
      <name>tcRemDecPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fb7829fe791f6af8b91e33237e6dc14f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; AnyMatcher &gt;</type>
      <name>MatchAny</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a63115283157648cfb8d4807d723a6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; ChargedMatcher &gt;</type>
      <name>MatchCharged</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9bf0d1588d6194e32f17364f063c3a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; PositiveMatcher &gt;</type>
      <name>MatchPositive</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8105f6e9073e52620b2d8fb4c202e83d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; NeutralMatcher &gt;</type>
      <name>MatchNeutral</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f334d3f6cf154b8849ced9524a9919ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; NegativeMatcher &gt;</type>
      <name>MatchNegative</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fcf37f5046d422f64f41add8a1b3ca0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; BaryonMatcher &gt;</type>
      <name>MatchBaryon</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7e70f4d6778d394b396b705faed88efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; MesonMatcher &gt;</type>
      <name>MatchMeson</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c4b775f1d99657fa4720d0d9a5d22a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; DiquarkMatcher &gt;</type>
      <name>MatchDiquark</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8b548d70fd4792d84307fc17f80a7452</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; QuarkMatcher &gt;</type>
      <name>MatchQuark</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3b0077016845e4d50ded6720e39d9a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; LeptonMatcher &gt;</type>
      <name>MatchLepton</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d3b5b4ea6011f15942a301390823d369</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; LightQuarkMatcher &gt;</type>
      <name>MatchLightQuark</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0cf73a01cf491cc8433163ae51ebfd61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; LightAntiQuarkMatcher &gt;</type>
      <name>MatchLightAntiQuark</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1096261138ff785ee608856b4da3e221</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; StandardQCDPartonMatcher &gt;</type>
      <name>MatchStandardQCDParton</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>72ed37066bc7c9c42045ccd0b924f178</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; PseudoScalarMesonMatcher &gt;</type>
      <name>MatchPseudoScalarMeson</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d0dc54b1a9aa8d2a7848180040e09596</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matcher&lt; VectorMesonMatcher &gt;</type>
      <name>MatchVectorMeson</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9467ca2c0ee4f6f171eb0eb81bd8f3f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; WidthGenerator &gt;::pointer</type>
      <name>WidthGeneratorPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>eaedf8928856653433b7f91da379f52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; WidthGenerator &gt;::const_pointer</type>
      <name>cWidthGeneratorPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a42a9f55fb1228ae7ae6158b143b1c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; WidthGenerator &gt;::transient_pointer</type>
      <name>tWidthGeneratorPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8da6c53bd39d4f309482c3edce575499</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; WidthGenerator &gt;::transient_const_pointer</type>
      <name>tcWidthGeneratorPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a4143b9a5d741a21b728ef7c873f0c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PersistentIStream &amp;(*)</type>
      <name>PersistentIManip</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>769cc78d9cbb68606a4f8503178f2244</anchor>
      <arglist>(PersistentIStream &amp;)</arglist>
    </member>
    <member kind="typedef">
      <type>PersistentOStream &amp;(*)</type>
      <name>PersistentOManip</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fc2fdb5a0621e6aae1dbcee4c4b08755</anchor>
      <arglist>(PersistentOStream &amp;)</arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::pointer</type>
      <name>EGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d2d14077d03db7fb627ab50022fd17aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::const_pointer</type>
      <name>cEGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c33bf8f397091b483520a08be7dcbdd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::transient_pointer</type>
      <name>tEGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4caab2752a0c8ad8d0e8c19a8e46e6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; EventGenerator &gt;::transient_const_pointer</type>
      <name>tcEGPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7eee6f98b03fda7d98e9628bfa5e00bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::pointer</type>
      <name>StrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>92dd96c21d444b7bae7400f5f7514377</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Strategy &gt;::const_pointer</type>
      <name>cStrategyPtr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9831360cafe0cefbdeb8f37fef4ed8f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Interval&lt; double &gt;</type>
      <name>DInterval</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0cc42015a9625baee9b24d64872f5105</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c62aa674bbcafb8a5e72a419bd81114f</anchor>
      <arglist>(OStream &amp;os, const Lorentz5Vector&lt; T &gt; &amp;p, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>dbfd1086b083a0940158486d117e43f9</anchor>
      <arglist>(IStream &amp;is, Lorentz5Vector&lt; T &gt; &amp;p, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation</type>
      <name>inverseOf</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f1ac19a6636a076920f1fbe44c2f93b8</anchor>
      <arglist>(const LorentzRotation &amp;lt)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>687810d75833e82d31dc7e3147feec37</anchor>
      <arglist>(std::ostream &amp;os, const LorentzRotation &amp;lt)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dirPlus</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>17bbb434618876769681704b9220d859</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dirMinus</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bdd4e3065eef87b83ae7b53b59792302</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dirZ</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6d16497daa1b0ae71da6b50d3d8715f6</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dirTheta</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c7d14648277d8bd555a80556d9170d83</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dirCosTheta</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>66ae6e647bcf065cb8d5253e04e3a4e6</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>dirBoostVector</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d3c2d72e0296c1309e5e82c0fcf75112</anchor>
      <arglist>(const LorentzVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>LorentzVector</type>
      <name>lightCone</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0c4e27655932850aa2844097867bd3df</anchor>
      <arglist>(FloatType plus, FloatType minus, FloatType x=FloatType(), FloatType y=FloatType())</arglist>
    </member>
    <member kind="function">
      <type>LorentzVector</type>
      <name>lightCone</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0eb3a1ee7878ade966449bc130cd4c54</anchor>
      <arglist>(FloatType plus, FloatType minus, Transverse&lt; FloatType &gt; pt)</arglist>
    </member>
    <member kind="function">
      <type>LorentzVector</type>
      <name>lightConeDir</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>acb1c3a30870256214fd9d2946a21196</anchor>
      <arglist>(FloatType plus, FloatType minus, FloatType x=FloatType(), FloatType y=FloatType())</arglist>
    </member>
    <member kind="function">
      <type>LorentzVector</type>
      <name>lightConeDir</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6d012ddfca25291639c0745c6caf2dfb</anchor>
      <arglist>(FloatType plus, FloatType minus, Transverse&lt; FloatType &gt; pt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>aedbf47fbd80d881e6553cbabe6baa3c</anchor>
      <arglist>(OStream &amp;os, const LorentzVector &amp;p, UnitT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cabbbab0a3383f98e50a5deaee8b064a</anchor>
      <arglist>(IStream &amp;is, LorentzVector &amp;p, UnitT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation</type>
      <name>inverseOf</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>738d380a4a125656f7981109ccf01a38</anchor>
      <arglist>(const SpinHalfLorentzRotation &amp;lt)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ac87ca3fa14e073e9e3d8a16d190bdbb</anchor>
      <arglist>(std::ostream &amp;os, const SpinHalfLorentzRotation &amp;lt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>40438f40547fbc36ba06296e36d8f54b</anchor>
      <arglist>(OStream &amp;os, const Vector3 &amp;p, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>177d2490cc61afe78dd1971a31b747fc</anchor>
      <arglist>(IStream &amp;is, Vector3 &amp;p, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>54c4d11b32a8945179fa10a7013189c2</anchor>
      <arglist>(OStream &amp;os, const Transverse&lt; T &gt; &amp;p, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>25f945e92c7643715ce59ae536f2914f</anchor>
      <arglist>(IStream &amp;is, Transverse&lt; T &gt; &amp;p, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange&lt; typename Container::iterator &gt;</type>
      <name>range</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>624578a24dfb147e93f3b54f4d149d17</anchor>
      <arglist>(Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange&lt; typename Container::const_iterator &gt;</type>
      <name>range</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c2b2c23f832d4695a5d5f03e78c84c59</anchor>
      <arglist>(const Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange&lt; typename Container::reverse_iterator &gt;</type>
      <name>rrange</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>94a42e8a953bf1da50188d4c20c25e1f</anchor>
      <arglist>(Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange&lt; typename Container::const_reverse_iterator &gt;</type>
      <name>rrange</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c36099ba7287773aa01dccdd5a688aac</anchor>
      <arglist>(const Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>FNC</type>
      <name>for_each</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c311365abf6b1db62576027033ccbf6c</anchor>
      <arglist>(IteratorRange&lt; Iterator &gt; r, FNC f)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>find</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3884a55fb5a6bb6770db50b00e9498a2</anchor>
      <arglist>(IteratorRange&lt; Iterator &gt; r, const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>find_if</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6772faec8686e48e1d9345759965dc60</anchor>
      <arglist>(IteratorRange&lt; Iterator &gt; r, Pred p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>093b6311dc925dd426264f0a73e0fefc</anchor>
      <arglist>(IteratorRange&lt; Iterator &gt; r, const T &amp;oval, const T &amp;nval)</arglist>
    </member>
    <member kind="function">
      <type>FNC</type>
      <name>for_each</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e0ef254b4d57b7b967f6024dfeb04113</anchor>
      <arglist>(Cont &amp;c, FNC f)</arglist>
    </member>
    <member kind="function">
      <type>FNC</type>
      <name>for_each</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c173a979d8b320c48ef6f740848fe0d6</anchor>
      <arglist>(const Cont &amp;c, FNC f)</arglist>
    </member>
    <member kind="function">
      <type>Cont::iterator</type>
      <name>find</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>183ff4864c35502e22c56d691f3c97dc</anchor>
      <arglist>(Cont &amp;c, const Type &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Cont::const_iterator</type>
      <name>find</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b1a8b5c6238ce86f01b3565c9ba9a818</anchor>
      <arglist>(const Cont &amp;c, const Type &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Cont::iterator</type>
      <name>find_if</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>da0934638f6402c4172d048564c1b715</anchor>
      <arglist>(Cont &amp;c, const Pred &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Cont::const_iterator</type>
      <name>find_if</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0ebb27b2c0e14011ed91e9edc8e209b4</anchor>
      <arglist>(const Cont &amp;c, const Pred &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b08b06cba54c7c852bf8dc1b41622135</anchor>
      <arglist>(Cont &amp;c, const T &amp;oval, const T &amp;nval)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>member</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4e26bcdf8af52196e8cac40b32acb9ef</anchor>
      <arglist>(const Container &amp;c, const Key &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>member</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3cdcfd07b85a8ee9c01d62824193d107</anchor>
      <arglist>(const vector&lt; T &gt; &amp;v, const Key &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>std::insert_iterator&lt; Cont &gt;</type>
      <name>inserter</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a566ad654b959f01e27b222548bba06a</anchor>
      <arglist>(Cont &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>left</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0f4189c754e38a8bdc05512cca25558c</anchor>
      <arglist>(ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>right</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2bcac1c480c680759d76af39adefdec4</anchor>
      <arglist>(ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>MultiplicationTraits&lt; T &gt;::ResultType</type>
      <name>sqr</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>883534d86b21d97a98ab922f7d8a044f</anchor>
      <arglist>(const T &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>abs</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9eac1e8d2a2dca7111a644e552af541b</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1fc412ad2d601ec4c8d9624f5135b6c4</anchor>
      <arglist>(ostream &amp;, const Collision &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>62e6140c6be8c2a81e2007e5a96c07f2</anchor>
      <arglist>(ostream &amp;, const Event &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>eddf9136ba3cb7a1a6f3ae0b7ca11142</anchor>
      <arglist>(ostream &amp;, const Particle &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyIfCheck</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0c005618f284541b15eb8270bb628bf5</anchor>
      <arglist>(OutputIterator r, const Container &amp;c, const SelectorBase &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>16108433471cf215a44ecd2b579b2811</anchor>
      <arglist>(ostream &amp;, const Step &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e7f6ba1975b029fc35e11444157f9359</anchor>
      <arglist>(ostream &amp;, const SubProcess &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1979340626b5b38978a945ab2db1ee11</anchor>
      <arglist>(PersistentOStream &amp;, const HandlerGroup&lt; HDLR &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6f49797bee2bf37d91e6f816920292a7</anchor>
      <arglist>(PersistentIStream &amp;, HandlerGroup&lt; HDLR &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator/</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a6cfd7e8e2fcc2aff46a51dc5f49a932</anchor>
      <arglist>(string, string)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>operator *</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>69983e3a113e2ba4aefde1312e4e16f3</anchor>
      <arglist>(double, string)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>eaa2045c30d658ef1c90b28d196520d7</anchor>
      <arglist>(IStream &amp;, PDT::Colour &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0cfdc89c0edbaab72f223e14178721ca</anchor>
      <arglist>(IStream &amp;, PDT::Charge &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fdafe296391f1ea4c661b052af3fd03f</anchor>
      <arglist>(IStream &amp;, PDT::Spin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>cf316da0c3a6bd95f29062ec753964db</anchor>
      <arglist>(PersistentIStream &amp;, PersistentIManip)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>pedantic</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0a408d6dfd15b3ca54467b564fee1bfb</anchor>
      <arglist>(PersistentIStream &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>tolerant</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>dcf80e6f627b0dd8ebe3f90a71943b24</anchor>
      <arglist>(PersistentIStream &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>43192fd9a61bb06bed2727ec34f4f311</anchor>
      <arglist>(PersistentOStream &amp;os, PersistentOManip func)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>flush</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>490610f8b81d39896abe30ad242a89e9</anchor>
      <arglist>(PersistentOStream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>push</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>eb53a7dd2c42d1421ffe48ba53de6957</anchor>
      <arglist>(PersistentOStream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>pop</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2f0fdb0667ba5d26c85e7d3bdc37ab71</anchor>
      <arglist>(PersistentOStream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>OStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>aaacc7120416e926e794ec2d05b85915</anchor>
      <arglist>(OStream &amp;, const CompSelector&lt; T, WeightType &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7a4ecdad2da4197d74b440c311ea8ce6</anchor>
      <arglist>(IStream &amp;, CompSelector&lt; T, WeightType &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>OEnum&lt; T &gt;</type>
      <name>oenum</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3e72bbde127bbe9d541e84200838bf21</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>IEnum&lt; T &gt;</type>
      <name>ienum</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0ddea46067309a53c8dc9791c1bc3d6e</anchor>
      <arglist>(T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>OStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f04766435082bb2f0f339465d4c2732a</anchor>
      <arglist>(OStream &amp;os, const OEnum&lt; T &gt; &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>3e90f1c7f8d157fa492e21ad810d97d1</anchor>
      <arglist>(IStream &amp;is, const IEnum&lt; T &gt; &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>Interval&lt; T &gt;</type>
      <name>makeInterval</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>da5cb82176b813e950fe6a8833197c73</anchor>
      <arglist>(T dn, T up)</arglist>
    </member>
    <member kind="function">
      <type>OStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>5adb879175faa962c96652cab8801830</anchor>
      <arglist>(OStream &amp;, const Interval&lt; T, CMP &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>10ae524c819faf89a78ecf7dcf8de37a</anchor>
      <arglist>(IStream &amp;, Interval&lt; T, CMP &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>0e604e76ab7cdb7498cbaa0c1810a68c</anchor>
      <arglist>(OStream &amp;os, const Interval&lt; T, CMP &gt; &amp;i, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>4caa86dea4454291c42414d791320e4c</anchor>
      <arglist>(IStream &amp;is, Interval&lt; T, CMP &gt; &amp;i, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>OStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1050c6692abc814cd74aeb9bb11771c6</anchor>
      <arglist>(OStream &amp;, const Selector&lt; T, WeightType &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>057f41b6bec81b684ed6fc2dcde83aee</anchor>
      <arglist>(IStream &amp;, Selector&lt; T, WeightType &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Triplet&lt; T1, T2, T3 &gt;</type>
      <name>makeTriplet</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>2af763b70505c25d24890da4313c8ba9</anchor>
      <arglist>(const T1 &amp;t1, const T2 &amp;t2, const T3 &amp;t3)</arglist>
    </member>
    <member kind="function">
      <type>OStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>18ff24cd67876de71c143ffc9d1f4391</anchor>
      <arglist>(OStream &amp;os, const Triplet&lt; T1, T2, T3 &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>5b588fd8f9615ab918932a719dbf3706</anchor>
      <arglist>(IStream &amp;is, Triplet&lt; T1, T2, T3 &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>OUnit&lt; T, UT &gt;</type>
      <name>ounit</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a912fb433a4a656b5a39be001ee1af28</anchor>
      <arglist>(const T &amp;t, const UT &amp;ut)</arglist>
    </member>
    <member kind="function">
      <type>IUnit&lt; T, UT &gt;</type>
      <name>iunit</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>15959c606fc3e7a4c1c301313aeb7e68</anchor>
      <arglist>(T &amp;t, const UT &amp;ut)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ec40eccf7102e26063c894ccbcc32780</anchor>
      <arglist>(OStream &amp;os, const T &amp;t, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ed40aea6677205b06f97529a17bec931</anchor>
      <arglist>(IStream &amp;is, T &amp;t, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>OStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fb33f2f5e07c12dd73bfe041e17af5fa</anchor>
      <arglist>(OStream &amp;os, const OUnit&lt; T, UT &gt; &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>894ffc1acb1f9cd0cc40655f68fa17cc</anchor>
      <arglist>(IStream &amp;is, const IUnit&lt; T, UT &gt; &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>OStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b5069b5b8628bc0afb7230536a15f039</anchor>
      <arglist>(OStream &amp;, const VSelector&lt; T, WeightType &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c4c4865e0cee15280a54247f4d30af1a</anchor>
      <arglist>(IStream &amp;, VSelector&lt; T, WeightType &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9ea2922c7abc6a67c835bf59a47bba5c</anchor>
      <arglist>(PersistentOStream &amp;, const XSecStat &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>05bc18fc0d5a7fcbd23a72cebb107234</anchor>
      <arglist>(PersistentIStream &amp;, XSecStat &amp;)</arglist>
    </member>
    <member kind="function">
      <type>XSecStat</type>
      <name>operator+</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8f6e7d7a0acce05e8193b8fd595d5632</anchor>
      <arglist>(const XSecStat &amp;x1, const XSecStat &amp;x2)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; T &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>ea164afff21f78a50486bb4c79860ec6</anchor>
      <arglist>(vector&lt; T &gt; &amp;tv, const U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; T &gt; &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>433a1f97f01804d6230ac949e1d6d740</anchor>
      <arglist>(vector&lt; T &gt; &amp;tv, U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>stack&lt; T &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>c85641f1d65f947bbb7e582454e721b4</anchor>
      <arglist>(stack&lt; T &gt; &amp;ts, const U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>stack&lt; T &gt; &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>d060e5febb9e59eb2e0a9c9b6cc48032</anchor>
      <arglist>(stack&lt; T &gt; &amp;ts, U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>deque&lt; T &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e2fbd7b9624cc9dd85ea1789133533eb</anchor>
      <arglist>(deque&lt; T &gt; &amp;td, const U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>deque&lt; T &gt; &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>a1c204e45478c56aa108c7802fb64fcf</anchor>
      <arglist>(deque&lt; T &gt; &amp;td, U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>set&lt; T &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b6f8137e7bf80d03b6acd880a7ba2861</anchor>
      <arglist>(set&lt; T &gt; &amp;ts, const U &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>1f8fb616cd12785e0fb022ba09b7e20f</anchor>
      <arglist>(OStream &amp;os, const vector&lt; T, Alloc &gt; &amp;v, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6d8dc42abd6550768376ea8d1fbce5d3</anchor>
      <arglist>(IStream &amp;is, vector&lt; T, Alloc &gt; &amp;v, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>db5b1aef787c50754fbb853f900cc356</anchor>
      <arglist>(OStream &amp;os, const set&lt; T, CMP, A &gt; &amp;s, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>07288d8b84f051ae5a801d3944c3fea6</anchor>
      <arglist>(IStream &amp;is, set&lt; T, CMP, A &gt; &amp;s, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ounitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e58d1a8db99ab47a0a9cfd0ce318d89a</anchor>
      <arglist>(OStream &amp;os, const map&lt; K, T, CMP, A &gt; &amp;m, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iunitstream</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>b6e35ae72be22b025b46816afeb0cf2e</anchor>
      <arglist>(IStream &amp;is, map&lt; K, T, CMP, A &gt; &amp;m, UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>bf52c37b940e444b8461f77eba8edfad</anchor>
      <arglist>(PersistentIStream &amp;, pair&lt; T1, T2 &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>183a5e2d6370614921a09bcb35e3f258</anchor>
      <arglist>(PersistentIStream &amp;, map&lt; Key, T, Cmp, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e8d04787b546474da746f7465b87e226</anchor>
      <arglist>(PersistentIStream &amp;, multimap&lt; Key, T, Cmp, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>f547487459726b333669aadde53b7071</anchor>
      <arglist>(PersistentIStream &amp;, set&lt; Key, Cmp, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>001b4b76e9420e44a5e380457f0751c1</anchor>
      <arglist>(PersistentIStream &amp;, multiset&lt; Key, Cmp, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>9cc2d6f0a998de6a034b292edc9936ed</anchor>
      <arglist>(PersistentIStream &amp;, list&lt; T, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fe4daa99108c0955717471dd54881c0b</anchor>
      <arglist>(PersistentIStream &amp;, vector&lt; T, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>e1dacf6e8c8a38bc39ebe85c54ece022</anchor>
      <arglist>(PersistentIStream &amp;, deque&lt; T, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8a6609e74ce5c5755ec21fa9b03ada68</anchor>
      <arglist>(PersistentOStream &amp;, const pair&lt; T1, T2 &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>382af39fb7070f67381bcfbedcab592c</anchor>
      <arglist>(PersistentOStream &amp;, const multimap&lt; Key, T, Cmp, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>8795e4d379d66fbcdcb52f3410c286a2</anchor>
      <arglist>(PersistentOStream &amp;, const map&lt; Key, T, Cmp, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>6622dabcd7b7b8ca272c71ca2fc7e2c2</anchor>
      <arglist>(PersistentOStream &amp;, const set&lt; Key, Cmp, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>7cbd9bcf9102e4860cf46ecf2cdf177a</anchor>
      <arglist>(PersistentOStream &amp;, const multiset&lt; Key, Cmp, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>fe872c540038b8db86ef041d9b1ecb62</anchor>
      <arglist>(PersistentOStream &amp;, const list&lt; T, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>25292d4fd21726a1af751639b6bae3dd</anchor>
      <arglist>(PersistentOStream &amp;, const vector&lt; T, A &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceThePEG.html</anchorfile>
      <anchor>12c219de5dba6af7bb7d385b1ec0890b</anchor>
      <arglist>(PersistentOStream &amp;, const deque&lt; T, A &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::FactoryBase</name>
    <filename>classThePEG_1_1FactoryBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="typedef">
      <type>AIDA::IHistogram1D *</type>
      <name>tH1DPtr</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>43f5aa92cbb8bbb5744dcfd3819e2e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const AIDA::IHistogram1D *</type>
      <name>tcH1DPtr</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>a81b389895928b9071099870f908d0cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AIDA::IDataPointSet *</type>
      <name>tDSetPtr</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>87de2650e03c5ff8743ddda71c21c4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const AIDA::IDataPointSet *</type>
      <name>tcDSetPtr</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>c48be739b8415b5a1a38f861750dfc03</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>filename</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>959a760936cbf3299b106bf7ba5d095a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>suffix</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>584bd103684fe44ea4bfca9d5c584adb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>storeType</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>97edf44ad92469490c27e3a0b4b7028b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normalizeToXSec</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>5bf0228957ee51154fb8a99e910f5c6f</anchor>
      <arglist>(tH1DPtr histogram, CrossSection unit=picobarn) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normalizeToXSecFraction</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>2707532f44a053b8021f265847e24935</anchor>
      <arglist>(tH1DPtr histogram) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normalizeToUnity</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>a8270a7c33e5c0f6111c95dc058e8fce</anchor>
      <arglist>(tH1DPtr histogram) const =0</arglist>
    </member>
    <member kind="function">
      <type>AIDA::IAnalysisFactory &amp;</type>
      <name>analysisFactory</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>3625c2b8cc5b6d00fe1022b57ad9e039</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AIDA::ITree &amp;</type>
      <name>tree</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>a70ac587c6da7f9e37f8819574123239</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AIDA::IHistogramFactory &amp;</type>
      <name>histogramFactory</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>1064e4de55220b7380b4a1c9870645f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AIDA::IDataPointSetFactory &amp;</type>
      <name>dataSetFactory</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>403592122abc40d5666e71938eceaf75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mkdir</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>96451e0f6b69b93f5bb6a95d360e0080</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mkdirs</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>3ed8a303a20c87990ab66c45b8b926fe</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cd</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>214fe2484a345f2060aa36d27cea909a</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function">
      <type>tH1DPtr</type>
      <name>createHistogram1D</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>8af9cd10ec79acdd662d160b394c466a</anchor>
      <arglist>(string path, int nb, double lo, double up)</arglist>
    </member>
    <member kind="function">
      <type>tH1DPtr</type>
      <name>createHistogram1D</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>1ea992485e5d373a5b38adc958972132</anchor>
      <arglist>(string path, string title, int nb, double lo, double up)</arglist>
    </member>
    <member kind="function">
      <type>tH1DPtr</type>
      <name>createHistogram1D</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>a00d9c41440e6a76e59c301695b8caf8</anchor>
      <arglist>(string path, string title, const std::vector&lt; double &gt; &amp;edges)</arglist>
    </member>
    <member kind="function">
      <type>DataFiller</type>
      <name>createDataSet</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>ee39300c4798c89fc3f4f243e636a07f</anchor>
      <arglist>(string path, string title, int dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerClient</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>894a7c052332ca45efbab0ac26758488</anchor>
      <arglist>(tIPtr client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>fd37718d5514ffbf830ec80abf70f296</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>60e7e3a5f3c266dbc98ce0cda2eeadbb</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>5addea0bace53d8f30df462b27b75a57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>analysisFactory</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>c40ac44f174260684e383d7e2659950b</anchor>
      <arglist>(AIDA::IAnalysisFactory *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>5259b52e787d2dfd2194d6fa23774db2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>91ac4126408818aa58d659d5dcc7f4d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>a2d1c389df7502b0b6a79cab55aa5256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>FactoryBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>4e54acb8b9d1ad3fe2f71f9dabfc2430</anchor>
      <arglist>(const FactoryBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theFilename</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>c358b764da5243a1395593a450852d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theSuffix</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>5a753e4f85fdf5f98c52b324812a1091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theStoreType</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>ae7a49fa6faefbcb40c4aa90d6bbd440</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIDA::IAnalysisFactory *</type>
      <name>theAnalysisFactory</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>44dbf637e686a54da88b7e1912127169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIDA::ITree *</type>
      <name>theTree</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>4352fc384f1fa8bb049253912883cf6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIDA::IHistogramFactory *</type>
      <name>theHistogramFactory</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>deb494f29ed46c923831ee141e796a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIDA::IDataPointSetFactory *</type>
      <name>theDataSetFactory</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>d64b10b6881a16c49d9d62b5a9312c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>set&lt; IPtr &gt;</type>
      <name>clients</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>57893b1cd3b855e4b18835e311631bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; FactoryBase &gt;</type>
      <name>initFactoryBase</name>
      <anchorfile>classThePEG_1_1FactoryBase.html</anchorfile>
      <anchor>5db8225e212712fb42a41f9350252638</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">ThePEG::FactoryBase::DataFiller</class>
  </compound>
  <compound kind="class">
    <name>ThePEG::FactoryBase::DataFiller</name>
    <filename>classThePEG_1_1FactoryBase_1_1DataFiller.html</filename>
    <member kind="function">
      <type></type>
      <name>DataFiller</name>
      <anchorfile>classThePEG_1_1FactoryBase_1_1DataFiller.html</anchorfile>
      <anchor>17c7780f8ffac41b8eebb6fa64a789a7</anchor>
      <arglist>(AIDA::IDataPointSet *dps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataFiller</name>
      <anchorfile>classThePEG_1_1FactoryBase_1_1DataFiller.html</anchorfile>
      <anchor>0e18b6ba36f4d483e46086d75f8e81f2</anchor>
      <arglist>(const DataFiller &amp;df)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DataFiller</name>
      <anchorfile>classThePEG_1_1FactoryBase_1_1DataFiller.html</anchorfile>
      <anchor>1232b34bbd6493f2df92bb75041b5b1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataFiller &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1FactoryBase_1_1DataFiller.html</anchorfile>
      <anchor>9f2dabc72c00d2f8539a96e7dd64b289</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator AIDA::IDataPointSet *</name>
      <anchorfile>classThePEG_1_1FactoryBase_1_1DataFiller.html</anchorfile>
      <anchor>e669e044b67301c70eedb761a676daf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIDA::IDataPointSet *</type>
      <name>dset</name>
      <anchorfile>classThePEG_1_1FactoryBase_1_1DataFiller.html</anchorfile>
      <anchor>eae1c4dc6d7b05fc34a03920aed62d93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>deque&lt; double &gt;</type>
      <name>v</name>
      <anchorfile>classThePEG_1_1FactoryBase_1_1DataFiller.html</anchorfile>
      <anchor>0cef9a04944e9bf388db50314c399b0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LWHFactory</name>
    <filename>classThePEG_1_1LWHFactory.html</filename>
    <base>ThePEG::FactoryBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>normalizeToXSec</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>ec31bfe902ae7502509f85dacde3d4b4</anchor>
      <arglist>(tH1DPtr histogram, CrossSection unit=picobarn) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>normalizeToXSecFraction</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>4d16139f41316d32d1b6c09cdd5d8075</anchor>
      <arglist>(tH1DPtr histogram) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>normalizeToUnity</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>4a8e20fb2823c2c155b9732e601d7481</anchor>
      <arglist>(tH1DPtr histogram) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>88240b9faa6702d8c98e3d6dd2d76823</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>209126edc3b2eb7f23559bef91af19c2</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>18fc250824ee07c7e6a882fd8ce28159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>c1b3cc75da11f8834a8b1dfad247f517</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>a2dc1cf2ecc8f0fa102d795fba413180</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>d472a1d58b991fc89dccc9c8df1f2dd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>LWHFactory &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>69b4a815a7185166ac4b6f534b0827eb</anchor>
      <arglist>(const LWHFactory &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; LWHFactory &gt;</type>
      <name>initLWHFactory</name>
      <anchorfile>classThePEG_1_1LWHFactory.html</anchorfile>
      <anchor>5fef89accad228e0770d7d7d6c7e488f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HepMCConverter</name>
    <filename>classThePEG_1_1HepMCConverter.html</filename>
    <templarg>HepMCEventT</templarg>
    <templarg>Traits</templarg>
    <member kind="typedef">
      <type>Traits::ParticleT</type>
      <name>GenParticle</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>af1821497374b52f8ae89c714e4aac57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Traits::EventT</type>
      <name>GenEvent</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>05e83026b74e3de42475f5667f66f483</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Traits::VertexT</type>
      <name>GenVertex</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>a81a97f752e2614e6a227ab06b0ff65d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; tcPPtr, GenParticle * &gt;</type>
      <name>ParticleMap</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>2d8f3a67898b49a6ebfee9178927a7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; tcColinePtr, long &gt;</type>
      <name>FlowMap</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>19c1ceb265f11b2ee22d42b20840c5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; tcPPtr, Vertex * &gt;</type>
      <name>VertexMap</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>e1017ba875b7803ed43da99256e0ba08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; const Vertex *, GenVertex * &gt;</type>
      <name>GenVertexMap</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>ab183e17e290935123a8d1a6e3dc0c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GenEvent *</type>
      <name>convert</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>353d187fd7ffb9ec9d2d1fa1d5b6e444</anchor>
      <arglist>(const Event &amp;ev, bool nocopies=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>HepMCConverter</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>b0f70133a933e9d76f50c792ecf050a4</anchor>
      <arglist>(const Event &amp;ev, bool nocopies)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>HepMCConverter</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>4c37cd9d8c3c61fc65ccf6d43edd943d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>HepMCConverter</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>9832724e4a6648ab89dd38ebb3dba276</anchor>
      <arglist>(const HepMCConverter &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HepMCConverter &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>6c6afe2c003e03f999058c57309e66a3</anchor>
      <arglist>(const HepMCConverter &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>GenParticle *</type>
      <name>createParticle</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>ff394ff3befe0dea797bd85fc437c714</anchor>
      <arglist>(tcPPtr p) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>join</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>8e1280aa859e0ba6b38bca2756e066f4</anchor>
      <arglist>(tcPPtr parent, tcPPtr child)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>GenVertex *</type>
      <name>createVertex</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>66d8cf9df132244d88f898d43894a089</anchor>
      <arglist>(Vertex *v)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GenEvent *</type>
      <name>geneve</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>e04b495c8db586f956c477d7b53790d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleMap</type>
      <name>pmap</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>b8e7141b2787433c766dfcb1e9aa42dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FlowMap</type>
      <name>flowmap</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>29b32fc281e410ed071616d03780a89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; Vertex &gt;</type>
      <name>vertices</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>ea85876ae73f95cadddcd94e052c0af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VertexMap</type>
      <name>prov</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>7ce28505ec1d8d35018edd0a54ed2ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VertexMap</type>
      <name>decv</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>446cfe39b3793cf849055fe618c3c8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GenVertexMap</type>
      <name>vmap</name>
      <anchorfile>classThePEG_1_1HepMCConverter.html</anchorfile>
      <anchor>bc8f3fbefacea833f6fbac8561d8b822</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::HepMCConverter::Vertex</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::HepMCConverter::Vertex</name>
    <filename>structThePEG_1_1HepMCConverter_1_1Vertex.html</filename>
    <member kind="variable">
      <type>tcParticleSet</type>
      <name>in</name>
      <anchorfile>structThePEG_1_1HepMCConverter_1_1Vertex.html</anchorfile>
      <anchor>584cc634e2d8ceefc647dd63f5ffbb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tcParticleSet</type>
      <name>out</name>
      <anchorfile>structThePEG_1_1HepMCConverter_1_1Vertex.html</anchorfile>
      <anchor>3bb5f573a9997aeb67e36b37456972fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::HepMCTraitsBase</name>
    <filename>structThePEG_1_1HepMCTraitsBase.html</filename>
    <templarg>HepMCEventT</templarg>
    <templarg>HepMCParticleT</templarg>
    <templarg>HepMCVertexT</templarg>
    <templarg>HepMCPolarizationT</templarg>
    <member kind="typedef">
      <type>HepMCParticleT</type>
      <name>ParticleT</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>6d1091e96e620e438cb82d5cd1e7e1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HepMCEventT</type>
      <name>EventT</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>ebfd8c0219f055acf2608239782bf9d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HepMCVertexT</type>
      <name>VertexT</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>3388cb29bb8e1cdfb9c1dd50b596e3c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HepMCPolarizationT</type>
      <name>PolarizationT</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>916d1443da199f61ba58c1163af86511</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EventT *</type>
      <name>newEvent</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>9ae237bf2d1b0d8478655e5667c80ea0</anchor>
      <arglist>(long evno, double weight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setScaleAndAlphas</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>5407ae389b6d78024d33376eac187841</anchor>
      <arglist>(EventT &amp;e, Energy2 scale, double aS, double aEM)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSignalProcessVertex</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>0c909a18a4cb145266da19b37d599069</anchor>
      <arglist>(EventT &amp;e, VertexT *v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addVertex</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>82520a805f18769de5cb0fece04b01c0</anchor>
      <arglist>(EventT &amp;e, VertexT *v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ParticleT *</type>
      <name>newParticle</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>f8e01eed2f80909eb6b8f40e86605966</anchor>
      <arglist>(const Lorentz5Momentum &amp;p, long id, int status)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPolarization</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>e660bf0d33ec57b6b939adeb91febdcb</anchor>
      <arglist>(ParticleT &amp;genp, double the, double phi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setColourLine</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>c5ff12cbb474d857db1242e9828420a4</anchor>
      <arglist>(ParticleT &amp;p, int indx, int coline)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VertexT *</type>
      <name>newVertex</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>a895e32c69e0db809c9bb118173852c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addIncoming</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>5458b37bb2cc806f13930bd93c9c10ea</anchor>
      <arglist>(VertexT &amp;v, ParticleT *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addOutgoing</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>bbdba0081966c80a43f8496b6df0485b</anchor>
      <arglist>(VertexT &amp;v, ParticleT *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPosition</name>
      <anchorfile>structThePEG_1_1HepMCTraitsBase.html</anchorfile>
      <anchor>55d50ee3005ddbf67f144c41933524ec</anchor>
      <arglist>(VertexT &amp;v, const LorentzPoint &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::HepMCTraits</name>
    <filename>structThePEG_1_1HepMCTraits.html</filename>
    <templarg>HepMCEventT</templarg>
  </compound>
  <compound kind="class">
    <name>ThePEG::Lorentz5Vector</name>
    <filename>classThePEG_1_1Lorentz5Vector.html</filename>
    <templarg>FloatType</templarg>
    <member kind="typedef">
      <type>FloatType</type>
      <name>FloatType2</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>66e9d3b272bdaf8fee1ead2b77ab60e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Lorentz5Vector &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>5c9a321458ad36df34bdcb07035b31e0</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTau</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>f3aec880e9204150d2d6f8b7c88f5573</anchor>
      <arglist>(FloatType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>299b1cd536bbe8d8a69589045210bd8b</anchor>
      <arglist>(FloatType)</arglist>
    </member>
    <member kind="function">
      <type>Lorentz5Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>def6d5c3b1262a81c9c2afdbff9e04b9</anchor>
      <arglist>(const Lorentz5Vector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Lorentz5Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>0cf9a36c7bce01b0d55c595d1d1b2e27</anchor>
      <arglist>(const LorentzVector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleEnergy</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>03877f2c1abe8893ff77d1dbcdeb4039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleRho</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>1e81223de4f98fe9b314c12137c25678</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleMass</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>19a329ae062f70ac49c09c84510fe1e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>massError</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>0bc46f38914eff39d6a6434c30f20d89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>energyError</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>36bee3dbf5da8f88ab8b9e4a99bc6b79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>rhoError</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>e6c4ac30bc229f132c5da1dd9b2ab384</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>5a688c60322c376f7dd4a8d8326d8829</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>ed6afb7860dfd454fed653c29636c862</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>FloatType2</type>
      <name>mass2</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>0d7dd0200427f0575010fcd358dc81b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType2</type>
      <name>tau2</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>a05bdc587c44b53ce3ae0791f5a1f92c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>mass</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>0bcc087eb481e127351ad3c9683058d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>tau</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>ebd06d93e0c7bb80a5c7f8df83ba38b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>dirPlus</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>1bd1ec91012cf9236d94cb3aa212a172</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>dirMinus</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>715cb278868b16d32e6518b28314216a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FloatType</type>
      <name>mm</name>
      <anchorfile>classThePEG_1_1Lorentz5Vector.html</anchorfile>
      <anchor>9d7c1fd8d62fc44b5a5c405f2957390c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LorentzRotation</name>
    <filename>classThePEG_1_1LorentzRotation.html</filename>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>5015ed2d325cc26aadb77e9f5b8a7059</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>81534c401fd3aff7ccf25f5e04929123</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation</type>
      <name>inverse</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>fd72e43f9eb26f5846de23f634c69936</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>invert</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>be3b00ca37e317fe905486b93974ce97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>e18837c22d2a1048e0aa0eef9534bd99</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>setBoost</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>4761e4e0844276fba92b9b79156d4ff5</anchor>
      <arglist>(double bx, double by, double bz)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>setBoost</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>8c37621841ce765fe0d01f5d19f8287d</anchor>
      <arglist>(const Hep3Vector &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>setBoostX</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>8397915c0f0cddbc88edf9250c8d19c3</anchor>
      <arglist>(double boost)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>setBoostY</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>7d72ffee3485155f7a93f9bcd40d0b2f</anchor>
      <arglist>(double boost)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>setBoostZ</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>92c4f55ea13c445389a600c7d21e2b51</anchor>
      <arglist>(double boost)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>setRotate</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>68bfc0cae0926dcfc68738a12a40f724</anchor>
      <arglist>(double delta, const Hep3Vector &amp;axis)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>setRotateX</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>f6f8d7f70e12e122146618307973cae3</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>setRotateY</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>edf9e72d71e8bea098fa5eff21c29bb4</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>setRotateZ</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>ba5e980f086797a4beac47acabf62b14</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>const SpinHalfLorentzRotation &amp;</type>
      <name>half</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>cecc29825d0e358a4006dc7950827183</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SpinOneLorentzRotation &amp;</type>
      <name>one</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>f1edc84794040866c0d72bad3f85b339</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const SpinOneLorentzRotation &amp;</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>77cad4d96c74eb974cddde3c5cc8e345</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xx</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>0cafb7f65dba436f51362236fa218203</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xy</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>380280e3573e1b5145ad6450e666df93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xz</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>1378d891911f87398a1c869868aaaab6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xt</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>ad6acda33f1e79b303f54d672a4b8a3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>yx</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>7747301370297af2d8bb59cdecf66f66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>yy</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>ace73fed0996403d3ed033160b27b8ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>yz</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>0c91c60444b1c4dc7ff8cd5531f6b075</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>yt</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>f7a61c3ec855374f67dccea2206762be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>zx</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>fd5f98d7fabed7e668194a81062243e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>zy</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>01ac6c89c18c119801d16e11bee3b621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>zz</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>88f3107ecf546619ea0e85cbe0c23e42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>zt</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>2aa591a3723d0419f527424d3d57a294</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>tx</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>3a4e9aaee862b75e53d0ec4e3f4a97ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ty</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>3416d5b33fa1da1f1d10d52b5fb7b474</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>tz</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>24e0e3364490d4071ccbb56431d9e6ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>tt</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>fb8490262638a8545f1973a5d7ee9131</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1s1</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>2893f9762a826c0e6414044b83ba9ebc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1s2</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>1d159b19ab63b7414754eeaf235badac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1s3</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>283a4f8359b10845d4ccf820d2cb6da1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1s4</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>c6db991c2edd6825c0e1a3343ee33ef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2s1</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>b8b24142c1eaeccb90942bd234c4ebfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2s2</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>a23f82a92404a1d7f5cfc036eaf750a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2s3</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>086fa4455c9f92ca44215a4e6faae77f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2s4</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>4c17418b90177af56e903be8f639d4f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3s1</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>6e21fa28bebc039a226bbf6de5bf5214</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3s2</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>fa9adc3347b17f02538572d65534e512</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3s3</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>84488e4ca0a766081adc9f045b274321</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3s4</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>a2cca1b5a398be71db29f93d974fdcdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4s1</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>f08010f6cfadc482c64338f3a9b4f53f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4s2</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>af9c7504dd8cceff2128d94e5726a41d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4s3</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>52126edca11f18d36f825a72e692ac50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4s4</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>03f947b0ca84afb400ed47910dea0bb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzVector</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>7cdc8b6ed76b96ca1a10275f9e3b580c</anchor>
      <arglist>(const LorentzVector &amp;lv) const </arglist>
    </member>
    <member kind="function">
      <type>Lorentz5Vector&lt; FloatType &gt;</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>52d21b270ae016033d4ce78ca6f1dd55</anchor>
      <arglist>(const Lorentz5Vector&lt; FloatType &gt; &amp;lv) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>b93f0f0750f0e302c4221ce8e11da17f</anchor>
      <arglist>(const LorentzRotation &amp;lt) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>operator *=</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>6e1dd9ee199a69286c5482da501e0c9c</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>d89e8792a17e5c04c022ba4304da723c</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>rotateX</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>1afc1034024cf3f3e1a233180fc23f22</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>rotateY</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>6549d7ad07c271c81fe8238891f56dfb</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>adaf8a9d2256edf929b79bd890dc2bf9</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>rotate</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>ba4e44f8a313016b057b594963bbab04</anchor>
      <arglist>(double delta, const Hep3Vector &amp;axis)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>boostX</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>05dce75945c4ddc2533302145308491e</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>boostY</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>4cedd863259c82c989121767468f3edb</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>boostZ</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>365650d5fca8899d1fe319439d79f918</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>fae8e53c9ae91a6aae90e2a5d9f1fc48</anchor>
      <arglist>(double bx, double by, double bz)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRotation &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>b4dd35f20e6d5e1af20f2877b7e6a450</anchor>
      <arglist>(const Hep3Vector &amp;bv)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpinHalfLorentzRotation</type>
      <name>_half</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>6c28ae23e6ae915cc7dd22a8f478b922</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpinOneLorentzRotation</type>
      <name>_one</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>b72b16ce2f27ca6db00a7ffe2e5f8802</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend LorentzRotation</type>
      <name>inverseOf</name>
      <anchorfile>classThePEG_1_1LorentzRotation.html</anchorfile>
      <anchor>d9a120c267f96752133372d92ac87853</anchor>
      <arglist>(const LorentzRotation &amp;lt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SpinHalfLorentzRotation</name>
    <filename>classThePEG_1_1SpinHalfLorentzRotation.html</filename>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>b3c6c2c2602f519d7ee0a9293dac1e2d</anchor>
      <arglist>(const SpinHalfLorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>5d516ce720ae2c1ca5e3b5a5d349561d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation</type>
      <name>inverse</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>1f28b9b51b43189520aba5cb0b77235f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>invert</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>422b3f65322d4698f64b9cf14c816740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>49973bb03d53e026bdfbf8610f3ade80</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>setBoost</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>e58a46f6cda4e501aeee6f71ff5d8c15</anchor>
      <arglist>(double bx, double by, double bz)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>setBoost</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>058edd59c233320f2550dccc5959d3d7</anchor>
      <arglist>(const Hep3Vector &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>setBoostX</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>c7f224ea68a4882d9fca1cc65674ffa5</anchor>
      <arglist>(double &amp;boost)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>setBoostY</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>911c0b1dc255be8256f05736c8bee1d1</anchor>
      <arglist>(double &amp;boost)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>setBoostZ</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>8eeac87c43319942e4ad14a2456a0a0f</anchor>
      <arglist>(double &amp;boost)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>setRotate</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>25277c5f430708496ad49de592454eb6</anchor>
      <arglist>(double delta, const Hep3Vector &amp;axis)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>setRotateX</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>673ec04a3dd2910e37c58d3e9ad22549</anchor>
      <arglist>(double &amp;angle)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>setRotateY</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>faf18151a847eaa7d7a7397f497e2dbe</anchor>
      <arglist>(double &amp;angle)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>setRotateZ</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>08fe2888d38cebfe3b93836a7f6e615d</anchor>
      <arglist>(double &amp;angle)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1s1</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>603fea0c96776ee5028e935565fec49d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1s2</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>7c794f2632865ff5157ad8b99610e988</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1s3</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>6361fa6d790b25263fd4c6925314f24b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1s4</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>8e2aef276f9ed473d1a1feda6029ca00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2s1</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>5c29c95213453467c84b7e8dd4921271</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2s2</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>6f369d29c22370bfa33c7d96f11d9963</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2s3</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>329e85c3acbc50c301c7a1772beee0d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2s4</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>cb07c2ec32d9b9a8eba3a14fe5250f41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3s1</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>f9c8186dc8614947eb827a7b4fb064e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3s2</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>945051a24cbed7ae4f028da6497a6502</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3s3</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>830cf0ad1560aa6e895d843fdcd00849</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3s4</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>689abf5d19107ac6b0681ad1d156a9bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4s1</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>0b4aa76900e9bdb6b70a47ff8c75d86c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4s2</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>6241a70a3120e5b31e40f91b4100d37f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4s3</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>0e83c6c8091ed07cbd59a6fdbd6cb3e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4s4</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>4a0d5e04b839de74a004e49f9067545e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>1c88a643afe242a606adb72dff5d86b3</anchor>
      <arglist>(unsigned int, unsigned int) const </arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>f03a396ebce1b003968380f92a491f04</anchor>
      <arglist>(const SpinHalfLorentzRotation &amp;lt) const </arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>operator *=</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>697e4208e392e3fddba8551626b517a2</anchor>
      <arglist>(const SpinHalfLorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>9891d2a31c2ba92121b92505956a2d8c</anchor>
      <arglist>(const SpinHalfLorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>rotateX</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>9b10a45fda66f0bdc50de07628042401</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>rotateY</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>4ea00342a000263f3db239c57a2a549a</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>7edf06b1ba73e8eaa6545cd87d55edb8</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>rotate</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>f95ba2e01b8ca0d144ded5b3d8ee6b8c</anchor>
      <arglist>(double delta, const Hep3Vector &amp;axis)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>boostX</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>ee405e4c637e73beeb3a9a4cbd3df86b</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>boostY</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>0d0d878fe6bc93fa7d735c2fa2ded6c0</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>boostZ</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>ae4c146e5705553ed005dad0845282be</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>f321ebf3ac944fe618c136001919b412</anchor>
      <arglist>(double bx, double by, double bz)</arglist>
    </member>
    <member kind="function">
      <type>SpinHalfLorentzRotation &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>ab2e819f3832ff1a13f0abafa57cc1a6</anchor>
      <arglist>(const Hep3Vector &amp;bv)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SpinHalfLorentzRotation</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>cf01dbc956ff2d70bf30184bc024df6a</anchor>
      <arglist>(Complex s1s1, Complex s1s2, Complex s1s3, Complex s1s4, Complex s2s1, Complex s2s2, Complex s2s3, Complex s2s4, Complex s3s1, Complex s3s2, Complex s3s3, Complex s3s4, Complex s4s1, Complex s4s2, Complex s4s3, Complex s4s4)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Complex</type>
      <name>_mx</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>6aa94b057c95412b92aa4b3b3ab24ba0</anchor>
      <arglist>[4][4]</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend SpinHalfLorentzRotation</type>
      <name>inverseOf</name>
      <anchorfile>classThePEG_1_1SpinHalfLorentzRotation.html</anchorfile>
      <anchor>c2a659cec9ef9129512fcd3a6904997e</anchor>
      <arglist>(const SpinHalfLorentzRotation &amp;lt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Transverse</name>
    <filename>classThePEG_1_1Transverse.html</filename>
    <templarg>FloatType</templarg>
    <member kind="typedef">
      <type>FloatType</type>
      <name>FloatType2</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>848974df594ef4c6fe0e9b5e920711cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; FloatType, FloatType &gt;</type>
      <name>BasePair</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>b876110b578bf134897628434f16b64d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const Transverse &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>121429af5f3d4f637f4ccf7f95f9aae5</anchor>
      <arglist>(const Transverse &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const Transverse &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>fa26e0c5657f51c148534c12e9673b49</anchor>
      <arglist>(const BasePair &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const Transverse &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>b6328c8d333cac2bda4dcfc08e220036</anchor>
      <arglist>(const Vector3 &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const Transverse &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>b9bbecdc32be86bfaa4add48ec7121da</anchor>
      <arglist>(const LorentzVector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const Transverse &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>bff1fc64e5a628b30da181277ff70900</anchor>
      <arglist>(const Lorentz5Vector&lt; FloatType &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Transverse</type>
      <name>operator-</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>f4bc11291c1f5dfeabd8a403d743d8bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Transverse</type>
      <name>operator-</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>10f676a640f476952ed73fda348d829c</anchor>
      <arglist>(const Transverse &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>Transverse &amp;</type>
      <name>operator-=</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>f97d5de0c68531735a5915c0a89dc86a</anchor>
      <arglist>(const Transverse &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Transverse</type>
      <name>operator+</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>838053c9f8e74d36ec26171f3e21ff67</anchor>
      <arglist>(const Transverse &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>Transverse &amp;</type>
      <name>operator+=</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>0f6512694ad47b133c524966861f9e8f</anchor>
      <arglist>(const Transverse &amp;)</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>x</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>ac38071234fca5feae56da2c1dd19085</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>y</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>c2fdf7eb2fafd9abc581b0de4b84d4d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType2</type>
      <name>pt2</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>13f59f6bf67fa4d2524fb969cfb19011</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>pt</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>a6979764501fadbfcaeb164150423175</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>phi</name>
      <anchorfile>classThePEG_1_1Transverse.html</anchorfile>
      <anchor>fb510cbbe60f8d1eec0486f5de15b66f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::IteratorRange</name>
    <filename>structThePEG_1_1IteratorRange.html</filename>
    <templarg>Iterator</templarg>
    <member kind="typedef">
      <type>std::pair&lt; Iterator, Iterator &gt;</type>
      <name>BaseType</name>
      <anchorfile>structThePEG_1_1IteratorRange.html</anchorfile>
      <anchor>7fbe72a67c6350fa5470ff5b02792bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IteratorRange</name>
      <anchorfile>structThePEG_1_1IteratorRange.html</anchorfile>
      <anchor>71ee704cbc8d63d943c5e6dd229efd38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IteratorRange</name>
      <anchorfile>structThePEG_1_1IteratorRange.html</anchorfile>
      <anchor>8fa2bc63401c49502582a9c96320f160</anchor>
      <arglist>(const IteratorRange &amp;ir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IteratorRange</name>
      <anchorfile>structThePEG_1_1IteratorRange.html</anchorfile>
      <anchor>ac6c0492d9c5d6b23c26c02a248f9721</anchor>
      <arglist>(const BaseType &amp;ir)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Base</name>
    <filename>structThePEG_1_1Base.html</filename>
    <base>ThePEG::Pointer::ReferenceCounted</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Base</name>
      <anchorfile>structThePEG_1_1Base.html</anchorfile>
      <anchor>f96a952c50df43467e3d170a439ee4f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>structThePEG_1_1Base.html</anchorfile>
      <anchor>86099aed13fdb34256e7ebc5a9e84a08</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::TraitsType</name>
    <filename>structThePEG_1_1TraitsType.html</filename>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Veto</name>
    <filename>structThePEG_1_1Veto.html</filename>
    <member kind="function">
      <type></type>
      <name>Veto</name>
      <anchorfile>structThePEG_1_1Veto.html</anchorfile>
      <anchor>238ad3bb57e30e9eb5191891e4f9b6c9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Stop</name>
    <filename>structThePEG_1_1Stop.html</filename>
  </compound>
  <compound kind="struct">
    <name>ThePEG::MultiplicationTraits</name>
    <filename>structThePEG_1_1MultiplicationTraits.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>ResultType</name>
      <anchorfile>structThePEG_1_1MultiplicationTraits.html</anchorfile>
      <anchor>753f0aace1baa24525a8fa5fa5c02673</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Cuts</name>
    <filename>classThePEG_1_1Cuts.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="typedef">
      <type>vector&lt; OneCutPtr &gt;</type>
      <name>OneCutVector</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>ab2d63503ad947e4c6aaf53706b10298</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; TwoCutPtr &gt;</type>
      <name>TwoCutVector</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>97798fab9c730e9efeb4aeda4524d526</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; MultiCutPtr &gt;</type>
      <name>MultiCutVector</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>f71fc4c72c9c67afb72c3594364cbd77</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>0f06634fe0df7d28d26d3284f414e0e7</anchor>
      <arglist>(Energy2 smax, double Y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initEvent</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>d5a1af265c7e7c5ea7e734f20698a4ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>initSubProcess</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>99bbb3f3e096e7ee2b412c263c5db7fa</anchor>
      <arglist>(Energy2 shat, double yhat) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>e5ef53ad1ceff2f34d0e14fb66630588</anchor>
      <arglist>(const tcPDVector &amp;ptype, const vector&lt; LorentzMomentum &gt; &amp;p, tcPDPtr t1=tcPDPtr(), tcPDPtr t2=tcPDPtr()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>07a42dd518d85e812cb3849c90ae3cf7</anchor>
      <arglist>(const tcPVector &amp;p, tcPDPtr t1=tcPDPtr(), tcPDPtr t2=tcPDPtr()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>ee61cc93c86f2dfea7f6b0cf4ba41196</anchor>
      <arglist>(const SubProcess &amp;sub) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>e52d170e5fc638fbd43a997ed00f6be4</anchor>
      <arglist>(const Collision &amp;coll) const </arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>minSij</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>96aaabd11833f8247a5a4d5879a0cfb3</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>minTij</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>59718e9cbba7a103b7ae727fa1bb06fc</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr po) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minDeltaR</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>53a4b588bc263508acf264aa7f61faec</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>minKTClus</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>ab9fd916c9d61a753e92d25a76d6aa74</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minDurham</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>4b8bcd3faedf72e771ddee02c05780d8</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>minKT</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>ebce7bb8687e287c6e027bbc516668ba</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minEta</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>e01950981763492490313838fe1a2c16</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxEta</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>075b882a089b986f852fa2322b72a63a</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minYStar</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>c5f52cba3640d4f12a70623c9b9a2c65</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxYStar</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>7896b252357a76050cb179654a4c170c</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>minS</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>59ccadebf5812f37ccb8a71461685ae8</anchor>
      <arglist>(const tcPDVector &amp;pv) const </arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>maxS</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>5f4494312806099274a5b64e5a29ed8c</anchor>
      <arglist>(const tcPDVector &amp;pv) const </arglist>
    </member>
    <member kind="function">
      <type>vector&lt; typename Ptr&lt; T &gt;::transient_const_pointer &gt;</type>
      <name>oneCutObjects</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>e07404ac3f8d7405af76c4a3b21427b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; typename Ptr&lt; T &gt;::transient_const_pointer &gt;</type>
      <name>twoCutObjects</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>5f99c9c9b30fb979d3248a03e54d3f3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; typename Ptr&lt; T &gt;::transient_const_pointer &gt;</type>
      <name>multiCutObjects</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>92ac86d32ed02c99c6571b7aef4b0612</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>5f6afb51c50a3ffa411bf95fd452689c</anchor>
      <arglist>(tOneCutPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>cc0a29ad1fc4fb6c55c5612adf6c141b</anchor>
      <arglist>(tTwoCutPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>18cf3f27b1d687a1753fde28302c70cc</anchor>
      <arglist>(tMultiCutPtr)</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>SMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>ccb068bfe0a731f477ae87bf0a078ea5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Y</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>abc45e53242fac5ab07a06b9347fa868</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>currentSHat</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>7e00f94c0148409acc10f915352416bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>currentYHat</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>78a692778a442bd3b95931901e6400f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>sHatMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>303d7ebab4815c4a30c0143c41b910f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>sHatMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>a6f6f64ed5a73b50b933c31838c53351</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sHat</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>2ce20f57210352147685be060e61529f</anchor>
      <arglist>(Energy2 sh) const </arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>mHatMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>f7f0da3e9ebc507abd7c0b42de3bc03f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>mHatMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>719187d86f6e51134b7c7aee4aa660c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>yHatMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>e0bb4a7594c8c1f5c04d59cabb403fd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>yHatMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>993460628ec386e5935163b867c9e5b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>yHat</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>5abac0028e446de9d9c0ae6fb66b9be1</anchor>
      <arglist>(double y) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x1Min</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>99e6817b9ea0a70a2d882ec737437725</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x1Max</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>99d838ac7b23eda1f83a0fa2abd2cae1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>x1</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>198b1031450d753ae9169ad66512bf24</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x2Min</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>5abff8312811005a29f7a2c05a7cedda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x2Max</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>4849aee5fd1600ca7a8b71483d117fe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>x2</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>99d1a16aac8017caf6fc55d663876a64</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scaleMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>99c4004f872bdff58b27de8cd13566ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scaleMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>f365778be14e09c5299ffbc4976a9f09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>4b1b57febd84d0187e40f0cdfdab73fb</anchor>
      <arglist>(Energy2 Q2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>d827468bd432fc6ae197364ac271d90b</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>c75d9e5c81cb8a1201a5eb29203aa1a1</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>f3a1b3c2e703b6bb67e061510668a6a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>b65f7bbdc12a09b4ea8feed91b11e6e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>48ab6f48151092baf5fe1d59272a10b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>89fd95bfc47eb7c380785f353cc06692</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>50a86e2848eee3ba01c621771542d83c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>50238358400f56fc09b4fce8d5f83c05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>cd6af1083377e66342490ab697cea742</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>590a0142c233acf72f301661391d33be</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>a1843356df1f606343d317ca3f711a05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>maxMHatMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>9fa5cfcde7c26d2945ab54f5c3b05064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>minMHatMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>37b9896c47974df2d1d1ab6107e52d9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>maxYHatMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>797b84daa719a13bf8b60e592f88f0eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>minYHatMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>988f2cf53cfea839ead0eb6ee41b4b34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>maxX1Min</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>a7b2afd284fa1352c4bf9d7c50f44e77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>minX1Max</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>37e7e460d042f7b256832c83b3922a70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>maxX2Min</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>653e30194392ff5eadafa331225cc86a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>minX2Max</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>19b235d16fd9031d4886137ad90976d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy2</type>
      <name>maxScaleMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>db441bd861eab20eb1649d17430182ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy2</type>
      <name>minScaleMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>5440f5e04f0d699a21dc79ad28c5d288</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Cuts &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>8207fc341cbc87cd3ea26d0c8a099368</anchor>
      <arglist>(const Cuts &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theSMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>8be6105b3cb1e250a7fd577dfd01797f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theY</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>ebf97552ad5947974ccea91622e01db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theCurrentSHat</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>e471b62a1c734af7410801bbb1ba892e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theCurrentYHat</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>65f186234ec9e26685b507e6b77c7aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMHatMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>23cdadadc9aed23156e104580827ded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMHatMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>fae98e999b8483f85543f4efdf353395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theYHatMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>392947e96b5f53b0cabe221266b713ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theYHatMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>5bb69acdc4663054f912693e43805937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theX1Min</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>b79b7f6ad1f0b2b20194fb27508b2b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theX1Max</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>d492d28f8992c3e6693e093f0fe98f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theX2Min</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>4f5be69ccccfee8cdf1e091100386c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theX2Max</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>9dcc5eec03f6d4399442dfd147a44450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theScaleMin</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>b6d6e4aa6d79a51b43442f01be40589e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theScaleMax</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>bea6cb9ac2282a7eb6f5944e678f5268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OneCutVector</type>
      <name>theOneCuts</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>858840f661c0fe0601c70b6e7f94ec09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TwoCutVector</type>
      <name>theTwoCuts</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>394a9569f0dfd602d5f2df780a1a6245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MultiCutVector</type>
      <name>theMultiCuts</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>9630bdc15c89f18494e2fa62f242768e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Cuts &gt;</type>
      <name>initCuts</name>
      <anchorfile>classThePEG_1_1Cuts.html</anchorfile>
      <anchor>e048889c2e8a9ea78221dfed9444a201</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::KTClus</name>
    <filename>classThePEG_1_1KTClus.html</filename>
    <base>ThePEG::TwoCutBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>minKTClus</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>530c889b5d1bcfa6a592c0d363e83027</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>minSij</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>7bd9ec5b1ec1b7868339c0f5d98e3481</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>minTij</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>c9f8441ecae8ddd90ef4cc5691b1f798</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr po) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minDeltaR</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>c99b70612cab666a681bd014836c3191</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minDurham</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>6c5789442532464b85483f4d3387ba31</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>857b068b27ea1353d897302eff48f816</anchor>
      <arglist>(tcCutsPtr parent, tcPDPtr pitype, tcPDPtr pjtype, LorentzMomentum pi, LorentzMomentum pj, bool inci=false, bool incj=false) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>8c8d926d444a2cf7840e9cdeb1f55599</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>2aa938ca0b38d724bd0e6ea2c4272766</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>6aeeacec64c242421d6b55d72a4f2b5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>d229bce706bcbff83491a4263c05e916</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>1e10bff8197a51197e9363fae7ce2ad5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>3923f9178514cc7b92b7f6096192f997</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>1d560373b87057a61a6247ea16fa8cb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>a21fb102909437fff33201481948ab5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>c028b2bab8d5799f4f0c63fc8f1b0d29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>4f77f6eabf7d88d55746dc580398aae9</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>97839e36c466dd6517e6ed63aec422a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>KTClus &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>243708ceeb1c9e4df26302fe6f4206c1</anchor>
      <arglist>(const KTClus &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theCut</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>7f021d0ca421ec24c5a06c164394d89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>onlyJets</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>720a8cb187233ec108bde78f43136c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; KTClus &gt;</type>
      <name>initKTClus</name>
      <anchorfile>classThePEG_1_1KTClus.html</anchorfile>
      <anchor>ebea2678415cb784238f3c9b8dabfb79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MultiCutBase</name>
    <filename>classThePEG_1_1MultiCutBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function" virtualness="pure">
      <type>virtual Energy2</type>
      <name>minS</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>66d280f8a415b4ba7a492dceedf2d925</anchor>
      <arglist>(const tcPDVector &amp;pv) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Energy2</type>
      <name>maxS</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>9ad653d63bd0d79a7b4f7b2be4b7f1d2</anchor>
      <arglist>(const tcPDVector &amp;pv) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>92349524ccdb2be14986cfb47f0c9098</anchor>
      <arglist>(tcCutsPtr parent, const tcPDVector &amp;ptype, const vector&lt; LorentzMomentum &gt; &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>7e46468852c6addc0bcafe49bceb2b3a</anchor>
      <arglist>(tcCutsPtr parent, const tcPVector &amp;p) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>67ac2acbd0404c168b27634ffa2145d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>b95b9ba8c75ecc467110b69f21ed3171</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>1630052a8c84b95f304e26f6a3da58c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>46faa4e58d51c686dc0ed72d879e72e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>970cc7dc8a74c6596dd0c7d0afb38881</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>24a16ed9a6ca4fef31c1bd47c379049e</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>5e15063bb2a6afa2e1f6058db9136eb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MultiCutBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>50a1d9db68e049bb5db99ff8cbd0492b</anchor>
      <arglist>(const MultiCutBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; MultiCutBase &gt;</type>
      <name>initMultiCutBase</name>
      <anchorfile>classThePEG_1_1MultiCutBase.html</anchorfile>
      <anchor>60930cc86ca663889d59f43207cf5af3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::OneCutBase</name>
    <filename>classThePEG_1_1OneCutBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function" virtualness="pure">
      <type>virtual Energy</type>
      <name>minKT</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>d7e7c43aedd8fa6b8ff6243a7f008b9f</anchor>
      <arglist>(tcPDPtr p) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>minEta</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>10315d2b0728bea04d1b2f5cd2513319</anchor>
      <arglist>(tcPDPtr p) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>maxEta</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>91146d159aa1d6d96e9fc06c300f579a</anchor>
      <arglist>(tcPDPtr p) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>minMaxKT</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>32dbdde12fab54027fd094eaacbc4745</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minMaxEta</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>cf4c731a7343fc2d8032b3e71db8572b</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>maxMinEta</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>da117340138a6284a73d57c5cc2de9e5</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>9ad84eef63e56331a015357c5bbc7199</anchor>
      <arglist>(tcCutsPtr parent, tcPDPtr ptype, LorentzMomentum p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>5922d5da21c342c78ae54a4b9db95a40</anchor>
      <arglist>(tcCutsPtr parent, tcPPtr p) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>e93b879cd9b70527e9058b090352bc2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>17ed10741b1a05de5fb6b696bcfac125</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>ad2f659789e26f5fc3eff1cb36b0dce4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>ecacc3fc4679879bbb6f78424ede7ed3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>d80df5879bd35d00f9d9a6bfec962300</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>773fa9a79c1fb28a5776252499190baa</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>5eb1f713f63cbdc244a0b2e98304e531</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>OneCutBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>2a12223c825fc6ca2c4611f3f5ee8793</anchor>
      <arglist>(const OneCutBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; OneCutBase &gt;</type>
      <name>initOneCutBase</name>
      <anchorfile>classThePEG_1_1OneCutBase.html</anchorfile>
      <anchor>277c236e0d9ec374ad19e54fe303ba47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SimpleDISCut</name>
    <filename>classThePEG_1_1SimpleDISCut.html</filename>
    <base>ThePEG::TwoCutBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>minSij</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>6f47941f21757dfcbb4931fce690aacf</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>minTij</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>e46eab8264b0172022722ef97c0bf591</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr po) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minDeltaR</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>0fc2dca60fbed2c2b9473a89f1cd8c30</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>minKTClus</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>d6a2ca3f378789fbd8d0ed116507a7a1</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minDurham</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>64929268f12eb73acde3623b7b8eb95d</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>27c8fdf37074bceab038ca6b62aebcda</anchor>
      <arglist>(tcCutsPtr parent, tcPDPtr pitype, tcPDPtr pjtype, LorentzMomentum pi, LorentzMomentum pj, bool inci=false, bool incj=false) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>30be1b25c34918c32746ed2877a5e98e</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>a5fd1e3162addc10e89ae23e726e56ba</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>616da8e73a56f1eb4fbb0bcafda64c7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>db97bd30259004239975fef25462c11f</anchor>
      <arglist>(long idi, long ido) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>36ea2c4863a7d58d27edd6b6ff12ff76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>0dfb9c18c8378a6eae99af0d4735df9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>31922846e6114b78eec036d4d75984cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>fd4602178f9f54989ae0741c33d340f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>8331442421f2624ddda7a52310362a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>37e98194222df7fe83322231fb9c16fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>bd2976a0ca04f31ce131520a5a0b389d</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>45e0c9c81a5010593e58ad8bc709820d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>maxMinQ2</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>0b6743245539c11655c6404b835ebac7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>minMaxQ2</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>6c2369ca06f827787faf9d7c8b787dee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>maxMinW2</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>8049c5ed65ff7b2e82972618640f13e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>minMaxW2</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>d883bddbcd21c7ea92aedd43fb3a4d0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SimpleDISCut &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>520121dfef87a6c35e7ee178fb03035a</anchor>
      <arglist>(const SimpleDISCut &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theMinQ2</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>c693c3ce053012ba22c43b166a5b3b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theMaxQ2</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>b8e4cec105a17825c112134e56b47a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theMinW2</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>fb45e713b6b07cf0da33f9689e10d1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theMaxW2</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>d9d5d8da14b82b36ca1b2277986056c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>chargedCurrent</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>765848faf08f9afac588e46c03bc65f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; SimpleDISCut &gt;</type>
      <name>initSimpleDISCut</name>
      <anchorfile>classThePEG_1_1SimpleDISCut.html</anchorfile>
      <anchor>78ff4b28df25ab1c33056a4f69cda791</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SimpleKTCut</name>
    <filename>classThePEG_1_1SimpleKTCut.html</filename>
    <base>ThePEG::OneCutBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>minKT</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>62b44f515ff858a6b9bb44c6c1f51eca</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minEta</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>7110d2ace174393495d626ae7a705020</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>maxEta</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>cdb2153dd9b3efa124e2c0bcc865ca27</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>a19622c02ce89d92d13749ece4a99cb9</anchor>
      <arglist>(tcCutsPtr parent, tcPDPtr ptype, LorentzMomentum p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>0467590436cd13df4bd605e0e0056068</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>55f74c6e93069240e9e068e024db81bb</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>73452653e34b50656ba0de090d068bc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>b8f8281cc7f721bb1e70581d8e2285a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>3bf9e912b073d469ffc80741448185d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>9cd02112b04064cd411eede2999ef396</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>723b38adb52f4e5a10f071c66f2bd2f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>a62b1cc13b6986ae6d4309aa128ab3ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>bcfa64ea3ff20be86d78a165bb4e423f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>014fd8c4e5a8b10ff350b87558aecb66</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>c7231b1ce089abda0637b83efe4cbf07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>maxKTMin</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>c326ef892ed9d21977e485f2d822c487</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>minKTMax</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>044438a8ce9979d05cd0a687c08648e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>maxEtaMin</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>2fd4b25eeb21cc8d943483473f4143c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>minEtaMax</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>5197c9dc46ae1a880fefbda6707a69d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SimpleKTCut &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>3c5298085ee012b6505c7d41e81870c0</anchor>
      <arglist>(const SimpleKTCut &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMinKT</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>9b5bdac6cfdee1dc951cf83b4b3bda0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMaxKT</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>522e0be8f14048aa9aa559f5098334c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theMinEta</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>c9c5766322a2288544d68cbef0a4189e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theMaxEta</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>0e90ba70a2e9fa124f3d1607cfd7341b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PMPtr</type>
      <name>theMatcher</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>b307afebeb4bab689b15c972783fdea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; SimpleKTCut &gt;</type>
      <name>initSimpleKTCut</name>
      <anchorfile>classThePEG_1_1SimpleKTCut.html</anchorfile>
      <anchor>b32e1c740b980b4b6fedfd0bcb9fe940</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::TwoCutBase</name>
    <filename>classThePEG_1_1TwoCutBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function" virtualness="pure">
      <type>virtual Energy2</type>
      <name>minSij</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>62e9bfa7809dbefa0f1ad910a6992eca</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Energy2</type>
      <name>minTij</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>b6ea1a803a995cb59de4b0de52820adc</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr po) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>minDeltaR</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>45290a9ac82f9c8af1c69e7a50208e26</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Energy</type>
      <name>minKTClus</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>f32ae4f128af6af9e3bedc9c88765638</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>minDurham</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>eb74bec31271fc141fd050fb877c7e83</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>1e14e006ba63e616b44572923892e6bb</anchor>
      <arglist>(tcCutsPtr parent, tcPDPtr pitype, tcPDPtr pjtype, LorentzMomentum pi, LorentzMomentum pj, bool inci=false, bool incj=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>b84336b87a423a210a10a3510bae9ba5</anchor>
      <arglist>(tcCutsPtr parent, tcPPtr pi, tcPPtr pj, bool inci=false, bool incj=false) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>e6c34fed8a5b49d967c96467dfa7a3f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>15afa09a1d7a52cc86cf93a802d6df7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>d9350e6e5b4cacfb280a536054c9824e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>c379aac48b82d3442364377090e97c5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>9ea38fc48340b345e943698b2b1ca19a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>55f9257030b0871c241862e4e8b18a3b</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>fea263a93c833a58f19a68f8bfc527c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>TwoCutBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>bdeeb95d1c3945c63cbbaadd64d7bd11</anchor>
      <arglist>(const TwoCutBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; TwoCutBase &gt;</type>
      <name>initTwoCutBase</name>
      <anchorfile>classThePEG_1_1TwoCutBase.html</anchorfile>
      <anchor>296086935e795bc61908b4d3b9a1ae87</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::V2LeptonsCut</name>
    <filename>classThePEG_1_1V2LeptonsCut.html</filename>
    <base>ThePEG::MultiCutBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>minS</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>b7e485eab390f8ef440b7a6ef0a4d50f</anchor>
      <arglist>(const tcPDVector &amp;pv) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>maxS</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>dac8fca327abded4fc6779c3826071fe</anchor>
      <arglist>(const tcPDVector &amp;pv) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>0b637d4ca2048d4fdd320e49150f127a</anchor>
      <arglist>(tcCutsPtr parent, const tcPDVector &amp;ptype, const vector&lt; LorentzMomentum &gt; &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>06a0ea23e9e9363ce3642256db657ac4</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>4df512fd22b5417312b1d219e424f09e</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>2ce4182d2d0134dfeec840cacf3fbc40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkTypes</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>b466f9c14384937bcde9e29723be573a</anchor>
      <arglist>(long id1, long id2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>family</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>547f12e55964268368e8558305787d80</anchor>
      <arglist>(long id) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>cbb59c3fa52b7929689e1616b9678cb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>e4ec0c38bb1a91271854519bb2569f6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>868a43b6846be34c18cdbb87765f3f23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>b38c6cb5d1016ec4a3c14a567af69eb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>2bacb3d1388e1b72209bf6de598b38a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>f27f864fff914aff95d67d667489eb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>2b1318377d28321ce9e031680ad331af</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>7396c64fd95ea63f9b9d8afd63a0920f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <name>Family</name>
      <anchor>6045848a2e46ad2104425bd43d63e1f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>electron</name>
      <anchor>6045848a2e46ad2104425bd43d63e1f5b4fc51e516a2dc8f08caaaa38b1b181b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muon</name>
      <anchor>6045848a2e46ad2104425bd43d63e1f549e23c2b162887832b3cdbfefdc81771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>tau</name>
      <anchor>6045848a2e46ad2104425bd43d63e1f53a6a051cecdcb4607f190116b2841478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CComb</name>
      <anchor>68fc24da7421bbee3345ed4eeb89aaf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>posneg</name>
      <anchor>68fc24da7421bbee3345ed4eeb89aaf6fa6059027654f19a4de5794568e0d052</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>negneu</name>
      <anchor>68fc24da7421bbee3345ed4eeb89aaf6c1ffce660d3ad0b67356866e64aab44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>posneu</name>
      <anchor>68fc24da7421bbee3345ed4eeb89aaf630f8e4c10a8433787f9d27f94da07598</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>neuneu</name>
      <anchor>68fc24da7421bbee3345ed4eeb89aaf6c1da32c35c4e4a84d4d65974eb4ff515</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>maxMinM</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>f19d787e7fc3e6e42d53c48a3bccf590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>minMaxM</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>2c87465692acc8f5bde3a2bb7e8d60cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>V2LeptonsCut &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>5c4855603896595e71ef0013bd87a2bc</anchor>
      <arglist>(const V2LeptonsCut &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMinM</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>a90623e02b89991ccef85b6b535d0c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMaxM</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>c38b5b8d65f3bf3e96b2aaf69d99d51c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theFamilies</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>0586830d52ac609b9dbbc760793e2171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theCComb</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>afb9e34396db2765a968ec7bbc411809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; V2LeptonsCut &gt;</type>
      <name>initV2LeptonsCut</name>
      <anchorfile>classThePEG_1_1V2LeptonsCut.html</anchorfile>
      <anchor>9be9da0f9fa8ae0887e8c4df2ba20432</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Collision</name>
    <filename>classThePEG_1_1Collision.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>4b74ab751c7c60986f4ef86388232577</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>7eae9521f4e06b1f76a1dddf428d53e8</anchor>
      <arglist>(void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Collision</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>bfdd8cda5ef88e60e5b6ea01f741a963</anchor>
      <arglist>(const PPair &amp;newIncoming, tEventPtr newEvent=tEventPtr(), tcEventBasePtr newHandler=tcEventBasePtr())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Collision</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>ea8fba0fff818a4012fa19f72be55fef</anchor>
      <arglist>(const Collision &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Collision</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>385b1954392e98778355d0ea35e1d1e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tStepPtr</type>
      <name>newStep</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>66069efe4d05e9fbd2580319fff5a62b</anchor>
      <arglist>(tcEventBasePtr newHandler=tcEventBasePtr())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStep</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>8c982b756ea1eaf699ac20586d86787c</anchor>
      <arglist>(tStepPtr s)</arglist>
    </member>
    <member kind="function">
      <type>tcEventBasePtr</type>
      <name>handler</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>9336e5cec03c23cf10bd76e72a26853b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tEventPtr</type>
      <name>event</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>4ecdab662a6953fe567ee250706b184a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const LorentzPoint &amp;</type>
      <name>vertex</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>ba084cd379679d2cd273dea0ef9bd753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertex</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>5984d4c527a82f555c7dd797c04f70b7</anchor>
      <arglist>(const LorentzPoint &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>0f24d1244ed6ceaf6d43603afb28e3ea</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>m2</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>f8b9fa7b4faf8168f125d2c929fde9d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>be18a043a02fda0dbdf3ecd8ee08494d</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>9fb4889a9f05a48f9844c24136636d4c</anchor>
      <arglist>(PersistentIStream &amp;, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>917fc513988688e9a85749372b990c15</anchor>
      <arglist>(OutputIterator r, const SelectorBase &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectFinalState</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>9960a359d2c7ef6a1dae0eed95c0a884</anchor>
      <arglist>(OutputIterator r) const </arglist>
    </member>
    <member kind="function">
      <type>tPVector</type>
      <name>getFinalState</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>34fba929cbc319136787a54150a9e8a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tSubProPtr</type>
      <name>primarySubProcess</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>86859c1bc7b5f970beb8d63073dcb191</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SubProcessVector &amp;</type>
      <name>subProcesses</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>716fff70490aaef84b48a3905b6d730a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcStepPtr</type>
      <name>finalStep</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>6200b18fd7a9419b489d73ed1301624e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tStepPtr</type>
      <name>finalStep</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>f2d136af2875077cb60a9abcc2e6b46c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const StepVector &amp;</type>
      <name>steps</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>257fe91b790b359b906bec4ec8ae4f84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcStepPtr</type>
      <name>step</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>eccd4bbff7a7a803f3e57d5054775b85</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>a679514e4f39755a1eddf1143c97ad2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tParticleSet</type>
      <name>getRemnants</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>0d3da281eb1b60c9e0ae7f6acd2ff486</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRemnant</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>0f184ba371d6be55e5d36903cb1509da</anchor>
      <arglist>(tPPtr) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeDecay</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>2037e14dad9500fbc8b295af38c70b28</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeParticle</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>01f0a42cabffe8b12ff5ac3788e0876b</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanSteps</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>1ad0b1ea2d119f9afb7639da5271e419</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popStep</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>be7795a76f24d66bceb912fed8a9f898</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>21a6e9441c1bfe61a71b01fa53472591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const ParticleSet &amp;</type>
      <name>all</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>361b1bf5f1edc26789efcaf5ae6e3438</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CollPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>5ba4b63108f736f13a1376a4d8e8fb1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>dd4d104037c278a7687c0a0532272f16</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSubProcess</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>8f3aadccdf91f23837adddab08917905</anchor>
      <arglist>(tSubProPtr p)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addParticles</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>94036781e830fbba1c96109f5887af63</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addParticle</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>70bb3bae62eedb74bfeb0befe2f75a70</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeEntry</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>1677533d8dd38441d619da17f4decbe5</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Collision</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>c54f54628e91f869918af0d9d11e54cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Collision &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>d32c54141b68371a2d7ee47e60ec7ae8</anchor>
      <arglist>(const Collision &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PPair</type>
      <name>theIncoming</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>9164f1aa66cd71e8ca99caa2a87b3edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StepVector</type>
      <name>theSteps</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>85c9655e37a18455e4f052d791b6aa44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SubProcessVector</type>
      <name>theSubProcesses</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>a03d37237befc73eb72d53eb57a5ffd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleSet</type>
      <name>allParticles</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>2de10be84c419eb4cbb035c1da087065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tEventPtr</type>
      <name>theEvent</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>a27c2385aa6238bc4126781a4fa5e466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tcEventBasePtr</type>
      <name>theHandler</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>071e312e0fcbacb39ca3a73dd746793c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LorentzPoint</type>
      <name>theVertex</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>fb5314d415dfe5d4d9e105d0a22f6a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Collision &gt;</type>
      <name>initCollision</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>169b208657b162a1d8a078f3614df8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>EventHandler</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>0b257358246ba8f9c2f228c35e4f3e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Event</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>3c7b3c89bf96f51e80a919b3a82a3915</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Step</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>ed9d20cb4d54ec0ad5e845ec7c2246cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ClassTraits&lt; Collision &gt;</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>4188aa7f7f6748531101eb3653382a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1Collision.html</anchorfile>
      <anchor>96a5b09bbf9e7c7893684ff8f0b9a8f0</anchor>
      <arglist>(ostream &amp;os, const Collision &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ColourBase</name>
    <filename>classThePEG_1_1ColourBase.html</filename>
    <base>ThePEG::EventInfoBase</base>
    <member kind="function">
      <type></type>
      <name>ColourBase</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>e2aa60a474c1e83d939d86c41f9f2b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColourBase</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>3b95200e2a5427918b2f821197124829</anchor>
      <arglist>(const ColourBase &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ColourBase</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>b4e93d633ebe1253cf7b09fc1dc88a08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tColinePtr</type>
      <name>antiColourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>d496d6612eaf56a31598e553dca75358</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tColinePtr</type>
      <name>colourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>0ebbb9ce0e1bd969957ac9f37c9250e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasColourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>0eadcce9b3572008281dcfaf926bd32a</anchor>
      <arglist>(tcColinePtr line, bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAntiColourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>517e281fb3d71b216ea7a6ade0745396</anchor>
      <arglist>(tcColinePtr line) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>17dc0785e32e48770b7bdb7ed04814cf</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>8c9abb2a75e14e75b00f9d5eaf4a12c4</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>0d1e5d242adff64928e025165514402f</anchor>
      <arglist>(PersistentIStream &amp;, int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EIPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>e7886d861d87f532bc9a14a555ee9813</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>499b536d31d2d15f6ba7161e220531d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>antiColourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>6676b40740db619e648dbdcf01c8f9c3</anchor>
      <arglist>(tColinePtr line)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>colourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>52f29f7e4d879eb344a7fbb321adaf48</anchor>
      <arglist>(tColinePtr line, bool anti=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>removeAntiColourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>16c22ccfb86a6a5fe909b6f473eba011</anchor>
      <arglist>(tcColinePtr line)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>removeColourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>958e9e4296f0ca9851d922613b6be9fa</anchor>
      <arglist>(tcColinePtr line, bool anti=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ColourBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>cc27a58d729908447ae9ff5985a557fc</anchor>
      <arglist>(const ColourBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ColinePtr</type>
      <name>theAntiColourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>3de2df676765f4c070a7e6efac6b3766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ColinePtr</type>
      <name>theColourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>cfa7f3b68e67422260b91b903224a5bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; ColourBase &gt;</type>
      <name>initColourBase</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>0a91be44a24e1756a7f0a7c22c59a37d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ColourLine</name>
      <anchorfile>classThePEG_1_1ColourBase.html</anchorfile>
      <anchor>77bf84096fd5ba8a9caa9deb39870252</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ColourLine</name>
    <filename>classThePEG_1_1ColourLine.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function">
      <type></type>
      <name>ColourLine</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>3cae29b7f1baffba426bba937fe23f1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColourLine</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>9cacce16e54fe66f6f4ce789af09f323</anchor>
      <arglist>(const ColourLine &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tColinePtr</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>7b1acf8cded3e0c4f884d94f42d30db8</anchor>
      <arglist>(tPPtr col, tPPtr anti)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tColinePtr</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>f38a984ac5b4b36234f338f79c634589</anchor>
      <arglist>(tPPtr p, bool anti=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tColinePtr</type>
      <name>createAnti</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>45cf71e17b81ea835990e833b9fd2b05</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ColourLine</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>c4245918d106663b4473de884dbbfc78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>join</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>1bf0b42654de32280201da749306e662</anchor>
      <arglist>(ColinePtr line)</arglist>
    </member>
    <member kind="function">
      <type>std::iterator_traits&lt; Iterator &gt;::value_type</type>
      <name>getColouredParticle</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>8bcfed86c64c0fa45c7557d32b1c9e30</anchor>
      <arglist>(Iterator first, Iterator last, bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>0e6294a28e77cbec050fabf7a9270cae</anchor>
      <arglist>(ostream &amp;os, tcEventPtr event, bool anti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>bc1c1c1df0e543f69b034f20ea7daa69</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>a5a5ae8c5e41956b2fd333ed0838745a</anchor>
      <arglist>(PersistentIStream &amp;, int)</arglist>
    </member>
    <member kind="function">
      <type>const tPVector &amp;</type>
      <name>coloured</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>ffb382b82992a58fefe1af1c7d26028d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const tPVector &amp;</type>
      <name>antiColoured</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>093d50d411db03a103cfd39c0b9e55ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>startParticle</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>fefbde5230657875bccfec1ef9fe965f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>endParticle</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>bf66c87254ee17b08671fd1f5ca408bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAntiColoured</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>9b9904b6e060a42e3c41d76ca469ef05</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addColoured</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>0e294aadde4b5aa7ea1f04ceef92b58b</anchor>
      <arglist>(tPPtr p, bool anti=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAntiColoured</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>15d9da95c26d6775fe112b9880d42c41</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeColoured</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>f91928640a63045cc808b27d98a9375d</anchor>
      <arglist>(tPPtr p, bool anti=false)</arglist>
    </member>
    <member kind="function">
      <type>tColinePair</type>
      <name>sinkNeighbours</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>a738b15588ec2813b3fdff2826d97815</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tColinePair</type>
      <name>sourceNeighbours</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>5ff59c8e1b37b632e5881f8aa4e6d4a2</anchor>
      <arglist>(bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSinkNeighbours</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>7e180b7d62daa4dc5e2bfa181565b51d</anchor>
      <arglist>(tColinePtr, tColinePtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceNeighbours</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>48c35d87aa3fc308a5cfe8361054b3eb</anchor>
      <arglist>(tColinePtr, tColinePtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ColourLine &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>8b47c2030261c4c531b6eae5bb0348d0</anchor>
      <arglist>(const ColourLine &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPVector</type>
      <name>theColoured</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>2373b0482d5d5f7d54bba632ff00c009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPVector</type>
      <name>theAntiColoured</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>996f3387d6f9a9ed68b20244fedeea94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tColinePair</type>
      <name>theSourceNeighbours</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>ba0a9d664c680088a73a913d1d928dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tColinePair</type>
      <name>theSinkNeighbours</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>d684372cb25415b7208badc22e39afed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; ColourLine &gt;</type>
      <name>initColourLine</name>
      <anchorfile>classThePEG_1_1ColourLine.html</anchorfile>
      <anchor>2a6b80742211a458aa08fc3f255614a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ColourSinglet</name>
    <filename>classThePEG_1_1ColourSinglet.html</filename>
    <member kind="typedef">
      <type>deque&lt; tcPPtr &gt;</type>
      <name>StringPiece</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>48b9da78f10cc2a71d62c113df843826</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringPiece::size_type</type>
      <name>Index</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>4f664bb53bfa09252ae3076eddf968bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pair&lt; Index, Index &gt;</type>
      <name>Junction</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>1a5e83762933246a9ab5ab744b7f36ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColourSinglet</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>da93345800bd0ab638f8ae788d3b7900</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColourSinglet</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>affd40a8d5b442c4110d40e2730e35be</anchor>
      <arglist>(const ColourSinglet &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColourSinglet</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>6b3c9edf334e6e1abc8dbd837de119b4</anchor>
      <arglist>(tcColinePtr cl, tcParticleSet &amp;left)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColourSinglet</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>5ba92bc51ac2e778698bf73001e172cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ColourSinglet &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>1a3e16b867ea9c71aea2b3a222c81039</anchor>
      <arglist>(const ColourSinglet &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tcPVector &amp;</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>2c88234db154519f52e6b109985797e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tcPVector &amp;</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>b0c700bdbbebdffdfa49f4461c3eda74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcPPtr</type>
      <name>parton</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>d7cf68caf9976053f9d52f19ec23368b</anchor>
      <arglist>(tcPVector::size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzMomentum</type>
      <name>momentum</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>99076511318606b867f562d6b85a3cfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nPieces</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>b8e75a0cbe252df6c2d2aa9d4c5d9145</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringPiece &amp;</type>
      <name>piece</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>48baa16eda0fea0d2d6c5c552b494907</anchor>
      <arglist>(Index i)</arglist>
    </member>
    <member kind="function">
      <type>const StringPiece &amp;</type>
      <name>piece</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>21d6913e842c1e583bf066cba6663407</anchor>
      <arglist>(Index i) const </arglist>
    </member>
    <member kind="function">
      <type>Junction &amp;</type>
      <name>junction</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>b6afc58c69ff2d16a05c1dbad636ea4d</anchor>
      <arglist>(Index i, bool forward)</arglist>
    </member>
    <member kind="function">
      <type>const Junction &amp;</type>
      <name>junction</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>a3a612327da82fe32df10e2210f69b8e</anchor>
      <arglist>(Index i, bool forward) const </arglist>
    </member>
    <member kind="function">
      <type>Junction &amp;</type>
      <name>sink</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>3b71d639203b39726617ebb87dc4c3d0</anchor>
      <arglist>(Index i)</arglist>
    </member>
    <member kind="function">
      <type>const Junction &amp;</type>
      <name>sink</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>e7e0347d659e08b5ce2e626af2349ecc</anchor>
      <arglist>(Index i) const </arglist>
    </member>
    <member kind="function">
      <type>Junction &amp;</type>
      <name>source</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>afcc1c8a44deb26e0e1b78daada14651</anchor>
      <arglist>(Index i)</arglist>
    </member>
    <member kind="function">
      <type>const Junction &amp;</type>
      <name>source</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>35aa422e4eb6f1d8a24df9e8b636b4cc</anchor>
      <arglist>(Index i) const </arglist>
    </member>
    <member kind="function">
      <type>tcPDVector</type>
      <name>getTripletData</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>e314dfcc62bc55767e32d57cbe634cc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ColourSinglet</type>
      <name>splitInternal</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>f194f5e35ab7fa64bea5e683e3aa567a</anchor>
      <arglist>(Index sp=0)</arglist>
    </member>
    <member kind="function">
      <type>ColourSinglet</type>
      <name>splitInternal</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>0b2d85c0a95a4a196afff5021a15aeb7</anchor>
      <arglist>(Index sp, Index sa, Index sc, const vector&lt; bool &gt; &amp;assing)</arglist>
    </member>
    <member kind="function">
      <type>ColourSinglet</type>
      <name>splitDiQuarkJunction</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>2b98841ebc493c64f08876d7d44a2700</anchor>
      <arglist>(Index sp, tcPPtr diq, tcPPair qq, const vector&lt; bool &gt; &amp;assign=vector&lt; bool &gt;())</arglist>
    </member>
    <member kind="function">
      <type>ColourSinglet</type>
      <name>splitDiDiQuark</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>0b2dbcc534b253f5233cd2f2abe872f0</anchor>
      <arglist>(tcPPair qq1, tcPPair qq2, const vector&lt; bool &gt; &amp;assign=vector&lt; bool &gt;())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>d4f9112b27418c09201dc3690d7e6d9f</anchor>
      <arglist>(ColourSinglet &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; ColourSinglet &gt;</type>
      <name>getSinglets</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>b87d796670e32af9c3e185df77f62641</anchor>
      <arglist>(tcParticleSet &amp;left)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; ColourSinglet &gt;</type>
      <name>getSinglets</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>466378c30cf8635bfcb965a0cd6f08c6</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ColourSinglet</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>a5895415ea44b187827def1b4e1a693d</anchor>
      <arglist>(const ColourSinglet &amp;cs, Index si)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>fill</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>e91382fdffc36e3a391b0ba39a95146a</anchor>
      <arglist>(Index s0, bool forward, tcColinePtr first, tcParticleSet &amp;left)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>c22a8ce5e056d1f89adca9f37668c10c</anchor>
      <arglist>(Index i0, bool forward, const ColourSinglet &amp;cs, Index i1)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Index</type>
      <name>addPiece</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>e21940eb595d1a255186b9c30fca8c5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Junction</type>
      <name>addJunction</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>75b990abfb2024abe36ed361bbe4f4ff</anchor>
      <arglist>(Index s0, bool forward)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tcPVector</type>
      <name>thePartons</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>d5baa1f952909bbb56c8cf554f18f8d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; StringPiece &gt;</type>
      <name>thePieces</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>1626a335daeb00cbae18b6b5e80da2bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; Junction &gt;</type>
      <name>theSources</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>e7b017774086c25b3096430f67eacbfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; Junction &gt;</type>
      <name>theSinks</name>
      <anchorfile>classThePEG_1_1ColourSinglet.html</anchorfile>
      <anchor>1b0d2d474477bb146b3a76c5339b77e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Event</name>
    <filename>classThePEG_1_1Event.html</filename>
    <base>ThePEG::Base</base>
    <base>ThePEG::Named</base>
    <member kind="typedef">
      <type>map&lt; tcColinePtr, int &gt;</type>
      <name>ColourLineMap</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>50c63bf96e9ee611651a23f09ee65e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>b380d158a414fc975e590be6de28f9ec</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>ea9e55f6c96b55d7f09937c9f8dc37c9</anchor>
      <arglist>(void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>26c6cd601ed9d4f99b9ca82e308986ce</anchor>
      <arglist>(const PPair &amp;newIncoming, tcEventBasePtr newHandler=tcEventBasePtr(), string newName=&quot;&quot;, long newNumber=-1, double weight=1.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>073ae27417c11238e53688f5b7d48fe7</anchor>
      <arglist>(const Event &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Event</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>6752e1dd7659cddd37a6cba8ec3a4f8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>051bd7ce7404bae29047818c8d619186</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcEventBasePtr</type>
      <name>handler</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>d30c8d98d2ae9ff06878d9fafb1729e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCollPtr</type>
      <name>newCollision</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>2d5c56fd24f64d1268028be59ebc74ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tStepPtr</type>
      <name>newStep</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>dc2a0b6840146ce8afbcd61974ca691d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>e6789714d2c5138c7ed6b4e73f9a1ac9</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>number</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>a854b425afdda7d197ec9e0821359aa1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>colourLineIndex</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>8e49e73ff2994683d2d60172f84d0c84</anchor>
      <arglist>(tcColinePtr) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weight</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>ff7c935605cd275e6f818dcf45dc894a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>weight</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>fb30e0511927f67ee894f9cf93db57be</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInfo</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>756485ee45e824a01869276042e7ab7f</anchor>
      <arglist>(tcEventBasePtr newHandler, string newName, long newNumber, double weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCollision</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>fb13fbb1c8b08b22980edbaf61919727</anchor>
      <arglist>(tCollPtr c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>primaryCollision</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>4e7304fdcd05fa55ba56aaf85762cf7a</anchor>
      <arglist>(tCollPtr c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>3d57d892f529fadfccc72544d230d483</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>ab8a54ec165fa34387a7761923892d72</anchor>
      <arglist>(PersistentIStream &amp;, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>6db0cf37f0d7c0fbd0272289973470bb</anchor>
      <arglist>(OutputIterator r, const SelectorBase &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectFinalState</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>ef7d26e434af3eca0596c6df6dfd4406</anchor>
      <arglist>(OutputIterator r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFinalState</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>1f87087b31391d0b68e6c081397d301b</anchor>
      <arglist>(Container &amp;c) const </arglist>
    </member>
    <member kind="function">
      <type>tPVector</type>
      <name>getFinalState</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>a9fea020573a3b038da0ff2d4ab5bbe1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCollPtr</type>
      <name>primaryCollision</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>0be7167f7faff89686a82eef721003ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const CollisionVector &amp;</type>
      <name>collisions</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>e66295cc8a51ceeb9326c4057781a35c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tSubProPtr</type>
      <name>primarySubProcess</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>d3a25fbf599162e3b5495baac9c76964</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>3526f9fe989ee594e5a1128c85d0103c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeDecay</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>55a2230e9827c138ce0e75c79a9e4245</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeParticle</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>bd60a2baa2eca1a8e743f08ea6e6fd50</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanSteps</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>5e9c98309741d2d80ed0f9021bd54f6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>ebc41b6e27d2eec5cd0c6fbcd6d41a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addParticles</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>a47aa16554cb63fc40126adebccdf9da</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addParticle</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>fb770ed0476862d32a0adb760da1b7de</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSubProcess</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>5abefd527d98414c46fdfdbd35af7a5a</anchor>
      <arglist>(tSubProPtr p)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addStep</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>58e6a39fd9e67ada28145b39e95fdb23</anchor>
      <arglist>(tStepPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeEntry</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>aec992e48f95d1cbed6a4d3ee0a4598b</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>cfcbf60f2fe9c5ec323e027e42c3ac9c</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Event</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>8ba41f97bf76205c02fd678e98392f38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Event &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>91c74648a1ac7916764fcbe472575823</anchor>
      <arglist>(const Event &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PPair</type>
      <name>theIncoming</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>fb3b4c32331532d63af67dfee0c6fac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CollisionVector</type>
      <name>theCollisions</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>2594d1dfb666870cdffe0cd9d0cf73d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StepSet</type>
      <name>allSteps</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>6f9d2421575f811d1840f47775e473ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SubProcessSet</type>
      <name>allSubProcesses</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>744bb25d6022e8656bac1b6d402fd40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleSet</type>
      <name>allParticles</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>f29906c1953123aeb7be5f4ff5e2131c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tcEventBasePtr</type>
      <name>theHandler</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>2536a371f0523dce52831a420f2159cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ColourLineMap</type>
      <name>theColourLines</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>f50da5fcb11f225f53f3a95e1d1925bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theNumber</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>ed6448cfc693b6ceb8e0921d3b7e6500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theWeight</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>610d305a3130193c6c5ebc950d8af9f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Event &gt;</type>
      <name>initEvent</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>0434242709832331a9c9e6692db5ef6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>EventHandler</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>0b257358246ba8f9c2f228c35e4f3e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Collision</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>a08e39e5a8a0a97f10c15f0c5d98013b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ClassTraits&lt; Event &gt;</name>
      <anchorfile>classThePEG_1_1Event.html</anchorfile>
      <anchor>ae908c2f0a4e6cb00a06e627e237e91e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::EventConfig</name>
    <filename>structThePEG_1_1EventConfig.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>putHandler</name>
      <anchorfile>structThePEG_1_1EventConfig.html</anchorfile>
      <anchor>af134651aacbdeafd72958ea531b19fe</anchor>
      <arglist>(PersistentOStream &amp;os, tcEventBasePtr h)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getHandler</name>
      <anchorfile>structThePEG_1_1EventConfig.html</anchorfile>
      <anchor>6ab8363afc18936b79a738d7bb02c833</anchor>
      <arglist>(PersistentIStream &amp;is, tcEventBasePtr &amp;h)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>putParticleData</name>
      <anchorfile>structThePEG_1_1EventConfig.html</anchorfile>
      <anchor>04fb0f575b55dfb0c9bdf5ac8cfe8556</anchor>
      <arglist>(PersistentOStream &amp;os, tcEventPDPtr pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getParticleData</name>
      <anchorfile>structThePEG_1_1EventConfig.html</anchorfile>
      <anchor>3359bbc917d37148437d78bc5e86cb87</anchor>
      <arglist>(PersistentIStream &amp;is, cEventPDPtr &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>nameHandler</name>
      <anchorfile>structThePEG_1_1EventConfig.html</anchorfile>
      <anchor>af96596034b283693bf4a98ee0c02e45</anchor>
      <arglist>(tcEventBasePtr h)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tcEventBasePtr</type>
      <name>currentGenerator</name>
      <anchorfile>structThePEG_1_1EventConfig.html</anchorfile>
      <anchor>f2232511fa925d4bd6862ac3ec9434d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::EventInfoBase</name>
    <filename>classThePEG_1_1EventInfoBase.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function">
      <type></type>
      <name>EventInfoBase</name>
      <anchorfile>classThePEG_1_1EventInfoBase.html</anchorfile>
      <anchor>887a4f255c60e8f24ce403619bf77f20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EventInfoBase</name>
      <anchorfile>classThePEG_1_1EventInfoBase.html</anchorfile>
      <anchor>638aeaf9731dc99ea8fc5733a167f152</anchor>
      <arglist>(const EventInfoBase &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EventInfoBase</name>
      <anchorfile>classThePEG_1_1EventInfoBase.html</anchorfile>
      <anchor>1ccb4d9f1015d79ab4e956db0051e6af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1EventInfoBase.html</anchorfile>
      <anchor>df0cc80ed76ab54eb89f5fe943e29e19</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EIPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1EventInfoBase.html</anchorfile>
      <anchor>e86a5049ade7723d56e3b4a9c1aab16e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1EventInfoBase.html</anchorfile>
      <anchor>782f77a0429b81d72215ccb84af49060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>EventInfoBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1EventInfoBase.html</anchorfile>
      <anchor>abf619dd0993bc90e744412853a78e45</anchor>
      <arglist>(const EventInfoBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; EventInfoBase &gt;</type>
      <name>initEventInfoBase</name>
      <anchorfile>classThePEG_1_1EventInfoBase.html</anchorfile>
      <anchor>91a4e09a66c318daae54b79c588fd1c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MultiColour</name>
    <filename>classThePEG_1_1MultiColour.html</filename>
    <base>ThePEG::ColourBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>colourLine</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>4433222b097f65a81ed2c3cead5c1599</anchor>
      <arglist>(tColinePtr line, bool anti=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>antiColourLine</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>0b40ef17f8b4161b60cd0f98cce4f2d5</anchor>
      <arglist>(tColinePtr line)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeColourLine</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>9d4c3e54ef917958faee6ce40bf025d7</anchor>
      <arglist>(tcColinePtr line, bool anti=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeAntiColourLine</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>2319b251e3fb423792126bccd802f336</anchor>
      <arglist>(tcColinePtr line)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasColourLine</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>15f8fdcf6428f28a07ae3d90ae0001c2</anchor>
      <arglist>(tcColinePtr line, bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>3266fc289938c311122318ee47aac92d</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>c472688e3e7af0136b77464deecb6885</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>2aaa1ac0aed243fd15355eed50166fb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MultiColour &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>0c4bc4fa6423e189f1d9e4ac6f9d9431</anchor>
      <arglist>(const MultiColour &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>set&lt; cColinePtr &gt;</type>
      <name>theColourLines</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>6a2ae377ffc40404fb9121326719095f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>set&lt; cColinePtr &gt;</type>
      <name>theAntiColourLines</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>8932210de57d4e0e9fcc9448bf6edb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; MultiColour &gt;</type>
      <name>initMultiColour</name>
      <anchorfile>classThePEG_1_1MultiColour.html</anchorfile>
      <anchor>5a4ca9425df1e16bae431d998d56ee11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Particle</name>
    <filename>classThePEG_1_1Particle.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>3b1fef31a9466199a42b1850b2c6daa1</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>14972f97f59ee6d62764ea71e90b3308</anchor>
      <arglist>(void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Particle</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>b2289ad2c75bfcd45d4067572a576793</anchor>
      <arglist>(tcEventPDPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Particle</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>20296c880a978aaacdaf96bcabf1e6ef</anchor>
      <arglist>(const Particle &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Particle</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>8235c025743f7c129a7707d8a6a43ce2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>print</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>5acba818ab5e172ca99208ea9d397ba9</anchor>
      <arglist>(ostream &amp;os, tcStepPtr step=tcStepPtr()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decayed</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>c7020d6141c55a34499d8c8185379d93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleVector &amp;</type>
      <name>children</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>bdf542c53f68bb7c6cb4b4f76c444c40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChild</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>0b126891990bda21aeaf01f308e6bb18</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abandonChild</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>00dce2a688f142c82ed67c7a531db17e</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>const tParticleVector &amp;</type>
      <name>parents</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>245063a5ac45b049c0feaf59196070ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tParticleSet</type>
      <name>siblings</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>d8e5cee589458b6c34f0cdb8038336ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undecay</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>cbdb92b665010515c9d7a35975a7a1b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decayMode</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>11f68ef0b05b842836227121b4e2c785</anchor>
      <arglist>(tDMPtr)</arglist>
    </member>
    <member kind="function">
      <type>tDMPtr</type>
      <name>decayMode</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>34e77fa3558e6d8f5c89b169baf54e23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>next</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>f8f764eb040d24b7f1e337883c12d1b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>previous</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>09e3fbbbbf970aacac4d931621b2c9c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcPPtr</type>
      <name>original</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>5374f626635e84ac9cb26c7d1d29fc87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>original</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>b3d0a969f061915a642ff3543839971d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tcPPtr</type>
      <name>final</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>81b23928758e5f978c5bcf4c2f8879b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>final</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>e3e290763b84ea4896fd1f15e6339dcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tStepPtr</type>
      <name>birthStep</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>60bf53a75be05379a1d79b729e10b7ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>number</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>daea08894e3e2410d964a4d0b538f339</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleDataClass &amp;</type>
      <name>data</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>64cfda771d1be0c9352c5a9d4ea42f39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcEventPDPtr</type>
      <name>dataPtr</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>9fa2f713eedfc06a7b404e0aaefcb608</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>PDGName</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>30331b69e45326c5a8c1f9c8a1697bac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>id</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>07a20cd074effdc6283ec8161f23ff94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Lorentz5Momentum &amp;</type>
      <name>momentum</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>2d6922ac3e681cd434e3570fbbe0395c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set3Momentum</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>1d9c99900c88ff07e7dd507c4e12594c</anchor>
      <arglist>(const Momentum3 &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMomentum</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>84a7e86135373b8136af2f1c53049ff2</anchor>
      <arglist>(const LorentzMomentum &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set5Momentum</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>965a65b6d25af76f95eaf11bf43cee08</anchor>
      <arglist>(const Lorentz5Momentum &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>mass</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>912762df597abd49e2b3bab09ff0105f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>nominalMass</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>9f4b0581f4c055ada6ee21c0168fe4ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>a749839d87ac36c444eaaece92ad0e86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>7b855825fe356019424a68925005ce4d</anchor>
      <arglist>(Energy2)</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>mt2</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>5b6a04ebbbe244029497e85359a8e239</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>mt</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>42c003c4078d6e836f13e764e0ad7aaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>perpmass2</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>9b0b5686cbdb73ffa1f91f5b8eaad2d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>perpmass</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>3f5ae1600bb09dd84fd8aca86f966b7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rapidity</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>9ed65381979e6010bc4bc36c6543b465</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eta</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>387acbc118d00bb061ca5dcbfbbc2ab4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>Pplus</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>baeea360764a3856946f8651b2b49d12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>Pminus</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>776a6d3deb250b07b1386b007224c114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const LorentzPoint &amp;</type>
      <name>vertex</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>0605abde1a874299e99568155a13c833</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzPoint</type>
      <name>labVertex</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>49af58ae325a2934dd3073f63bd49df0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzPoint</type>
      <name>decayVertex</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>06db668d6ef012a9c5e6ec193229f530</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzPoint</type>
      <name>labDecayVertex</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>e763a28d7b07c9ffad011ffc7e6018f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Lorentz5Distance &amp;</type>
      <name>lifeLength</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>4b9adbb3d55a30aada9f136484c26aec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertex</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>ede0fdee05ca4e8ad8c094b1155d9f1f</anchor>
      <arglist>(const LorentzPoint &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabVertex</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>edcf948fa2260f455358e7f51fb3cc0a</anchor>
      <arglist>(const LorentzPoint &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLifeLength</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>f504814a8d8ef7e0c12db6b28aa3cd14</anchor>
      <arglist>(const Distance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLifeLength</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>ad4ca3f611a6e6d8f4075a14d3b9f342</anchor>
      <arglist>(const LorentzDistance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLifeLength</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>51a8d5acecdfdce2b15de642bb3b20fa</anchor>
      <arglist>(const Lorentz5Distance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Time</type>
      <name>lifeTime</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>0a5ad6fd26d3f1ce4e31a7b905705de5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>24bb67aabf25d61c5508c69241ff3740</anchor>
      <arglist>(const LorentzRotation &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>6334ee205066ef835e45314f51fa9043</anchor>
      <arglist>(double bx, double by, double bz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>3e3b8547172f0bd4de2db1aab70ca103</anchor>
      <arglist>(const Vector3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotateX</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>20560379252c313809e6f5dd2c59084a</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotateY</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>1857a61ed8c8443c39fb27ba6a6d8824</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotateZ</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>500b9190f1406e66670dac7720547316</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>d9921e8baa3a44095968ddfc8651f460</anchor>
      <arglist>(double a, const Vector3 &amp;axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mirror</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>c3e7d8c4662ff7727de29c0e8d636cf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepTransform</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>6c56cf89df2a9233f4833be9bee69cfc</anchor>
      <arglist>(const LorentzRotation &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepBoost</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>edcc7e6d3ce455e447727ba557ecdbf6</anchor>
      <arglist>(double bx, double by, double bz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepBoost</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>5673d6ab60e6c45207c8f0ff7fbd3d50</anchor>
      <arglist>(const Vector3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepRotateX</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>dc42ed400acc622e57246e4760db1c46</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepRotateY</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>b44e71ccdfaa862711a9a4bfbff442de</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepRotateZ</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>7c36f435ecaf47252596b0ef33072bc8</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepRotate</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>5aa7d5461ee4d84242de9a5719fba869</anchor>
      <arglist>(double a, const Vector3 &amp;axis)</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>massError</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>cdc697836d10ef095e5c0bac6a97f898</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>energyError</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>e7bfe8481e20bc5eaae4ec51c65cc52d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>rhoError</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>14dce8ca6dca8c935508b0174bd123e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleEnergy</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>992e0a83e635d2c5af95c41a6e8634f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleRho</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>841504c0ce44fe67628e57c425d60a44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleMass</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>91011a20f7e3e4388be6df18a323a032</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColourInfo</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>9de32c5dd27f814b2798dea501b78ecc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tColinePtr</type>
      <name>antiColourLine</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>0cca46966e750643ecb78f04af63adcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tColinePtr</type>
      <name>colourLine</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>dea5a67f2f45fc5fd2a9cdf22ededbb4</anchor>
      <arglist>(bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColourLine</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>d124083a3b083f9b7aa4c4c829f06852</anchor>
      <arglist>(tcColinePtr line, bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAntiColourLine</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>2a3a22b24456b0c86a0bd938197b263a</anchor>
      <arglist>(tcColinePtr line) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>coloured</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>ed6515970d0e98c785de2021d9d38e13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>b8cface91c00145823a2fda39cebc1cd</anchor>
      <arglist>(bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAntiColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>2656eb3bcd1feeb9208ce767611364f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcCBPtr</type>
      <name>colourInfo</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>3020f5ed7e3999c2c350f35b6893a12a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCBPtr</type>
      <name>colourInfo</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>a467329346ab4463380685dc0364785b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>colourInfo</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>7f8b1259d98ccbd48784d6508dcdb345</anchor>
      <arglist>(tCBPtr)</arglist>
    </member>
    <member kind="function">
      <type>std::iterator_traits&lt; Iterator &gt;::value_type</type>
      <name>colourNeighbour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>99d608ecfbd5fb48b79392cd88aa475f</anchor>
      <arglist>(Iterator first, Iterator last, bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::iterator_traits&lt; Iterator &gt;::value_type</type>
      <name>antiColourNeighbour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>808aa48552a6ecac6460c6221b44b562</anchor>
      <arglist>(Iterator first, Iterator last) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>colourNeighbour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>a78e09a505ce64a5163128591c663710</anchor>
      <arglist>(tPPtr, bool anti=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>antiColourNeighbour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>631a3fb45ae69a73aca0364c1912d72f</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>antiColourConnect</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>ef0be1610f3e68c18c82e8fa6765b0c7</anchor>
      <arglist>(tPPtr neighbour)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>colourConnect</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>b68502f739d587978a6f6e2b9702597a</anchor>
      <arglist>(tPPtr neighbour, bool anti=false)</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>incomingColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>40f3bb79be74dc8eba3e0ace3ca14abf</anchor>
      <arglist>(bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>incomingAntiColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>befb87c2f2285896d962a7f09594f293</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incomingColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>b27bda331bd605ecbc875da291271c57</anchor>
      <arglist>(tPPtr, bool anti=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incomingAntiColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>8b6773d91db161d0eff133e9149234e5</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>outgoingColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>674aa2bc238527d1e75ba2f4652c4b46</anchor>
      <arglist>(bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>outgoingAntiColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>eea310ffc464704fbaa9ea622a8ffa19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outgoingColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>dcdfa4b1d333afdc8e1447c24837383f</anchor>
      <arglist>(tPPtr, bool anti=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outgoingAntiColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>b47f51bf058714151922e4d5734b3f13</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>colourFlow</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>c5004de841504fbb35a7f82c4370a0dd</anchor>
      <arglist>(tPPtr child, bool anti=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>antiColourFlow</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>7c5288639b7104dc8c94f5bda7d6168c</anchor>
      <arglist>(tPPtr child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetColour</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>b705e4aafd072addc3c53501605239be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tcSpinPtr</type>
      <name>spinInfo</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>534274abc1d61ef4cdcf7d9086e08d8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tSpinPtr</type>
      <name>spinInfo</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>1d87fc7c638174b4d77f1afe2d8e7087</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spinInfo</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>d73a0d988ff278c54746c53db5ac7188</anchor>
      <arglist>(tSpinPtr s)</arglist>
    </member>
    <member kind="function">
      <type>const EIVector &amp;</type>
      <name>getInfo</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>6696ead906e8f654734c2195fe1a450d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EIVector &amp;</type>
      <name>getInfo</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>d21d124141fab4ffc83de6103f483c18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasRep</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>05ec71394be3430cd5d1976bdfef1cbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initFull</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>dedd7c5bcefcc867c4294206dd54fd69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>f315097fa44417b03b0c7fdc1e4b29f7</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>792b7546623abd67ebbc6e78e0a294cd</anchor>
      <arglist>(PersistentIStream &amp;, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PrintParticles</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>f291c6c5867a2db407260e48ed180ff7</anchor>
      <arglist>(ostream &amp;os, Iterator first, Iterator last, tcStepPtr step=tcStepPtr())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PrintParticles</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>31d1b1fa3810435e0a5cb08d0a718d6d</anchor>
      <arglist>(ostream &amp;os, const Cont &amp;, tcStepPtr step=tcStepPtr())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>566c31a476881fce5a90e9701b2d8a74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static string</type>
      <name>outputFormat</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>d9fcc7f2624c2769077ca4af607638e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Particle</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>5b5bdea7a7f9fc96cf2c7976f518dcbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual PPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>3fb810bdaf5186c3b4a36156be8e9619</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>637d6f1a2b52759a1582a466c66a93a5</anchor>
      <arglist>(const EventTranslationMap &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>number</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>babfca438ee71b33a0ea6fcf464d7c05</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>removeChild</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>cab056069e54318115e8c44c04421266</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>removeParent</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>f17e4f146e68d4602ad4fc492bc8b461</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>mass</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>ec15a35d85043a6014cca02792acdc4d</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>lifeTime</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>557b904b9f40f5acd93a540e0b73a23c</anchor>
      <arglist>(Length)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ParticleRep &amp;</type>
      <name>rep</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>da7dd3ebd68c1bb54bafd5349b28dc5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const ParticleRep &amp;</type>
      <name>rep</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>61537adcda2376c813a5afc3a103dc76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Particle &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>53cceb2e96bcf08d960aa2f8ace30d97</anchor>
      <arglist>(const Particle &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cEventPDPtr</type>
      <name>theData</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>58760003449504f541f50359c309ffd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Lorentz5Momentum</type>
      <name>theMomentum</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>0081d2f54a0a3679cb4ebbbed7b77307</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleRep *</type>
      <name>theRep</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>afa08bb2856f8da329cf28c45756c102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Particle &gt;</type>
      <name>initParticle</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>9f95f6650c8119f4b7c0eca3c405ae43</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Event</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>3c7b3c89bf96f51e80a919b3a82a3915</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Collision</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>a08e39e5a8a0a97f10c15f0c5d98013b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Step</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>ed9d20cb4d54ec0ad5e845ec7c2246cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SubProcess</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>4a2a98ec9001661844907b57380611f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ParticleData</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>0ce2e21b756394460b60f78c44fa1f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>ClassTraits&lt; Particle &gt;</name>
      <anchorfile>classThePEG_1_1Particle.html</anchorfile>
      <anchor>65ef34c2c6044fccc3d638a5bf8697be</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::Particle::ParticleRep</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Particle::ParticleRep</name>
    <filename>structThePEG_1_1Particle_1_1ParticleRep.html</filename>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>8e8f3dd0c5ada573e8070d569d77da0a</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>8828d0cf0a9cb58b8faf67f00c6cb94a</anchor>
      <arglist>(void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParticleRep</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>b24a684592b2b98f0faa242372078a24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParticleRep</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>0055b02e4d49b3bd9843167302da39bf</anchor>
      <arglist>(const ParticleRep &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>tParticleVector</type>
      <name>theParents</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>26634c136af147282f06d2c6f275753f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParticleVector</type>
      <name>theChildren</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>0d1e0b28d965c67bfebfa626ef002946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tPPtr</type>
      <name>thePrevious</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>61004dc904e39f035e2aa1aac488a743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PPtr</type>
      <name>theNext</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>e66307eb91c2cf8d3d5f18e5d7683c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tDMPtr</type>
      <name>theDecayMode</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>6f581671a619bc4359106c52b3ab2065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tStepPtr</type>
      <name>theBirthStep</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>f980c5e8813eae3259b0ca4301274862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LorentzPoint</type>
      <name>theVertex</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>c2231baa8a9187ae48fb793a41abc265</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Lorentz5Distance</type>
      <name>theLifeLength</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>c5cb3d8bdfd2de44236df68c7fe03c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Energy2</type>
      <name>theScale</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>4a8f4e45c74d7b9c6900f0e843f0a42b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>theNumber</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>f5e4994f0483ca67d478fb2fd95bece9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CBPtr</type>
      <name>theColourInfo</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>239e2f3959f5a3e32d70a43f10211278</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SpinPtr</type>
      <name>theSpinInfo</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>39dd81ed1796e5b9c6ba9b56eec6c91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EIVector</type>
      <name>theExtraInfo</name>
      <anchorfile>structThePEG_1_1Particle_1_1ParticleRep.html</anchorfile>
      <anchor>3a5d74a7bf7414903f58e795e6d9161c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::ParticleTraits</name>
    <filename>structThePEG_1_1ParticleTraits.html</filename>
    <templarg>PType</templarg>
    <base>ThePEG::TraitsType</base>
    <member kind="function" static="yes">
      <type>static PType &amp;</type>
      <name>ref</name>
      <anchorfile>structThePEG_1_1ParticleTraits.html</anchorfile>
      <anchor>55d6136ec404f1fe4cc3932d17a7d4bd</anchor>
      <arglist>(PType &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzMomentum</type>
      <name>momentum</name>
      <anchorfile>structThePEG_1_1ParticleTraits.html</anchorfile>
      <anchor>e1133a7e8de034a5f5c86ceaa0d92038</anchor>
      <arglist>(const PType &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Energy</type>
      <name>mass</name>
      <anchorfile>structThePEG_1_1ParticleTraits.html</anchorfile>
      <anchor>85cdedf29a33d63c2ba6fffac11e7c8b</anchor>
      <arglist>(const PType &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>structThePEG_1_1ParticleTraits.html</anchorfile>
      <anchor>dadb02ccb7f109e6fd08aec30f16a4df</anchor>
      <arglist>(PType &amp;p, const LorentzRotation &amp;r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set5Momentum</name>
      <anchorfile>structThePEG_1_1ParticleTraits.html</anchorfile>
      <anchor>42d0d79ff32556cb326e4f91f7e15b93</anchor>
      <arglist>(PType &amp;p, const Lorentz5Momentum &amp;q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set3Momentum</name>
      <anchorfile>structThePEG_1_1ParticleTraits.html</anchorfile>
      <anchor>06dc69e4a579a0b65dfe9f278180205c</anchor>
      <arglist>(PType &amp;p, const Momentum3 &amp;q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>iCharge</name>
      <anchorfile>structThePEG_1_1ParticleTraits.html</anchorfile>
      <anchor>6d19d7ceef713f03429d10b9292738bc</anchor>
      <arglist>(const PType &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Transformer</name>
    <filename>structThePEG_1_1Transformer.html</filename>
    <member kind="function">
      <type></type>
      <name>Transformer</name>
      <anchorfile>structThePEG_1_1Transformer.html</anchorfile>
      <anchor>9c5681af89e942865959d23e5ceb4577</anchor>
      <arglist>(const LorentzRotation &amp;rin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transformer</name>
      <anchorfile>structThePEG_1_1Transformer.html</anchorfile>
      <anchor>d67c32801089812edbb95285199e62a0</anchor>
      <arglist>(const Transformer &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structThePEG_1_1Transformer.html</anchorfile>
      <anchor>d118e331214be72e38baef474a4181e8</anchor>
      <arglist>(const PType &amp;p)</arglist>
    </member>
    <member kind="variable">
      <type>const LorentzRotation &amp;</type>
      <name>r</name>
      <anchorfile>structThePEG_1_1Transformer.html</anchorfile>
      <anchor>5df620cb92f8ae29ffa8ef6bf4d42cc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::RemnantParticle</name>
    <filename>classThePEG_1_1RemnantParticle.html</filename>
    <base>ThePEG::Particle</base>
    <member kind="function">
      <type></type>
      <name>RemnantParticle</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>f7ea2c21c7d5bcc9c843db7bad11b06c</anchor>
      <arglist>(const Particle &amp;particle, RemDecPtr decayer, tPPtr parton=tPPtr())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RemnantParticle</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>5cf9f6d97d627d33ac06ae3c8b35d558</anchor>
      <arglist>(const RemnantParticle &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RemnantParticle</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>a7f6ad69c87de6e3e28e74b3f49bd61b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>0677ac4a0c4af941a55d906d1986ad6a</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>73391be5041bbaa8b9e88f5fcb4700af</anchor>
      <arglist>(void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extract</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>211ac95204b441a5996561ca0d64feed</anchor>
      <arglist>(tPPtr parton)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reextract</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>476b1aa440a073f2eed1012afd444800</anchor>
      <arglist>(tPPtr oldp, tPPtr newp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>1295e9d95e0fcb56f79689cf975f2588</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>e8860c2eae711e3767a8f09da8f7ec0c</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>294b5bec11fda0a805e897e6532d1afd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>fixColourLines</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>ad0f3ee764568206027d4880090e72fc</anchor>
      <arglist>(tPPtr parton)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RemnantParticle</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>d0c88f89eff496645cbb3935af8fe41c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RemnantParticle &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>28b3c8e8ea4c3fafb11393a6834f4d3e</anchor>
      <arglist>(const RemnantParticle &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RemPDPtr</type>
      <name>remData</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>d34fff2c71ac400bb1d6920cf4005c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tcPPtr</type>
      <name>parent</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>39c722579c66800d38bbfaaa2a30c5c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PVector</type>
      <name>extracted</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>b59342f10e01cf1e2d620086d9253321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; RemnantParticle &gt;</type>
      <name>initRemnantParticle</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>816dedeb683eb4dfe6d68cae67a2e5c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>RemnantDecayer</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>73470e711832f0d7fb5ae17c7b258884</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>ClassTraits&lt; RemnantParticle &gt;</name>
      <anchorfile>classThePEG_1_1RemnantParticle.html</anchorfile>
      <anchor>acde676e1061c203ad1c48c2a17be49b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SelectorBase</name>
    <filename>classThePEG_1_1SelectorBase.html</filename>
    <member kind="function">
      <type></type>
      <name>SelectorBase</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>681d746f88bc6719c8bd9d074da5d291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SelectorBase</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>44db2146bb7d2273721f39582e532628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>d413650e9aac8e400cc836dac352157c</anchor>
      <arglist>(const Particle &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>finalState</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>5e5fae9799fa990ef87d9e8a5348181f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>intermediate</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>6ca8df5264a4859245090fcdb293313b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allSteps</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>9aadf5bec2375665b2d423228c7a5276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allCollisions</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>fc57229dc19014ed6ff97a1bf5964fee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>5cb44196211d54e9d08464d439daf784</anchor>
      <arglist>(const Particle &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Intermediate</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>d378e468ad8bb699ad8c158aa7423c9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>FinalState</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>dcbcfa538526abf3cff4fd394643f7cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllSteps</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>8d7b1f58e1b5c13592b88293ee0e96da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllCollisions</name>
      <anchorfile>classThePEG_1_1SelectorBase.html</anchorfile>
      <anchor>79f548fab9d9e4eea56fe73e0cb51f67</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::ParticleSelector</name>
    <filename>structThePEG_1_1ParticleSelector.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::SelectorBase</base>
    <member kind="function">
      <type></type>
      <name>ParticleSelector</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>77c5052fc0a57bfb985d92a6070d6cab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParticleSelector</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>71f21845bcdc19094487ff1d20c8186f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>7a2b75a0fda399facca962f502d8567e</anchor>
      <arglist>(const Particle &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>finalState</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>cb14c84c1251b5e76f177f90d4055d05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>intermediate</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>f7c2e7cdd494082c97ad2d915db7e2cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allSteps</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>1ecea61bcdc3ea53476bdb929a3f9de1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allCollisions</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>56dbc81d31bff48fb82ffe54cc709800</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>70bc57455c8d77715015afe9f6363c40</anchor>
      <arglist>(const Particle &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Intermediate</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>6ecb921f5c81e32c7f2b8aa78015ce85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>FinalState</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>40551f5d0e7e9be9dc1a29c3da4abd62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllSteps</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>4c5a8686cdde60e767e323df40fa31b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllCollisions</name>
      <anchorfile>structThePEG_1_1ParticleSelector.html</anchorfile>
      <anchor>78070cd594fb80172866e55b51167e50</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SelectIfNot</name>
    <filename>classThePEG_1_1SelectIfNot.html</filename>
    <base>ThePEG::SelectorBase</base>
    <member kind="function">
      <type></type>
      <name>SelectIfNot</name>
      <anchorfile>classThePEG_1_1SelectIfNot.html</anchorfile>
      <anchor>9fa5be26b240be77ce00380746dd0b83</anchor>
      <arglist>(const SelectorBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectIfNot</name>
      <anchorfile>classThePEG_1_1SelectIfNot.html</anchorfile>
      <anchor>ce46b59c8394b4c461c58f62f4052b99</anchor>
      <arglist>(const SelectIfNot &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1SelectIfNot.html</anchorfile>
      <anchor>0ebc7de65dd42ef6f461178b9586d80b</anchor>
      <arglist>(const Particle &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>finalState</name>
      <anchorfile>classThePEG_1_1SelectIfNot.html</anchorfile>
      <anchor>0e45d87536a47a0340771f370bd0d681</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>intermediate</name>
      <anchorfile>classThePEG_1_1SelectIfNot.html</anchorfile>
      <anchor>8835db8940bd190b06300c982148b30f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allSteps</name>
      <anchorfile>classThePEG_1_1SelectIfNot.html</anchorfile>
      <anchor>2e500ada991de7fe224fec59a5c2c60e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allCollisions</name>
      <anchorfile>classThePEG_1_1SelectIfNot.html</anchorfile>
      <anchor>060858319b76271adea4606518961ca8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SelectIfNot</name>
      <anchorfile>classThePEG_1_1SelectIfNot.html</anchorfile>
      <anchor>2fc1e77ab2440a3725c15dac661600ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const SelectorBase &amp;</type>
      <name>s</name>
      <anchorfile>classThePEG_1_1SelectIfNot.html</anchorfile>
      <anchor>a78691b0acf50a954c46909a335d2bac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SelectIfBoth</name>
    <filename>classThePEG_1_1SelectIfBoth.html</filename>
    <base>ThePEG::SelectorBase</base>
    <member kind="function">
      <type></type>
      <name>SelectIfBoth</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>5262fe3a63bed5456eda8364679d3793</anchor>
      <arglist>(const SelectorBase &amp;, const SelectorBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectIfBoth</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>069e07badb361fa14a66092a9a5dcb93</anchor>
      <arglist>(const SelectIfBoth &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>71c65729243eb2aaf7df18f087c91551</anchor>
      <arglist>(const Particle &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>finalState</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>c901e1b235ccbec538c001bdfb451f6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>intermediate</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>d7f33c9cdfdaaa5da51ce30dd66524df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allSteps</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>48b91e5cac420550c6e9d37ef78d5247</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allCollisions</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>37f11ea8d74ee7f24d28ae1af55c60fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SelectIfBoth</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>8ba103229016220af620118053f47f11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const SelectorBase &amp;</type>
      <name>s1</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>4a54545d91b0eaeb112885d1d6f094ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const SelectorBase &amp;</type>
      <name>s2</name>
      <anchorfile>classThePEG_1_1SelectIfBoth.html</anchorfile>
      <anchor>31c883a6d807a8697580304edf691f56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SelectIfEither</name>
    <filename>classThePEG_1_1SelectIfEither.html</filename>
    <base>ThePEG::SelectorBase</base>
    <member kind="function">
      <type></type>
      <name>SelectIfEither</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>414fc4a7fab698adcfcef4c49e131d65</anchor>
      <arglist>(const SelectorBase &amp;, const SelectorBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectIfEither</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>7ab1725eacc15cd2983b0eab1d69e3e5</anchor>
      <arglist>(const SelectIfEither &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>18cadad5f576ee51b45c5e5ac7767dbe</anchor>
      <arglist>(const Particle &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>finalState</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>5c252f6a82be4b4ed13fa27676ac03df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>intermediate</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>38d99e25a8fa6042867a15af18a0777a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allSteps</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>58f3b2e5f80078fa1d444826d0b14370</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allCollisions</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>fd9fb961a6f9d25d8940b4514d1815ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SelectIfEither</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>08e5122487136a21535322151210a799</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const SelectorBase &amp;</type>
      <name>s1</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>6c5122cb6b1af390adbe9e90f864891c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const SelectorBase &amp;</type>
      <name>s2</name>
      <anchorfile>classThePEG_1_1SelectIfEither.html</anchorfile>
      <anchor>e3e63a2c8c8f7059b957a0b3641a15cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SpinBase</name>
    <filename>classThePEG_1_1SpinBase.html</filename>
    <base>ThePEG::EventInfoBase</base>
    <member kind="function">
      <type></type>
      <name>SpinBase</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>815a1b053018dff72079ff5b729fa7e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpinBase</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>a71026032b0be8936f6d35e333990777</anchor>
      <arglist>(const SpinBase &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SpinBase</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>cc27fd3810fef1ef1d9ea17d4b827c9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasPolarization</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>3b2d5c0d49e0d7ac3aa66cca2f91a71c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DPair</type>
      <name>polarization</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>1c97c952f2761bbdf5b96b4f2022271b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>fff1ba9dd5b6a280f0c7a04c65602913</anchor>
      <arglist>(const LorentzMomentum &amp;, LorentzRotation r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>b3eb484513e4eb42a94a246f384b6d9c</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EIPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>a8bf83c3a3a93d5914845c59db7f85db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>a089b9dc19f76dd9b8cce6ca9d43fffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SpinBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>ff532a5061a8fe793765043cb3bdaeec</anchor>
      <arglist>(const SpinBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; SpinBase &gt;</type>
      <name>initSpinBase</name>
      <anchorfile>classThePEG_1_1SpinBase.html</anchorfile>
      <anchor>5cf86b76c8e0f6aed2c9f1ffd2606173</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::AllSelector</name>
    <filename>structThePEG_1_1AllSelector.html</filename>
    <base>ThePEG::SelectorBase</base>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1AllSelector.html</anchorfile>
      <anchor>f9253f2d7ca23fd1704c91c3336595ec</anchor>
      <arglist>(const Particle &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Intermediate</name>
      <anchorfile>structThePEG_1_1AllSelector.html</anchorfile>
      <anchor>35caec234d8926f642e1519c396e1bba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>FinalState</name>
      <anchorfile>structThePEG_1_1AllSelector.html</anchorfile>
      <anchor>74b5c13a993bf41a45d26594df9766ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllSteps</name>
      <anchorfile>structThePEG_1_1AllSelector.html</anchorfile>
      <anchor>73c64f57e21891517fb9b6e6716c8430</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllCollisions</name>
      <anchorfile>structThePEG_1_1AllSelector.html</anchorfile>
      <anchor>857c072252f9244d9a330f7db476749e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::FinalStateSelector</name>
    <filename>structThePEG_1_1FinalStateSelector.html</filename>
    <base>ThePEG::SelectorBase</base>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Intermediate</name>
      <anchorfile>structThePEG_1_1FinalStateSelector.html</anchorfile>
      <anchor>994dde8033aeacf36a33456d8c1580f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllSteps</name>
      <anchorfile>structThePEG_1_1FinalStateSelector.html</anchorfile>
      <anchor>c089267a5424ceccfd8ea693ca5c3f74</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::IntermediateSelector</name>
    <filename>structThePEG_1_1IntermediateSelector.html</filename>
    <base>ThePEG::SelectorBase</base>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1IntermediateSelector.html</anchorfile>
      <anchor>6ee38115ef76df30245013c003ef494a</anchor>
      <arglist>(const Particle &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Intermediate</name>
      <anchorfile>structThePEG_1_1IntermediateSelector.html</anchorfile>
      <anchor>fdfe5db41482e73598bbe85db65b0cd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>FinalState</name>
      <anchorfile>structThePEG_1_1IntermediateSelector.html</anchorfile>
      <anchor>47f420092e2dc3abbe411c11d080366c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllSteps</name>
      <anchorfile>structThePEG_1_1IntermediateSelector.html</anchorfile>
      <anchor>0e521032c4bd69c28702268b2ab88974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllCollisions</name>
      <anchorfile>structThePEG_1_1IntermediateSelector.html</anchorfile>
      <anchor>55affda8aba366a4a550d36d67cfe819</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::PrimaryCollisionSelector</name>
    <filename>structThePEG_1_1PrimaryCollisionSelector.html</filename>
    <base>ThePEG::SelectorBase</base>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1PrimaryCollisionSelector.html</anchorfile>
      <anchor>1a5445954c06238e794297dc0c4c5b1d</anchor>
      <arglist>(const Particle &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Intermediate</name>
      <anchorfile>structThePEG_1_1PrimaryCollisionSelector.html</anchorfile>
      <anchor>657ebfc644103e5a34d2c12958498b53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>FinalState</name>
      <anchorfile>structThePEG_1_1PrimaryCollisionSelector.html</anchorfile>
      <anchor>b142e905ac0e76ce603a3e30680231c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllSteps</name>
      <anchorfile>structThePEG_1_1PrimaryCollisionSelector.html</anchorfile>
      <anchor>d0e229aa489bcd92a62880884878fc59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AllCollisions</name>
      <anchorfile>structThePEG_1_1PrimaryCollisionSelector.html</anchorfile>
      <anchor>b19eb3c13ccb872dba5f0fd02bb265f6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::ChargedSelector</name>
    <filename>structThePEG_1_1ChargedSelector.html</filename>
    <base>ThePEG::SelectorBase</base>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1ChargedSelector.html</anchorfile>
      <anchor>6093e93828c13ef5f3f091d7d1a561bd</anchor>
      <arglist>(const Particle &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Step</name>
    <filename>classThePEG_1_1Step.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>61b6b4a50142f932cb7e72a2552ccaa0</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>cafa9b803cf5a7bdc17a8c3fc5fce8ef</anchor>
      <arglist>(void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Step</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>cb6e64bd931e6de827f181d1a94ece0e</anchor>
      <arglist>(tCollPtr newCollision=tCollPtr(), tcEventBasePtr newHandler=tcEventBasePtr())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Step</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>ba1aeb60c59875e02f708961a28f301e</anchor>
      <arglist>(const Step &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Step</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>05398aa6ffdcc6f99dce96252fe578a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tcEventBasePtr</type>
      <name>handler</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>917ef040681010cdf50b16517a753fff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCollPtr</type>
      <name>collision</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>4d5458afeed71c4d4d41e3fb465677d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>7fb092fc0df8b2e1d3e403cd0b233f8f</anchor>
      <arglist>(OutputIterator r, const SelectorBase &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectFinalState</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>26a3812872fe6f7f65fff481e8717cff</anchor>
      <arglist>(OutputIterator r) const </arglist>
    </member>
    <member kind="function">
      <type>tPVector</type>
      <name>getFinalState</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>bc06d675fbab82b9fc2be02852ba7194</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleSet &amp;</type>
      <name>all</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>e655b19a66788eb2da2e83809aaa1372</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleSet &amp;</type>
      <name>particles</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>74adb10274ac9f82048b4bb307e85c91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleSet &amp;</type>
      <name>intermediates</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>0c12beffc21cc8b5d9638599500617c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SubProcessVector &amp;</type>
      <name>subProcesses</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>3133cea8855c7ab2f3fc0a3b5333955a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>100632dc8da1771adaa1017606af26fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>find</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>981c490e24fe4b91208cea488064db09</anchor>
      <arglist>(tcPPtr) const </arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>copyParticle</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>56a5b620dac2c0e185dddfa5fc7323a8</anchor>
      <arglist>(tcPPtr p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setCopy</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>c646954df3ca54cbe0d30c4728e2c192</anchor>
      <arglist>(tcPPtr pold, tPPtr pnew)</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>insertCopy</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>c2dffd478179027c43265a77e921528c</anchor>
      <arglist>(tcPPtr p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addDecayProduct</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>7edc275681a7d466fb786c03db98eb32</anchor>
      <arglist>(tcPPtr parent, tPPtr child, bool fixColour=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addDecayProduct</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>5a12740fe76a57dac444d6436831716d</anchor>
      <arglist>(tcPPtr parent, CIterator firstChild, CIterator lastChild, bool fixColour=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDecayNoCheck</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>6a46168456b34eec51bfc1b064697bbb</anchor>
      <arglist>(tPPtr parent, tPPtr child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDecayProduct</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>1e8ed2ba1ff18dcf6320de2f418fe337</anchor>
      <arglist>(tPPtr child)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeDecayProduct</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>f937fbc201e9abdf3cb788c676b8fb98</anchor>
      <arglist>(tcPPtr parent, tPPtr child)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeDecayProduct</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>44cc592fb7115f839db9b578c7d054fa</anchor>
      <arglist>(tcPPtr parent, CIterator firstChild, CIterator lastChild)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addDecayProduct</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>fb3459613e7fdb46fa3a39382be21aa8</anchor>
      <arglist>(Iterator firstParent, Iterator lastParent, tPPtr child, bool checkfinal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addDecayProduct</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>7b7a9551bd5e638f8ea7faca4b87024f</anchor>
      <arglist>(PIterator firstParent, PIterator lastParent, CIterator firstChild, CIterator lastChild)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fixColourFlow</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>6182305c05e546c7201f48279d8b7332</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>colourNeighbour</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>624db74a6a298ca9bec01190b649d822</anchor>
      <arglist>(tcPPtr particle, bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>antiColourNeighbour</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>7e92306fd5f96da720bbeb59d26e76ec</anchor>
      <arglist>(tcPPtr particle) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addParticles</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>6605ab3b76f7d7cd6e39e2feebcc07fb</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addParticle</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>09eaa43c6af61b7d56cafc2157648832</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIntermediates</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>1e4dbf9bcbfc06ae0e52cca4f35f9d40</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIntermediate</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>0e3046ce0d8051d22fd898f0b01b995b</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertIntermediate</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>368a542712d25f0d5675047d4478c5ed</anchor>
      <arglist>(tPPtr p, tPPtr parent, tPPtr child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSubProcess</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>666b73af621085ab7764bdf56a85c0ae</anchor>
      <arglist>(tSubProPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeParticle</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>3863810da4cb0efacd7ba4141ce9d2c3</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nullStep</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>6e0d4926655f095623417989b5096a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tParticleSet</type>
      <name>getCurrent</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>30573c1d38410117e2767eeddad4b8d1</anchor>
      <arglist>(const Cont &amp;c) const </arglist>
    </member>
    <member kind="function">
      <type>tParticleSet</type>
      <name>getCurrent</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>c3271225d4cbebb5917028dc5526370a</anchor>
      <arglist>(Iterator first, Iterator last) const </arglist>
    </member>
    <member kind="function">
      <type>StepPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>4ea9368dd7622d23f0466873ff3bc0f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>c575758452f8a1e003547faf65ed1827</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>c29cc22679b7d979d2693a1f185a3303</anchor>
      <arglist>(PersistentIStream &amp;, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; tPVector &gt;</type>
      <name>getSinglets</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>d6d06e1004795fdab369047a21041533</anchor>
      <arglist>(PIterator first, PIterator last)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>48d3f7f08cb4aaa73f482ebef00ff03b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeEntry</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>a1828ab9c4cc344353620a780ad133a3</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>870225c771d90497398387d3f82ea127</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addIfFinal</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>eaad65845724f4819abe7c51ead55f86</anchor>
      <arglist>(Inserter o, PPointer p)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static vector&lt; tPVector &gt;</type>
      <name>getSinglets</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>1bc808af6e14840a3cc4220bf3c3a7cd</anchor>
      <arglist>(tParticleSet &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Step &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>15c0b816eebbc0b6e2b3c0f1176645e8</anchor>
      <arglist>(const Step &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>collision</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>75f826f12252fa858199cb613238f9f5</anchor>
      <arglist>(tCollPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>handler</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>b7fff0700870bffd3f73dcebf78c71bb</anchor>
      <arglist>(tcEventBasePtr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleSet</type>
      <name>theParticles</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>586c6b74742bfc0b96f8afbd4800ecef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleSet</type>
      <name>theIntermediates</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>3a3919f004a7bfe3cabe45c33789d0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SubProcessVector</type>
      <name>theSubProcesses</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>91f323c100a56ee2eb22db702f3eea44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleSet</type>
      <name>allParticles</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>085d80b526903525ef234df7d5887ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tCollPtr</type>
      <name>theCollision</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>6f1da3813531f7cc66fb0e31963c4f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tcEventBasePtr</type>
      <name>theHandler</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>fc70da8342c9befcdd54130fc0a339d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Step &gt;</type>
      <name>initStep</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>9c91e692a42e6ef6440c606a6b765633</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Collision</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>a08e39e5a8a0a97f10c15f0c5d98013b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Event</name>
      <anchorfile>classThePEG_1_1Step.html</anchorfile>
      <anchor>3c7b3c89bf96f51e80a919b3a82a3915</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SubProcess</name>
    <filename>classThePEG_1_1SubProcess.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>02f1383f3f814a8ecf505dd498869e91</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>e4a71f189d2f0f6c55c78c2ea52792cf</anchor>
      <arglist>(void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubProcess</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>a4d817a24cd2c1c68042ee86c71ea924</anchor>
      <arglist>(const PPair &amp;newIncoming, tCollPtr newCollision=tCollPtr(), tcEventBasePtr newHandler=tcEventBasePtr())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubProcess</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>5e82355cff4658a5490446dfec1479ae</anchor>
      <arglist>(const SubProcess &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SubProcess</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>41950d7c4d26e739fa44b584acee3c77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tcEventBasePtr</type>
      <name>handler</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>2cc69126e180b6af7e9d06072ea22d72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCollPtr</type>
      <name>collision</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>34e4640e8e03f50ea27a211abf0f5007</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>87ccf3340eadc63e2e0feacc41eaf478</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleVector &amp;</type>
      <name>intermediates</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>7d1019be4228b6864713768761d83081</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleVector &amp;</type>
      <name>outgoing</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>1e9dddcddc473132d5ade6042134fd19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutgoing</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>eb441d1c0083f9fead652a4a7c605d11</anchor>
      <arglist>(InputIterator, InputIterator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOutgoing</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>60f634962f858cf3f7a300d4ce725817</anchor>
      <arglist>(tPPtr p, bool fixrelations=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIntermediates</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>6c4d893916fb42c27f5d770c5c62fc86</anchor>
      <arglist>(InputIterator, InputIterator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIntermediate</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>bb868c2e31e9a71a93a18e2cb9ad0719</anchor>
      <arglist>(tPPtr p, bool fixrelations=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEntry</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>a096668007cb524e1c38576df222d3ac</anchor>
      <arglist>(tPPtr p)</arglist>
    </member>
    <member kind="function">
      <type>SubProPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>a485ae2d1294f0ca42adeeedfd86bf15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decayed</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>cbc01e9bc07d139e43cb6c2ee8e38ba8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decayed</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>7bf7065378172a370d246a65e87e99f9</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>9836a52c5daa75ea7b435a978aa496e6</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>shat</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>38e267a0ee46c1f347186a92ae7a2f8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>that</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>3a7a1a5b77fd645cfc51acd1207bcee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>uhat</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>9505daa77e0f278ea24e114898728f7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>a83fab0b06fcd1ee46531f3eadc0c6de</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>d37fec65773f2eb1adfe7fff776ef11f</anchor>
      <arglist>(PersistentIStream &amp;, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>c985d1b3afa84a3eaab1365bc2a9a7a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>975cac28f577bbf66fc282712f907650</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SubProcess</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>11278552f88e5a06eb1cee0a9d81ab50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SubProcess &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>a4c1b3f615a97fb507c6561d87931cb9</anchor>
      <arglist>(const SubProcess &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tcEventBasePtr</type>
      <name>theHandler</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>4c29b696196cd9ffec31acab0e7c2d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tCollPtr</type>
      <name>theCollision</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>58b84aab85b23b0c66b862a48e962e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PPair</type>
      <name>theIncoming</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>5c53e146c5a8a56695f4d5cc0eb0e506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleVector</type>
      <name>theIntermediates</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>73de78dd43f0591c3dfe1e3020337be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleVector</type>
      <name>theOutgoing</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>a01b9ad189dad904356b05a079ba8317</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isDecayed</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>69cafae6673415d25ff9de3df7e4e4eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; SubProcess &gt;</type>
      <name>initSubProcess</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>d45c12c57f157a8f98c4c1cc694c21ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Step</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>ed9d20cb4d54ec0ad5e845ec7c2246cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Collision</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>a08e39e5a8a0a97f10c15f0c5d98013b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ClassTraits&lt; SubProcess &gt;</name>
      <anchorfile>classThePEG_1_1SubProcess.html</anchorfile>
      <anchor>cb64e3b33a949ad636cbb4b63d22aeb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::TmpTransform</name>
    <filename>classThePEG_1_1TmpTransform.html</filename>
    <templarg>Ptr</templarg>
    <member kind="function">
      <type></type>
      <name>TmpTransform</name>
      <anchorfile>classThePEG_1_1TmpTransform.html</anchorfile>
      <anchor>f8c2ed31f415673c8323ca81911b4f65</anchor>
      <arglist>(Ptr p, const LorentzRotation &amp;r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TmpTransform</name>
      <anchorfile>classThePEG_1_1TmpTransform.html</anchorfile>
      <anchor>b9fab55af6397b4260261943194cb8df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>TmpTransform &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1TmpTransform.html</anchorfile>
      <anchor>50b6ffd3a12986572a52673abe395fa8</anchor>
      <arglist>(const TmpTransform &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>TmpTransform</name>
      <anchorfile>classThePEG_1_1TmpTransform.html</anchorfile>
      <anchor>f6543a665c5f7ec99593ecb381ce8a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>TmpTransform</name>
      <anchorfile>classThePEG_1_1TmpTransform.html</anchorfile>
      <anchor>849083b224a2acf781b2bf4b6c6a429a</anchor>
      <arglist>(const TmpTransform &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ptr</type>
      <name>ptr</name>
      <anchorfile>classThePEG_1_1TmpTransform.html</anchorfile>
      <anchor>97f61ec3dcdd195f73c5acd5f49f0e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LorentzRotation</type>
      <name>rot</name>
      <anchorfile>classThePEG_1_1TmpTransform.html</anchorfile>
      <anchor>d12137df06157e5068759ec606d7f3d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ACDCSampler</name>
    <filename>classThePEG_1_1ACDCSampler.html</filename>
    <base>ThePEG::SamplerBase</base>
    <member kind="typedef">
      <type>ACDCGenerator::ACDCGen&lt; UseRandom, tStdEHPtr &gt;</type>
      <name>SamplerType</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>a1908f232ff45ef421d68dc51623c681</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>65a2090c4834a4de5e3457873bbdf6e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>709cc802e26eadbfc822585fa9e1a602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lastBin</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>808ef37a654899d28b6018f1673fde4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rejectLast</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>2677f22f11dd5d492c0fe6d799c08e4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>integratedXSec</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>54568decabd569e762fa59d247514751</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>sumWeights</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>1c1b164fb9fdccd303f279c5d6b5f36f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>7ec19ec89dc74fa877a70cfa4de3c530</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>5576f78267e31e994c7d4ba0a8e57795</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>840f796c646cfefb1b0bffd23e3ad867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>4418eb7db125d25214f3c6a1bde0c7ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>c80c97c51bbc8b276c27e4f200498bf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>8de0872e3950a012c0b6c26e5ae0d602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>4d9e5f2147bc00e9cda20aecd8352516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>d0ad038a226fc06d8bc5f0cad3dd93d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>745cbbc678eebda2242bf531d6d7fcd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>58c472b4b7bfccba7ad9436b733305e8</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>6b40c1cdbc384c0dae1d91bc2815e9d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ACDCSampler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>9510aa51151a1523ce60727296edba00</anchor>
      <arglist>(const ACDCSampler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SamplerType</type>
      <name>theSampler</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>fb95ad697eb281929f22766123534f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEps</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>6bd8ddbc3d329b70152f3338cf858f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theMargin</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>7f981ed252e9d6edda1407d61bec4b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theNTry</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>f01456558986e0e7730d72528a940100</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; ACDCSampler &gt;</type>
      <name>initACDCSampler</name>
      <anchorfile>classThePEG_1_1ACDCSampler.html</anchorfile>
      <anchor>87931a451717cc5fe05254f345f8f61e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::AnalysisHandler</name>
    <filename>classThePEG_1_1AnalysisHandler.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="variable" protection="private">
      <type>AnalysisVector</type>
      <name>theSlaves</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>82c730b0d2ac8b6d235e9f74670822b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>a1c53ef47fa5c5fd8c1d25ba33f65fc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>92db5535d75c678f1c75a30c914cd00e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>8ec0eec8f7ca518e689e0b435d039770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>8325c7544f3bcbd150722196b48cd8cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>78cbd42b810b8db63fbfb531b48d863f</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>36a91094322df622e3d11501de82fd65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>FactoryBase::tH1DPtr</type>
      <name>tH1DPtr</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>10bcb6b99d9a7b451dae54872096f703</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FactoryBase::tcH1DPtr</type>
      <name>tcH1DPtr</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>bb0b7493f5f17afeb0580ef299c4fa7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>analyze</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>088a6d29d9b07de4124399afc99e01cc</anchor>
      <arglist>(tEventPtr event, long ieve, int loop, int state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LorentzRotation</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>41e45da15af3df2c048b5616a9940523</anchor>
      <arglist>(tEventPtr event) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>analyze</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>99db1c04433294adb955ff9eeacb117c</anchor>
      <arglist>(const tPVector &amp;particles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>analyze</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>c28ee33fb3b5518d8889c9c07a15ef99</anchor>
      <arglist>(tPPtr particle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkHistogramFactory</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>766aba40d15de74251aea8dc7aa7ef66</anchor>
      <arglist>(bool warn=false) const </arglist>
    </member>
    <member kind="function">
      <type>FactoryBase &amp;</type>
      <name>histogramFactory</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>8a5629f06f674e6fa57a906b21f79b3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FactoryBase &amp;</type>
      <name>histogramFactory</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>b4311eb877f2c2900ad74415f53bc4a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>d4c935e044429298347f95ae52194faf</anchor>
      <arglist>(tH1DPtr h, CrossSection unit=picobarn) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unitNormalize</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>a3169038c2bd9f45982c6981f8d8c060</anchor>
      <arglist>(tH1DPtr h) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>8422ecad036b6dcf16272224f444c3e1</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>c0c020544c56dce43b5d33725930b48e</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>a8888f468c2bafff3ced018adee1d35c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>163b45cd2a15807075342e0a598a6dd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>aa7597dfbf8e6f16968327ded7b9394a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; AnalysisHandler &gt;</type>
      <name>initAnalysisHandler</name>
      <anchorfile>classThePEG_1_1AnalysisHandler.html</anchorfile>
      <anchor>faf35b5fc72643e938ea663691aeb88b</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">ThePEG::AnalysisHandler::NoHistFactory</class>
  </compound>
  <compound kind="class">
    <name>ThePEG::AnalysisHandler::NoHistFactory</name>
    <filename>classThePEG_1_1AnalysisHandler_1_1NoHistFactory.html</filename>
  </compound>
  <compound kind="class">
    <name>ThePEG::CascadeHandler</name>
    <filename>classThePEG_1_1CascadeHandler.html</filename>
    <base>ThePEG::StepHandler</base>
    <base>ThePEG::LastXCombInfo</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>cascade</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>b2189264953853bf79ccc795377d9861</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reweightCKKW</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>1dbd9935286ad7da5021eb78a0ad7f55</anchor>
      <arglist>(int minMult, int maxMult)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handle</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>40e78f27dadc1c251eae22a25c4ae55a</anchor>
      <arglist>(EventHandler &amp;eh, const tPVector &amp;tagged, const Hint &amp;hint)</arglist>
    </member>
    <member kind="function">
      <type>const tPVector &amp;</type>
      <name>tagged</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>2f81df239e0ddff29585d16fee47e0e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Hint &amp;</type>
      <name>hint</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>4cdcbc346651248294cb2ff0f0dfe37c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PDF &amp;</type>
      <name>firstPDF</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>5f11a0abaeb31105d775ae97a3a2c84f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PDF &amp;</type>
      <name>secondPDF</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>e3b5a853a65712e961e2c3f0abe40188</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const pair&lt; PDF, PDF &gt; &amp;</type>
      <name>pdfs</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>f0a6360550fc40e82e05727804fb62f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXComb</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>8c6d84cfe009e22f0b0f839470a54ece</anchor>
      <arglist>(tXCombPtr xc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>0e4ee6c4d59bbcb16f19b2fedf8c433d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>f5fdd7d60988be173bea6dc91ce15cda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>deea16a18ce13ea4637139a54adeeff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>43cccc4cfdab19e47231129594996874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>1682e972147e90e557567650f1273631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>ea6570afa43c1d381f46ce08d9b9dd97</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>7cfe046d442506a3ed4adc1a7613b4d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CascadeHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>ccc436b88a677d749f906a4ff8bd8beb</anchor>
      <arglist>(const CascadeHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const tPVector *</type>
      <name>theTagged</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>5d4b5bf74ce6414761a7981f563cb9ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Hint *</type>
      <name>theHint</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>51ceb5c441343851be06347794696c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pair&lt; PDF, PDF &gt;</type>
      <name>thePDFs</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>7b45f967728b79b83f358c827146e7e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; CascadeHandler &gt;</type>
      <name>initCascadeHandler</name>
      <anchorfile>classThePEG_1_1CascadeHandler.html</anchorfile>
      <anchor>1e1874f87298251c6419da905ef5a960</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ClusterCollapser</name>
    <filename>classThePEG_1_1ClusterCollapser.html</filename>
    <base>ThePEG::StepHandler</base>
    <member kind="typedef">
      <type>Ptr&lt; FlavourGenerator &gt;::pointer</type>
      <name>FlavGenPtr</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>64cab83455a4e0847d42c6ccae356fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>multimap&lt; Energy, ColourSinglet &gt;</type>
      <name>SingletMap</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>f69d5487c5c52827c6b8bef6a8b229a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector&lt; ColourSinglet &gt;</type>
      <name>collapse</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>d4d7a2331adadc9a3cedd394ea629385</anchor>
      <arglist>(tPVector tagged, tStepPtr newstep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SingletMap</type>
      <name>getSinglets</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>8bf44e2541a4c611d8e3d5b253af3b88</anchor>
      <arglist>(const tPVector &amp;tagged) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ColourSinglet</type>
      <name>splitDiQuarkJunction</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>13c2f6531dbbecf078f0650e1fc8b5ab</anchor>
      <arglist>(ColourSinglet &amp;cs, tStepPtr newStep) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ColourSinglet</type>
      <name>splitDiDiQuark</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>6a2630883a4268eb8e96a1e46348505e</anchor>
      <arglist>(ColourSinglet &amp;cs, tStepPtr newStep) const </arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>cut</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>654ea87abd299590e43c9104650140b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nTry2</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>47001d60df2e7ee0fe4dabff4f8df7e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>pickFlavour</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>dc10596fd096da35bbbadb1b03690a04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handle</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>8e63bc5012d70ea031adc279e708dbd8</anchor>
      <arglist>(EventHandler &amp;eh, const tPVector &amp;tagged, const Hint &amp;hint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>8221d8cf10a38c96deee10b40284fbf7</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>eaa4d686efa6ad6d8c63c808e7b1824e</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>diQuarkJunction</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>eee75313ccf55436cb3bb64e22e82b69</anchor>
      <arglist>(const ColourSinglet &amp;cs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>diDiQuark</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>cb382b9b899bdfd57598d57e83cd26ab</anchor>
      <arglist>(const ColourSinglet &amp;cs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Energy</type>
      <name>mass</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>c42706d6aff7d190349c04f4021a0331</anchor>
      <arglist>(const ColourSinglet &amp;cl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>cc89526f6eb897e5a30e072d1bb4643e</anchor>
      <arglist>(SingletMap &amp;mmap, const ColourSinglet &amp;cl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>624bd84bf568b71cc5f472809a6a6e78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>collapse</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>fa69714cc3e0bf963ee399185de92ac7</anchor>
      <arglist>(tStepPtr newStep, const ColourSinglet &amp;cs, const tPVector &amp;tagged) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>collapse2</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>7c5782b01ff1032ce45f9fdd602ee5d8</anchor>
      <arglist>(tStepPtr newStep, const ColourSinglet &amp;cs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tPVector</type>
      <name>getCompensators</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>62f8435e74bdf37674f10f199250e436</anchor>
      <arglist>(Energy mh, const ColourSinglet &amp;cs, const tPVector &amp;tagged, tStepPtr newStep) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>getHadron</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>af6e953be769a7d1ce04aec8bbde2bd1</anchor>
      <arglist>(const ColourSinglet &amp;cs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tcPDPair</type>
      <name>getHadrons</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>d825fa02a9d386ddc41b43bc5dcfed8d</anchor>
      <arglist>(const ColourSinglet &amp;cs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>ca65a2136ca7e140db37207d7283aaef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>c7407cbbf34db9395efb5179ce739885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>d1cfe39f8137b3510feab4acf1449bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>d6daf0d2a851857e5c48555d182a4788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>aae25eda55ddf6139880cf2d0e0f1abf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>f4fa512b8048a6b82ff006b0153df400</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>aa33529d8176466e7f6e230f9a135356</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>cdc65eea12f0ce5b218a52e44e7e8b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Exception::Severity</type>
      <name>errorlevel</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>88655250092344dc6fca65ca0949d5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>pStrange</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>0df06ce622e41396cc8b99cd7f3330a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>ClusterCollapser &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>2cd7e6adf81b2650e1b7ac4e99cac9ea</anchor>
      <arglist>(const ClusterCollapser &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theEnergyCut</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>7f72a3ed3ef06c59a609ea7859dde872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theNTry2</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>e722761c65fb60d621d909b2a6333ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FlavGenPtr</type>
      <name>flavGen</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>d35eaef74034d90139063264e9e4deff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; ClusterCollapser &gt;</type>
      <name>initClusterCollapser</name>
      <anchorfile>classThePEG_1_1ClusterCollapser.html</anchorfile>
      <anchor>4db9c580e24f9e702fe73ae6f6b2660a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::DecayHandler</name>
    <filename>classThePEG_1_1DecayHandler.html</filename>
    <base>ThePEG::StepHandler</base>
    <member kind="function">
      <type>void</type>
      <name>performDecay</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>6ade1ae57ee330007106341814530be7</anchor>
      <arglist>(tPPtr parent, Step &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>maxLoop</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>0cc9746ff9cf8b9209b8e838525cb765</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handle</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>94da2801b56ce1ef68eac6051424216e</anchor>
      <arglist>(EventHandler &amp;eh, const tPVector &amp;tagged, const Hint &amp;hint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>cf1eb319a6e00531023eacc747cd8ecc</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>90e2ff21c66aca2c10e51d855c79d01b</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>d635248a5e6f6222073fd7ca051dabe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>2b95b3220fbd5b8df1760a0c47e3950a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>5a9d7f02345fef38a485e952c77139ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>f4e8177af26c263c746dc66808ed15de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>6e8fe104abd71f188be882a49952ee6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>a3c12271eb988ac30878fd3aae0b7161</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>d7ba5c4e56beedee64a3e406a139b536</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>b39d85fa69da89266a3542b526069373</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DecayHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>bf3d1308b7bdace0937a717f3af90966</anchor>
      <arglist>(const DecayHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theMaxLoop</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>cbd509335d5b72b154283a28ee0c0eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; DecayHandler &gt;</type>
      <name>initDecayHandler</name>
      <anchorfile>classThePEG_1_1DecayHandler.html</anchorfile>
      <anchor>6dc048fbed553b40594ee3f0c41c34b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::EventHandler</name>
    <filename>classThePEG_1_1EventHandler.html</filename>
    <base>ThePEG::HandlerBase</base>
    <base>ThePEG::LastXCombInfo</base>
    <member kind="enumeration">
      <name>ConsistencyLevel</name>
      <anchor>f06c4b10eb8fbfd3cba647f381858b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clNoCheck</name>
      <anchor>f06c4b10eb8fbfd3cba647f381858b6ffde093a0af422b5f72b9884cd6629adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clCollision</name>
      <anchor>f06c4b10eb8fbfd3cba647f381858b6f3e13e030d69db27df9d0424fba1cfb13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clStep</name>
      <anchor>f06c4b10eb8fbfd3cba647f381858b6f2922cdf06198d85936757c642ea7d221</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clPrintCollision</name>
      <anchor>f06c4b10eb8fbfd3cba647f381858b6fca0695778786d4cd4a533e0e1d54608c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clPrintStep</name>
      <anchor>f06c4b10eb8fbfd3cba647f381858b6fa408a66cd61b6be6399edaaf60c1589b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; HandlerGroupBase * &gt;</type>
      <name>GroupVector</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>fc54b555160a04b72a987eec627b6ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>67c56bb9548dd4aecdd5949b835f19dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EventPtr</type>
      <name>generateEvent</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>5d143fffd974e0fc6e40c3e0fb849ae2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tEventPtr</type>
      <name>generateEvent</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>d6103666335845ed79a57b942fef58e9</anchor>
      <arglist>(tEventPtr e)</arglist>
    </member>
    <member kind="function">
      <type>tEventPtr</type>
      <name>generateEvent</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>e1fda7292b79b89e1c4eab7f635ab003</anchor>
      <arglist>(tStepPtr s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EventPtr</type>
      <name>continueEvent</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>1660a5cd0c6f0c5fde8f353c2e81c3e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tCollPtr</type>
      <name>continueCollision</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>5aaf615eecfee4b2f3fffc5b01dbcb2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearEvent</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>8b890e3b2ab0e6a0a155cc543d77a6f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>empty</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>0730157320433b98e03ee3226d603dca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>statistics</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>76385c4fa01c29d358e21259bf08c98b</anchor>
      <arglist>(ostream &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>histogramScale</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>71aee4fab78a3a52af966a27bc535705</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>integratedXSec</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>0866374d8c9a2d52a53d5274d844806b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>maxLoop</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>6bbddf1ebad809713a7785222d55656c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const cPDPair &amp;</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>70f17b8fcf45349fb6dddd2a54bff6c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const LuminosityFunction &amp;</type>
      <name>lumiFn</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>f90aba202b9c367540fd6f06c006f9e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcLumiFnPtr</type>
      <name>lumiFnPtr</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>c11c8a7b89f4dce869cd6e8c25dd5bd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tLumiFnPtr</type>
      <name>lumiFnPtr</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>7b631761ae8f7ce492465ed6c3ba197c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tCutsPtr</type>
      <name>cuts</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>3c6efb06a0f41d943a04425ed017f829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPExtrPtr</type>
      <name>partonExtractor</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>d4c2e2a89ef2ef95bdabffe740997891</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCascHdlPtr</type>
      <name>CKKWHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>4a77dafc2ce428db07ab73721c175c61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tEventPtr</type>
      <name>currentEvent</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>b413f7b65b471590b4f3a6cbda2a8a7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCollPtr</type>
      <name>currentCollision</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>b02bf71bd6be9b9d8eff6b89179bca7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tStepPtr</type>
      <name>currentStep</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>02bf3af5599bfe302f0c0bc12c033ba4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>statLevel</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>3c7387ba041f61d613f5941f483a7877</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConsistencyLevel</type>
      <name>consistencyLevel</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>c9b29d2f54df34ac247d9c7905eeed49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>consistencyEpsilon</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>76481104e4e111466d567624c5338eb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>performStep</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>ccf2b4a872d2c088ad6dfb47f7ec85aa</anchor>
      <arglist>(tStepHdlPtr handler, tHintPtr hint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStep</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>23b5e6635b18f38258212ed87632335f</anchor>
      <arglist>(Group::Level, Group::Handler, tStepHdlPtr=tStepHdlPtr(), tHintPtr=tHintPtr())</arglist>
    </member>
    <member kind="function">
      <type>tStepPtr</type>
      <name>newStep</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>78b32426f6b29415c2dfee4ee7482664</anchor>
      <arglist>(tcStepHdlPtr sh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popStep</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>26379c0bf606bb6fa304caf55beff83c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initGroups</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>3f01988b890487c3c53d572f11911f64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentEvent</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>652402c4abb720e99eccccd3610b9c43</anchor>
      <arglist>(tEventPtr e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentCollision</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>a22b98bcb085bbd0162d0d45fedfa39a</anchor>
      <arglist>(tCollPtr c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentStep</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>49cbc5a834106ea0569e067b80dea67e</anchor>
      <arglist>(tStepPtr s)</arglist>
    </member>
    <member kind="function">
      <type>tStepHdlPtr</type>
      <name>currentStepHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>b94108db7dca8423d039cd616df18a8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentStepHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>6cb21d009fa419e61e89e9c1ada3550e</anchor>
      <arglist>(tStepHdlPtr sh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>throwCurrent</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>053fa2c68452d7319946b57ba3726eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clean</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>23c8978fb2a35dc2c7f0d89ee575aaef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkConsistency</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>642b7e628f7cabfc8776fb4539e59db1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>7f6678a44951826025d2a75ec8564dff</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>3a53d869e5d7e3c50b7b75fa3eb066be</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>2186d6a531dc8a2a2decb99595c4e548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LuminosityFunction &amp;</type>
      <name>lumiFn</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>5e110235f15a09eafc6004563b06091d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupGroups</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>f17eea849470f754b6d5dca6d1e55a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GroupVector &amp;</type>
      <name>groups</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>b5b2b681beafc0ff09a2fff7bccfdda7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const GroupVector &amp;</type>
      <name>groups</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>7080f17b98167e795a3811b38a050ac8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>lumiFn</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>2556541db8e29f089e515e2634798201</anchor>
      <arglist>(LumiFnPtr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>9bb072e61f740a882405d89de463b635</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>2d3c4d8766133aa5c47dbf5fc773dfd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>2a3cb7179d5bd6f39ae442b91d12575c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>8094c38e63c312185c6d21c907230610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>5776d4e247b70747796e742179b531cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>5474e3466f619b813f81d18d2692a227</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>c89ea847d78f66b589e6ccc5dc0229af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HandlerGroup&lt; SubProcessHandler &gt;</type>
      <name>optSubprocessGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>cfe24c7d2368890b9df13b58a97a75a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HandlerGroup&lt; CascadeHandler &gt;</type>
      <name>optCascadeGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>5787b79ea68696310139ef4dc6b8ce3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HandlerGroup&lt; MultipleInteractionHandler &gt;</type>
      <name>optMultiGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>d603b1fb4ffd3c8ea6c2b8dd41a59fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HandlerGroup&lt; HadronizationHandler &gt;</type>
      <name>optHadronizationGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>b43f5c254cf0a0e24253f59343dac4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HandlerGroup&lt; DecayHandler &gt;</type>
      <name>optDecayGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>0a1b593119056bed9316ed521eae6984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GroupVector</type>
      <name>optGroups</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>17fb8e7696aa212868cac7cec166e42e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>warnIncomplete</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>94e016f428f3e20bd509ce9fd48bcf5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cPDPair</type>
      <name>theIncoming</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>486ba914b880fdeaefa0278deebf604f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostSubProcessHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>ece5f4909ece7020eb54fe2329939bb6</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostSubProcessHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>de91dc446d747b74b4eab7242e2892d7</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostSubProcessHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>c631eabf3523855b874a9dcbfddd3f25</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostSubProcessHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>a66859ec0910baf835ea4e646da99df0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPreCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>43881a66849b4f2bcf1b851405df34a6</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPreCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>05ab48f218695f736917dd73d97f38f1</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePreCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>bb1c5598830a09523f6c46b9bfc749d4</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPreCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>8eec34b052049334e8dc5eb6cef8f08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>1598e3fdf4d0b94b9cddd2087139d2ab</anchor>
      <arglist>(CascHdlPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CascHdlPtr</type>
      <name>interfaceGetCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>147e6cf3c44ffb5765c4e3b1f206cc72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>0e546bf36c76173e4c80fa9450d515a4</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>cc58b88766da7d73b52ccf769add6808</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>be9fb5fd1db513ca390b64d75c12e6ef</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostCascadeHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>e83c9b523fb52bafcc63db0eb8e014a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPreMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>36de7bdf58ba9ea66255dc9817070b15</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPreMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>8dc6b9a6d05182578d34768bd05a1901</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePreMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>0b6507561910d7ecab2f7bb205aa9ee5</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPreMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>895e4400488c8a391fa8d4c19016bb76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>b669a1ab65aa731fca7fe054008e9a9e</anchor>
      <arglist>(MIHdlPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MIHdlPtr</type>
      <name>interfaceGetMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>f9b881db106c801613720327f4c8162c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>eccc818df53ab0a8c56325f80a3c9fa1</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>4dcc4c47749ad9c7cfb10f06d45481ef</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>5341eac9fece6a162633a366139656da</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>d849a88cb35ca17f87295e658668de9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPreHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>4e0e0baf4fc15c46b5225f791724a8df</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPreHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>17f4c558b1101c4f3b949c5bca0b76b1</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePreHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>afb48829db7d7e7ae2936cdd1e6e52d9</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPreHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>c280ae1fe48a4c46dcde343e5409d02a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>0cfb95f0d1d24d6a4635c2abb5bf238e</anchor>
      <arglist>(HadrHdlPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HadrHdlPtr</type>
      <name>interfaceGetHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>f6a366d0674b51449b5b9e893752fbd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>0d7ab1c8c389608ccc29f0272372fb15</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>40952353515c558f4c82f38730648ef8</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>a15aa257aa9e5b564a07a7df7ea3d72c</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostHadronizationHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>0fcb0497c7e8cdffea23e7d8eb9d5831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPreDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>e247ea0192365e54347dde076a9e48fb</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPreDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>3b8c57986b16bde7a282e1cdd8c7ecd2</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePreDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>3c2199966a13fb83d766f3ad92f2b834</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPreDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>7ddc102adab251dfe6b95e191c717036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>5081830ae111f3ccf79cddff48192085</anchor>
      <arglist>(DecayHdlPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DecayHdlPtr</type>
      <name>interfaceGetDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>3341b5a2a5f157621be63261b7fa9b1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>40834152d8a4af1dcb710fa3bce73da4</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>1482f31bcbf367f15743f7bd32547ac0</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>630b28efc467d4f4cae61d88b30bfaaa</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostDecayHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>0a968d1cd20a3be8b24246d95321def3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>EventHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>73c6fb47bd5b441bd963f9f190406cc6</anchor>
      <arglist>(const EventHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theMaxLoop</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>6fbb2576055c7901679aa59cb91f3951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theStatLevel</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>a42bcfe530703ce8784b5a0a9082e000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConsistencyLevel</type>
      <name>theConsistencyLevel</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>028154a7d6a298b39b82bbb525f5ad90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theConsistencyEpsilon</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>19a30b8eb87d3d790044e3fcb14fdc9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LumiFnPtr</type>
      <name>theLumiFn</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>d3692fd1b3c025407fff9e5c4f24cad1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CutsPtr</type>
      <name>theCuts</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>b1aa9c7c766e9e851f00d13662382ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PExtrPtr</type>
      <name>thePartonExtractor</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>cfe529365872995e51754c4498ff9c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; SubProcessHandler &gt;</type>
      <name>theSubprocessGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>63e23fe2440805e034f0c5e92b3e137e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; CascadeHandler &gt;</type>
      <name>theCascadeGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>cc70c3e0e9385730068d6b839a7d9490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; MultipleInteractionHandler &gt;</type>
      <name>theMultiGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>f3c0a8a6d7bef9786583c73453cf6032</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; HadronizationHandler &gt;</type>
      <name>theHadronizationGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>23845d692ed32c4be0918e6e28690ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; DecayHandler &gt;</type>
      <name>theDecayGroup</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>f03c9d7c901894f8c927090027fc670c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GroupVector</type>
      <name>theGroups</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>5923d41accd3bb34dbbd9eb11d8adc09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EventPtr</type>
      <name>theCurrentEvent</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>f762a2bb3a7699c1a55d5b53d4fb77ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CollPtr</type>
      <name>theCurrentCollision</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>8398409d8b202df685b3c5c08efde101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StepPtr</type>
      <name>theCurrentStep</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>63f733765f9950f6afcfe82ec0ed4c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StepHdlPtr</type>
      <name>theCurrentStepHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>12012051506a9648a295f27a1b36900c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; EventHandler &gt;</type>
      <name>initEventHandler</name>
      <anchorfile>classThePEG_1_1EventHandler.html</anchorfile>
      <anchor>e42dba5abecdb87d5d93473e8637c946</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::EventManipulator</name>
    <filename>classThePEG_1_1EventManipulator.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>manipulate</name>
      <anchorfile>classThePEG_1_1EventManipulator.html</anchorfile>
      <anchor>baabb1a02ef1d3edd880547adb4c76bf</anchor>
      <arglist>(tEHPtr eh, tEventPtr event)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1EventManipulator.html</anchorfile>
      <anchor>a8d48cd932c30d80b70c2ef63ad08263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1EventManipulator.html</anchorfile>
      <anchor>98ccef39f30ef38c88f0cc4c180b2fcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1EventManipulator.html</anchorfile>
      <anchor>5e888187f8d42efa4312d50821ad878f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1EventManipulator.html</anchorfile>
      <anchor>aea0386891b6823877350cf35557c099</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1EventManipulator.html</anchorfile>
      <anchor>e16634412f75592c2337d4b6bba3e773</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1EventManipulator.html</anchorfile>
      <anchor>d58a4ffacd0d963017403e2a5d21c500</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>EventManipulator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1EventManipulator.html</anchorfile>
      <anchor>132aa99163cfe47e6d819b1236c53325</anchor>
      <arglist>(const EventManipulator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; EventManipulator &gt;</type>
      <name>initEventManipulator</name>
      <anchorfile>classThePEG_1_1EventManipulator.html</anchorfile>
      <anchor>b20a4d2c569cf933bc806df622980b17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::FixedCMSLuminosity</name>
    <filename>classThePEG_1_1FixedCMSLuminosity.html</filename>
    <base>ThePEG::LuminosityFunction</base>
    <member kind="function">
      <type>Energy</type>
      <name>energy</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>f82b7e8d84e04d57bc847a2daa390eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>e094e3702b6abb671847b319436f588e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>6b8b578955346912a25e490932dda8de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>4028ed2766006f18922e92202926aedc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>af3d29f7a467910a9bca50e74dd10692</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>c5c139c74f83c6ea81f5216ea681175b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>eb9a6248e1277a021bb6a7e8bea0cc25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>21798f81f758c7753399db5ebea40db6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>c1e73f1e27634f28be11e1f2be9c12cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setEnergy</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>bd352359c70d3e16ae75fcc632cd87b8</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>getEnergy</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>06d256af59e0dce8a00b2bee9cd9f2d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>FixedCMSLuminosity &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>1b30fb1530837c7e13d8680229363b38</anchor>
      <arglist>(const FixedCMSLuminosity &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; FixedCMSLuminosity &gt;</type>
      <name>initFixedCMSLuminosity</name>
      <anchorfile>classThePEG_1_1FixedCMSLuminosity.html</anchorfile>
      <anchor>d3c26fe1890f52ee222aa537e6dc233f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::FlavourGenerator</name>
    <filename>classThePEG_1_1FlavourGenerator.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual tcPDPair</type>
      <name>generateHadron</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>71f764598eca0a5d6aa266b1ec516fa8</anchor>
      <arglist>(tcPDPtr quark) const =0</arglist>
    </member>
    <member kind="function">
      <type>tcPDPair</type>
      <name>alwaysGenerateHadron</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>b9bf4ebe76c27c812e2f8ce4a1ba1fb3</anchor>
      <arglist>(tcPDPtr quark) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>getHadron</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>a19968447de882cb195fb93eddeb11c1</anchor>
      <arglist>(tcPDPtr q1, tcPDPtr q2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>getHadron</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>d11bd74d6b36a8e6fa3602d745638000</anchor>
      <arglist>(long iq1, long iq2) const </arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>alwaysGetHadron</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>80de1f9c8490e7d2cbe28b60c8810da8</anchor>
      <arglist>(tcPDPtr q1, tcPDPtr q2) const </arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>alwaysGetHadron</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>c2a764b7206de438a81f85c358bec182</anchor>
      <arglist>(long iq1, long iq2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>getBaryon</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>07bdf54664897a1672cccd999a85975e</anchor>
      <arglist>(tcPDPtr q1, tcPDPtr q2, tcPDPtr q3) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>getBaryon</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>6db6895203f9d6a8523249251012c97d</anchor>
      <arglist>(long q1, long q2, long q3) const </arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>alwaysGetBaryon</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>4bdaad78a72412426aef779ce252acd2</anchor>
      <arglist>(tcPDPtr q1, tcPDPtr q2, tcPDPtr q3) const </arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>alwaysGetBaryon</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>e8c1b27ee8fa9118b7245004c87a7d0d</anchor>
      <arglist>(long q1, long q2, long q3) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long</type>
      <name>selectQuark</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>e7ef6318ed9371ad3dfabe1394036692</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long</type>
      <name>selectFlavour</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>95ac4fe531cc0a58a390039d69dedd24</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>651123922ab8920f052b55a6a01a7d91</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>3ab2eb71e0266837f4b36df97d1f3bc1</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>8b74adf84af2920fc66c58640774002d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>FlavourGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>543d20df4dbd991e4eaedb2899ed45b6</anchor>
      <arglist>(const FlavourGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; FlavourGenerator &gt;</type>
      <name>initFlavourGenerator</name>
      <anchorfile>classThePEG_1_1FlavourGenerator.html</anchorfile>
      <anchor>40ccbf628bdacef3cee3960e8f406bb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::GaussianPtGenerator</name>
    <filename>classThePEG_1_1GaussianPtGenerator.html</filename>
    <base>ThePEG::PtGenerator</base>
    <member kind="function" virtualness="virtual">
      <type>virtual TransverseMomentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>4f903a0468dd29b1ec85be3fe6a4bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>bd1af8ad2f308e7528e1e6b746d4ada8</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>e446bc314be9c8d748408fd62a9465b1</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>c1778638e27b3d04202d8f4087b59258</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>d5d2ab8983650c1d9a813f0bc4e01e5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>e70add6250c50bd10bbeffd27e7e6227</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>0b504bfa667b375ce5fddf6d41767be6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>57946003a791017cb2f26262ab42f5c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>6a39f9b37ff9d24a7abe381386d12f6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>b5082341992f234166b6627b2ea41329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>04a277ae995c089e3c9a4e9a25afd5fc</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>4b780aa75befec82e44d846f2a776685</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>GaussianPtGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>1af61a6cec4c3e548461a0940e42effb</anchor>
      <arglist>(const GaussianPtGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theSigma</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>ad8942803fda8bad582a48fd758e7f56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theUpperCut</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>7da9ad8e248535e3b7b3728039eab922</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; GaussianPtGenerator &gt;</type>
      <name>initGaussianPtGenerator</name>
      <anchorfile>classThePEG_1_1GaussianPtGenerator.html</anchorfile>
      <anchor>49c4d4397d817d2957c27ce6ae8901de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HadronizationHandler</name>
    <filename>classThePEG_1_1HadronizationHandler.html</filename>
    <base>ThePEG::StepHandler</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1HadronizationHandler.html</anchorfile>
      <anchor>21c005a885e1e56c7200dad5004675fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1HadronizationHandler.html</anchorfile>
      <anchor>b950daa844e0390817c606ee1308fb81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1HadronizationHandler.html</anchorfile>
      <anchor>d011a6b620155c45efd178713c30fff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1HadronizationHandler.html</anchorfile>
      <anchor>a97908cfe47e73705cdcadae6156ee60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1HadronizationHandler.html</anchorfile>
      <anchor>592e4b0ce39609b5327767c41752e6fd</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1HadronizationHandler.html</anchorfile>
      <anchor>b8c5bf8f887c75119be0f28c70b95e39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HadronizationHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1HadronizationHandler.html</anchorfile>
      <anchor>83de98e51caa3cdb50d36a294a5969ea</anchor>
      <arglist>(const HadronizationHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; HadronizationHandler &gt;</type>
      <name>initHadronizationHandler</name>
      <anchorfile>classThePEG_1_1HadronizationHandler.html</anchorfile>
      <anchor>b434c817113080ae1425258d11dc4841</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HandlerBaseT</name>
    <filename>classThePEG_1_1HandlerBaseT.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Interfaced</base>
    <member kind="function">
      <type>double</type>
      <name>rnd</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>4a296fd538c4415eee6ca562d9a760ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rnd</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>b867da0a7facbcb011b45d4ccc0a5672</anchor>
      <arglist>(double xu) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rnd</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>ed00780c67e9ce339112a8b691de8d95</anchor>
      <arglist>(double xl, double xu) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rndbool</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>86603a0f338881effdd08f65ee01a94b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rndbool</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>9095caa0a25aaf9b011f9eddc73b6f9c</anchor>
      <arglist>(double p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rndbool</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>3b12e6d60eccf994865703944979a857</anchor>
      <arglist>(double p1, double p2) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rndsign</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>0b2f032bec12ce6634f32ef333731b33</anchor>
      <arglist>(double p1, double p2, double p3) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rnd2</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>ef38df15e0aa6e85509e6b14fc562778</anchor>
      <arglist>(double p0, double p1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rnd3</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>f5809558b5f78759e2285d934bd7372b</anchor>
      <arglist>(double p0, double p1, double p2) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rnd4</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>a927fd8212622054caaab5143ff6675f</anchor>
      <arglist>(double p0, double p1, double p2, double p3) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>irnd</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>300d4e0c1f2ce0c51e812dee3c2edbfb</anchor>
      <arglist>(long xu=2) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>irnd</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>0dadcdf73e448128a3e566b42301d235</anchor>
      <arglist>(long xl, long xu) const </arglist>
    </member>
    <member kind="function">
      <type>const StandardModelBase &amp;</type>
      <name>SM</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>27450063d7b86c6f8df088bbfcd40de9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tSMPtr</type>
      <name>standardModel</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>c82d5a0c1e6b6dcdf5df762e6d268e3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>HandlerBase</name>
      <anchorfile>classThePEG_1_1HandlerBaseT.html</anchorfile>
      <anchor>ecfbcb5d6103c3bbfb56c4d5d0e6e434</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HandlerBase</name>
    <filename>classThePEG_1_1HandlerBase.html</filename>
    <base>ThePEG::HandlerBaseT</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1HandlerBase.html</anchorfile>
      <anchor>b803545f0d50bb2270627b64e9807671</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1HandlerBase.html</anchorfile>
      <anchor>c699a1fae759e81da046f7549c1b7c4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1HandlerBase.html</anchorfile>
      <anchor>d063738fa69bc5e3f35c22edd7f894d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1HandlerBase.html</anchorfile>
      <anchor>a0b80050a2f814efca226f01078359af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1HandlerBase.html</anchorfile>
      <anchor>cdbfb138e06c904b265b631fa4dff0a0</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1HandlerBase.html</anchorfile>
      <anchor>6574a655b73e681243e15e7b0e6b8bea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HandlerBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1HandlerBase.html</anchorfile>
      <anchor>f255153d7c78d60ac78508614b0f0d1c</anchor>
      <arglist>(const HandlerBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; HandlerBase &gt;</type>
      <name>initHandlerBase</name>
      <anchorfile>classThePEG_1_1HandlerBase.html</anchorfile>
      <anchor>2bf7bfb07130240a442bdc7916f8ca7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HandlerGroupBase</name>
    <filename>classThePEG_1_1HandlerGroupBase.html</filename>
    <member kind="typedef">
      <type>pair&lt; StepHdlPtr, HintPtr &gt;</type>
      <name>StepWithHint</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>e73abb348eade83f52436e917e96d461</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>StepVector</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>35f2f84a7a2df6eb876733302bf7baff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; StepWithHint &gt;</type>
      <name>StepHintVector</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>a8204ae429c3cfa7a4dea7f9e59cf6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>deque&lt; HintPtr &gt;</type>
      <name>HintVector</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>67d8028379f0edbacd737c18990ad80c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HandlerGroupBase</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>acefb0e4b886d716733b560e9d201691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HandlerGroupBase</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>ef9cd53f7d936ec2fad3e354a2ff5b33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>72dfbb450fd5a1cc5e7f465fb28c65d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>94858a4a2b75c70f99c4fc0d5e34cab0</anchor>
      <arglist>(const HandlerGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>StepWithHint</type>
      <name>next</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>2bcee706102370982cfa674b518918a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPreHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>a950553de3969e31e3a457c2cb1eb355</anchor>
      <arglist>(tStepHdlPtr sh, tHintPtr hint, const HandlerGroupBase &amp;ext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPostHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>ead98c205bb4e65b3be4764571c7fd1c</anchor>
      <arglist>(tStepHdlPtr sh, tHintPtr hint, const HandlerGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHint</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>207c86e233d8c1eca5e446e48688f58b</anchor>
      <arglist>(tHintPtr hint, const HandlerGroupBase &amp;ext)</arglist>
    </member>
    <member kind="function">
      <type>StepVector &amp;</type>
      <name>preHandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>4b090e203df8bb4b5b87d36406f2c8ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const StepVector &amp;</type>
      <name>preHandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>7d89c5db8be0cbf5f5de866f1c3e5ea8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tStepHdlPtr</type>
      <name>defaultHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>97502006e91ce1454fe5161b58c80472</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>StepVector &amp;</type>
      <name>postHandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>445b99306ea028cd76d4e9026d508c7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const StepVector &amp;</type>
      <name>postHandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>62a63af5529bc5aac27938eb0c338d75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tStepHdlPtr</type>
      <name>handler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>f7f473426faae24d992d28906084f212</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>6f1d613f459de65e80c5b722206b4fec</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>739cec31ed06dd6a294f15b30df50a4d</anchor>
      <arglist>(tStepHdlPtr, const HandlerGroupBase &amp;ext)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>refillDefaultHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>df85f5d6e74784c9ef63eba26ed891dd</anchor>
      <arglist>(tStepHdlPtr)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refillDefaults</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>0390c84e2bde12d1d0974e5185315572</anchor>
      <arglist>(const HandlerGroupBase &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>4d982d19bca5a82d91b76ede0e94373c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>handlerClass</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>f705afd19321be093b34d6adf12ee958</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interfaceSetPrehandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>36c1aca2c3dd32426c57f034a6633d51</anchor>
      <arglist>(StepHdlPtr p, int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interfaceInsertPrehandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>e000c1985b0df8cda70d24b6b7fa6223</anchor>
      <arglist>(StepHdlPtr p, int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interfaceErasePrehandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>0132eab81eaa326e01144e8d5d18730e</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPrehandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>5c899c05efc3c05934fc50d416678774</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interfaceSetPosthandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>429863ab1e07d51b9272c31ec6fd9bf6</anchor>
      <arglist>(StepHdlPtr p, int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interfaceInsertPosthandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>bc226518b8b7d9b247171d2243a5ba48</anchor>
      <arglist>(StepHdlPtr p, int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interfaceErasePosthandler</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>e845d3ea3eef7de30ea9bd57a59a018a</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPosthandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>54c547b65e8cea62621b39fbc46a9736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>write</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>373f3cba76ab369f15fca424f3417ca5</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>read</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>1945ffdbe08ebdeb7046d3f551bdeae8</anchor>
      <arglist>(PersistentIStream &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HandlerGroupBase</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>63b95e06171216009a6f80c5c4ca1327</anchor>
      <arglist>(const HandlerGroupBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>3392fb2f8ef6e8e07339f5f9c022bab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StepVector</type>
      <name>theDefaultPreHandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>087b8e4634e32a7a8e448ab7345ede4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StepVector</type>
      <name>theDefaultPostHandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>f46a687a584ab82a5dd4d66f4e0a6718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StepHintVector</type>
      <name>thePreHandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>cc427f1950b4c96ffb5ed04895dddc5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HintVector</type>
      <name>theHints</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>a031a59828ddf1dc73ac27a6ebc13ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StepHintVector</type>
      <name>thePostHandlers</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>3eaa84ed7c2ad82161dd5d10dc26b89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>checkInsert</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>5dbe45143f9664a5a432a2bffc2dc312</anchor>
      <arglist>(StepHintVector &amp;current, const StepVector &amp;def)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HandlerGroupBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1HandlerGroupBase.html</anchorfile>
      <anchor>924f958881d1379ebb62071232701714</anchor>
      <arglist>(const HandlerGroupBase &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HandlerGroup</name>
    <filename>classThePEG_1_1HandlerGroup.html</filename>
    <templarg>HDLR</templarg>
    <base>ThePEG::HandlerGroupBase</base>
    <member kind="typedef">
      <type>Ptr&lt; HDLR &gt;::pointer</type>
      <name>HdlPtr</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>630044834f49f5bb4481f2a8c8a9dd63</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HDLR &gt;::transient_pointer</type>
      <name>tHdlPtr</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>90484b88d6becbc9f938dff9a8540d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HandlerGroup</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>4bce0e68fb388c1ddd04f81bb0ed3a49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HandlerGroup</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>0930d060e1a83a9de6f1be3da0b28bc4</anchor>
      <arglist>(const HandlerGroup&lt; HDLR &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HandlerGroup</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>038f22b38bf8dc9f48513580c43e5512</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>41633a59dc5d7b99466b4fa35cfc6b1d</anchor>
      <arglist>(tStepHdlPtr, const HandlerGroupBase &amp;ext)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>6818f285bf7151e5d5c29c3c4aa899a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tStepHdlPtr</type>
      <name>handler</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>2c86b726e86ff2a96d069a72b2b9fc07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tStepHdlPtr</type>
      <name>defaultHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>1156009d7cb43dc749e6e413b538a025</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refillDefaultHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>f13a4c566c7c472a6a993e3a38e6f782</anchor>
      <arglist>(tStepHdlPtr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>9b14ce1eef04ef2bf50d1167787f685b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>handlerClass</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>cdb8ce3d70932281651db958a4098cf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interfaceSetHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>dcce61cb724b4cb146e4e866f7b9e54a</anchor>
      <arglist>(HdlPtr)</arglist>
    </member>
    <member kind="function">
      <type>HdlPtr</type>
      <name>interfaceGetHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>295e556ef73e758d278470a44d3600b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>write</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>ae4f5104b5020ee38c7fe1bc406c9939</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>read</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>c9dd3e091e07a6e9456fed867bb35889</anchor>
      <arglist>(PersistentIStream &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HandlerGroup&lt; HDLR &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>300bae2ee92d063f2715dd904189f45d</anchor>
      <arglist>(const HandlerGroup&lt; HDLR &gt; &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HdlPtr</type>
      <name>theDefaultHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>c2a03a558a8f51bf0d2c7fef9025ab1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HdlPtr</type>
      <name>theHandler</name>
      <anchorfile>classThePEG_1_1HandlerGroup.html</anchorfile>
      <anchor>07f43c2ce9d2992f7983628acbfb3e32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Hint</name>
    <filename>classThePEG_1_1Hint.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function">
      <type>bool</type>
      <name>tagged</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>e1f02f417824447a14c1850f53b0dedb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPVector</type>
      <name>tagged</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>acba502dacfc7d7c55fb67564f8bdad1</anchor>
      <arglist>(const Step &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tag</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>09ef15a765cc22344dd9a4c3df66e171</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tag</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>6c98c9d2256b6cdde7d1a896b3e45240</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>7c25279200d5344232bb0c356bcf3c8f</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>20fa62d0daae475f84b9042882334059</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>1df442a9791b9da4c916f25bdb2262d0</anchor>
      <arglist>(const Scale &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const Scale &amp;</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>f48c1d0d70bb6bb5e955266aba9c7c12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>a942d59e5eb70b77cc2cefc2209a9b3f</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>07e76aab591d02ca95fa2630d92e5dc2</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tHintPtr</type>
      <name>Default</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>1e837da91b3cd697716037f5ed28218a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>9ec888a80b2f4dedf8285c85d535e616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Hint &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>3b665185b7acdcab01a8ec8c6fd69ccb</anchor>
      <arglist>(const Hint &amp;h)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPVector</type>
      <name>theTagged</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>50ce7909e5edd2359059b4586250bad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Scale</type>
      <name>theScale</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>e37fd6d293b262a4698f4bfdf8a92879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>theStopFlag</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>fcb83e39885e5c169c797655b29609a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Hint</type>
      <name>theDefaultHint</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>0fc584b8b0ff728e649fa37ac436554d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Hint &gt;</type>
      <name>initHint</name>
      <anchorfile>classThePEG_1_1Hint.html</anchorfile>
      <anchor>898b1e6077133f7a1e7adaccb1cfb821</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LastXCombInfo</name>
    <filename>classThePEG_1_1LastXCombInfo.html</filename>
    <templarg>XC</templarg>
    <member kind="function">
      <type></type>
      <name>LastXCombInfo</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>e1d7e854f1fd9786190ce04f42fdef32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LastXCombInfo</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>30bfe4368f0ad45784c9cbc35510d423</anchor>
      <arglist>(const LastXCombInfo&lt; XC &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LastXCombInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>9956aaf5ca7763600ca823af91c9c7d5</anchor>
      <arglist>(const LastXCombInfo&lt; XC &gt; &amp;)</arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XC &gt;::pointer</type>
      <name>XCPtr</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>4b9feca1a462a761d0c2cd84b4df9316</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XC &gt;::const_pointer</type>
      <name>cXCPtr</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>e4c1fdb6f64257a2c72942d693168fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XC &gt;::transient_pointer</type>
      <name>tXCPtr</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>6d1db1e326bfd1c051a10aecae7088d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; XC &gt;::transient_const_pointer</type>
      <name>tcXCPtr</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>4b4ad044e096495a36a620a3bf737774</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const XC &amp;</type>
      <name>lastXComb</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>c9a8267962589894a878a6123b68aa4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tXCPtr</type>
      <name>lastXCombPtr</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>2b744f42676d0e0b15355d4aa175a8a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EventHandler &amp;</type>
      <name>lastEventHandler</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>763dc5e52cd91577024041c3260e1517</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPExtrPtr</type>
      <name>lastExtractor</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>1d6f301809d5824d342bb33842e55192</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDFT</type>
      <name>pdf</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>b96b246eb9c592851f3fb301a24d3d01</anchor>
      <arglist>(tcPPtr parton) const </arglist>
    </member>
    <member kind="function">
      <type>const Cuts &amp;</type>
      <name>lastCuts</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>d2149e9a951adee23a2a340e0f326317</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCutsPtr</type>
      <name>lastCutsPtr</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>8ce8c55fa2707d6d0175718b92b5dd84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>lastParticles</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>3e8d6ab3191c973bd85ce19ff0d47561</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>lastS</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>7a06cf8a48fa2b1dbe5297969a7e86c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>lastPartons</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>c17746ed6f1076a5418a323c09203fb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>lastSHat</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>e02d72cc480dcace349e38cb74316d49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastTau</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>d21f1285fddb5531d35242bb6c7670c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastY</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>8824a53cfbe4b9769ee7988c203495d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastP1</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>a907d902299d4b80d2cf44ad94d570ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastP2</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>df4a0be812dfd44b9f1aa47a02c5cb96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastL1</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>1f6b8e4af61002ac0c7dbbf47c3369d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastL2</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>89267195fba15951680509258d8258e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastX1</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>41b9e804796ca05f43f0fb5662049ca5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastX2</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>2436530effd148bea28c8f22d7fc6aee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastE1</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>2b5d7d7ec20430caaf5097bf14d1760f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastE2</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>3d0e989857f34f8a9ec7cb8416a5aafe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastFL1L2</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>b988b9634404a2fca7b1c8cf99c2f298</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>lastScale</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>a1a730a6cbb81015b7e0f4555f7fa774</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastAlphaS</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>3719958366ee393d18280d9a34192f1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastAlphaEM</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>b840c1c5a1af743fd7aa0462569ed4b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector&lt; Lorentz5Momentum &gt; &amp;</type>
      <name>meMomenta</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>1dd7c5b969e21312b19e87c5a8cc1f1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tSubProPtr</type>
      <name>subProcess</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>f8c0aa098364fdbf0bce58b774140b81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const cPDVector &amp;</type>
      <name>mePartonData</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>7b45d08f2ae58cbde7703c09714b990e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XCPtr</type>
      <name>theLastXComb</name>
      <anchorfile>classThePEG_1_1LastXCombInfo.html</anchorfile>
      <anchor>5eff4a47ac9265eb31ef4f25d71ed016</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LuminosityFunction</name>
    <filename>classThePEG_1_1LuminosityFunction.html</filename>
    <base>ThePEG::HandlerBase</base>
    <base>ThePEG::LastXCombInfo</base>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>670ca28fa855cef4745136ced25ace53</anchor>
      <arglist>(tXCombPtr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>d8b60aadbfa3adbb9b635a70e8a69f45</anchor>
      <arglist>(const cPDPair &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>maximumCMEnergy</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>b622c1fbb908a81b80bf12ff78ba42bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LorentzRotation</type>
      <name>getBoost</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>a61933a598ce3c4734fad5e2219fe936</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>Y</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>ec3be5a5c20c6df1b323345161594c8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>nDim</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>5c1436f39c59e3ab2af4aab1df2dd288</anchor>
      <arglist>(const cPDPair &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>value</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>9ba229e3eda1f80a8798ebb01373c987</anchor>
      <arglist>(const cPDPair &amp;, double l1, double l2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual pair&lt; double, double &gt;</type>
      <name>generateLL</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>c9f0bee194c9288b6b4a3d84d2c6d1b7</anchor>
      <arglist>(const double *r, double &amp;jacobian) const </arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>beamEMaxA</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>3787ababcd2b031a3b02778eac3808c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>beamEMaxB</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>9f844d7b72ae17b31beead70aabcf388</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>260f39540da58233d0f1b882a4f426c5</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>c65024623a147243174606c1abedfbce</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>07e0246e3974c1511b96c8bdb60dba30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beamEMaxA</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>e3e1e9db094a357f6cf283a3901e22aa</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beamEMaxB</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>79f094bedc1ecac619151ad2052f850b</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>769908d24d22d880c73d13f6bad68c7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>1aa86720e8a9c28a6a4edf4a6d55c614</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>LuminosityFunction &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>05736234394fcc121712e624e1aeea90</anchor>
      <arglist>(const LuminosityFunction &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theBeamEMaxA</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>1454b01337e3f8b819729a3f68a59ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theBeamEMaxB</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>3d1a6d0ec03affb316832b904dc4d1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; LuminosityFunction &gt;</type>
      <name>initLuminosityFunction</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>c33fa0dd6f70358d09cffeea7d721cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>EventHandler</name>
      <anchorfile>classThePEG_1_1LuminosityFunction.html</anchorfile>
      <anchor>0b257358246ba8f9c2f228c35e4f3e85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MultipleInteractionHandler</name>
    <filename>classThePEG_1_1MultipleInteractionHandler.html</filename>
    <base>ThePEG::StepHandler</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MultipleInteractionHandler.html</anchorfile>
      <anchor>c26181614ba5dd1b4df8490d7c71c1ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MultipleInteractionHandler.html</anchorfile>
      <anchor>e2f194c216e1e7bad2feafb4c59e2e99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MultipleInteractionHandler.html</anchorfile>
      <anchor>c91079f38b41411a33dd6b905f24ff49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MultipleInteractionHandler.html</anchorfile>
      <anchor>fb3d86e3776c98b67829f7723e38b1fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1MultipleInteractionHandler.html</anchorfile>
      <anchor>1ee698daeb48d3b76df36b9143646a37</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1MultipleInteractionHandler.html</anchorfile>
      <anchor>71d9c15f9720b805f649c91a5a90bbf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MultipleInteractionHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MultipleInteractionHandler.html</anchorfile>
      <anchor>7c051897834aa9456347f153b79709ac</anchor>
      <arglist>(const MultipleInteractionHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; MultipleInteractionHandler &gt;</type>
      <name>initMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1MultipleInteractionHandler.html</anchorfile>
      <anchor>1045e46292cb9da826dfe2130ddc8db1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PtGenerator</name>
    <filename>classThePEG_1_1PtGenerator.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual TransverseMomentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1PtGenerator.html</anchorfile>
      <anchor>5b47620ed59397977c44b188d6109c6b</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1PtGenerator.html</anchorfile>
      <anchor>4a0b5a8326ea56ac1fa47d219d32b1f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>PtGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1PtGenerator.html</anchorfile>
      <anchor>6ac8c7ba6ac848866fdea820730aaa94</anchor>
      <arglist>(const PtGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; PtGenerator &gt;</type>
      <name>initPtGenerator</name>
      <anchorfile>classThePEG_1_1PtGenerator.html</anchorfile>
      <anchor>6093fc007317867d49b77d863a8db702</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SamplerBase</name>
    <filename>classThePEG_1_1SamplerBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function">
      <type>void</type>
      <name>setEventHandler</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>36401c34147887e0e6a15eef7d2ea1c9</anchor>
      <arglist>(tStdEHPtr eh)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>fa447b440acc1855d9f5c9858d29d378</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>55d7c1be1b021e238f3dbdea5ff6c8c4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rejectLast</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>3519ea01eb5b7d0b89d90176c1a7f795</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>const vector&lt; double &gt; &amp;</type>
      <name>lastPoint</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>cd24278bec81945518e389dd19504e18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lastBin</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>b41617700f0ef5c6998711a630a2aef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CrossSection</type>
      <name>integratedXSec</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>785a4e080f48cf68b928a19a07c49a71</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>sumWeights</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>78da0442ebf077e677e8a9b4bfbdafdd</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>7d9085ba0b7788de1f7ef2e802db6dd7</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>9d5e42b8a5d1bfe7e191dcf8e8f501e9</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>99215304a024d2eb53d86064816254f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>vector&lt; double &gt; &amp;</type>
      <name>lastPoint</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>b0b752359a8889e4dee9a6dc8dcef20a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tStdEHPtr</type>
      <name>eventHandler</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>468081a6d6862ea2b6468382dc562bcf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>46293910209ebe713372df6b88d76f95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>585fa98d78d98da39405c73fd14806af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>bddb496b025a3a743c42dd9119696ed8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>7d5fe706574a6ee7090752c3c3f7fc1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>2ba70cde13538f3907daa8cb5171cce2</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>f587cd9a82dd1ee797e04e40d632bee5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SamplerBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>ee87dd98725edd9ec12983819e2dac4b</anchor>
      <arglist>(const SamplerBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tStdEHPtr</type>
      <name>theEventHandler</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>a6f72f1fe7ae585e28de18ae9c7030f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; double &gt;</type>
      <name>theLastPoint</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>f3bd3a6ae00d5712297a578657f5929e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; SamplerBase &gt;</type>
      <name>initSamplerBase</name>
      <anchorfile>classThePEG_1_1SamplerBase.html</anchorfile>
      <anchor>5a09eb8b881e8e2b5047a2f68f37763a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SimpleFlavour</name>
    <filename>classThePEG_1_1SimpleFlavour.html</filename>
    <base>ThePEG::FlavourGenerator</base>
    <member kind="typedef">
      <type>map&lt; long, VSelector&lt; pair&lt; long, long &gt; &gt; &gt;</type>
      <name>ProbabilityMap</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>b40e3c2227acbd59156a7eaca863f060</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tcPDPair</type>
      <name>generateHadron</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>4aaf15e325a4197bd34ecb44b566e194</anchor>
      <arglist>(tcPDPtr quark) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>getHadron</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>2f5696c8385118e7d93a10fa6bcec26e</anchor>
      <arglist>(long iq1, long iq2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>getBaryon</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>4543c1807820b1dc3c95de1313cf1df9</anchor>
      <arglist>(long q1, long q2, long q3) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>selectQuark</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>3c0bedb7f2307c223f82c8ad512529af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>selectFlavour</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>4381d78d69b257996d61c3963b44d2ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>13dfd6357a0a5eabc5b2ec745ee809a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>diSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>4ffce10c7a5efba03523953892c8bbe0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>di1Sup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>f9cb468f5ab0f1b4f12a47aa659fc12a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>diSSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>fbb18b45473fbd29cc6f27b8df8800d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>etaSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>c8ed460babba6604b28bd81e674c4d0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>etaPSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>cbad4c538d864bf6b54e22949ded0744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>baryon10Sup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>6f4eee371ce69aa3165565157d04f30e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pSpin1</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>1b7599b6dbc638dd33ce5114f510919b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pSpinS1</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>41fa94eb67087e296b2af02763e556c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pSpinC1</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>cb39fbd55eaaca13da7b6b76a1ad8602</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>7fb637ab00a10f348dfa7510b4d20590</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>2489a3090319fc4c64637fdca9f5ea01</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>137c0f6a08505ec361f0832d4d40e2df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setProbabilities</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>c4e8f44a6785238f831ecdef2e6186cf</anchor>
      <arglist>(long iq) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>vectorMesonProbability</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>ab4826be075417e8b6a674b08c2276a3</anchor>
      <arglist>(long iq1, long iq2) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>baryonDecupletProbability</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>1e154676fda403eb7fbd9c164ba304e6</anchor>
      <arglist>(long iq1, long iq2) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>pseudoScalarMeson</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>68e4e20a99811a019bd534ac4f1dcb22</anchor>
      <arglist>(long iq, long iqbar) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>vectorMeson</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>5e0da208630b0f46ae81b7b36055e5a2</anchor>
      <arglist>(long iq, long iqbar) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>baryonOctet</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>cfaef4cb724cd820ccc3a707d0557b23</anchor>
      <arglist>(long iq, long idq) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tcPDPtr</type>
      <name>baryonDecuplet</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>d7f25f45dcfffe007e9bfbf430508a44</anchor>
      <arglist>(long iq, long idq) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual long</type>
      <name>pseudoScalarId</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>e3584f455bf8410f5de352fbd9a1b801</anchor>
      <arglist>(long iqh, long iql) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual long</type>
      <name>vectorId</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>c1a8d5e60434f62975db160ab6a8ddeb</anchor>
      <arglist>(long iqh, long iql) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual long</type>
      <name>baryonOctetId</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>69cfa9fba4a74915914c1c4a2fd6b762</anchor>
      <arglist>(long iqa, long iqb, long iqc, long iq, bool dqs1) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual long</type>
      <name>baryonDecupletId</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>f843fec7e12cef9977798755be3aa2f6</anchor>
      <arglist>(long iqa, long iqb, long iqc) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual vector&lt; pair&lt; long, double &gt; &gt;</type>
      <name>pseudoScalarIds</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>551eafc1c8f0bc94ca64a030dd416eea</anchor>
      <arglist>(long iqh, long iql) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual vector&lt; pair&lt; long, double &gt; &gt;</type>
      <name>vectorIds</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>863423af72d17c6c6fc773a2d0efdd86</anchor>
      <arglist>(long iqh, long iql) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual vector&lt; pair&lt; long, double &gt; &gt;</type>
      <name>baryonOctetIds</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>ca30217e055b8311fb0fcf7321d141f7</anchor>
      <arglist>(long iqa, long iqb, long iqc, long iq, bool dqs1) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual vector&lt; pair&lt; long, double &gt; &gt;</type>
      <name>baryonDecupletIds</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>27f78cae0911282e46f5a0f581d998f4</anchor>
      <arglist>(long iqa, long iqb, long iqc) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>9df0f37961b950704e7e9bd5f33a26e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>87e29a5a6aa912ce1c2a2fcb06ecdd60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>efa009a2fb82bc31919986448a36c50d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>97b6eb2ba9f1e90b4b498fdcc933d8fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>2e5f945758231db655890b37576edd0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>f570ecf426ce00de089bc4a81eca2bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>a7faceb042613fd61dc16d5588b49ac9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>0f6b71cb5147d0e93c8914dae248b042</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>db94a32accba9991d5455218e395516f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>weightSU6QDiQSpin</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>6705cc8d33d8fea262862cebbf74f1b4</anchor>
      <arglist>(long iq, long idq, int spin)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SimpleFlavour &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>b8d4f3ff7b5dda57f00ec653de85e755</anchor>
      <arglist>(const SimpleFlavour &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theSSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>52fce31119d2b9a93f73c6adcba6e1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theDiSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>6d0e1940f84700de89bdfc7e283ce74b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theDi1Sup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>7f13defce74f825dd243029ba90b5e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theDiSSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>7ee153923e4d2e9fd5a4401acded9e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEtaSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>9c69cd0a2e940490b91d19e4db0cec62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEtaPSup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>68e9a5daa8d00e2ef1c3534b34f1e99d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theBaryon10Sup</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>54ff14330ce89daddcb8c1ae9fbeebb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>thePSpin1</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>30d3df604dbccf1ca5a4da40189d5de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>thePSpinS1</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>c5642973e0059ff10744c25c24355f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>thePSpinC1</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>6e09a1ed8feeb56c8a5748bc086632a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VSelector&lt; long &gt;</type>
      <name>theFlavourSelector</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>70c46be9878f7366c6797f88c31d777c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ProbabilityMap</type>
      <name>theProbabilities</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>c23ce05fbaf2aed9739cc71e7bf66233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; SimpleFlavour &gt;</type>
      <name>initSimpleFlavour</name>
      <anchorfile>classThePEG_1_1SimpleFlavour.html</anchorfile>
      <anchor>11c1b04b591e9dec6979feebced0334d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SimpleZGenerator</name>
    <filename>classThePEG_1_1SimpleZGenerator.html</filename>
    <base>ThePEG::ZGenerator</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>360fdf14905be71728170daa839f76d1</anchor>
      <arglist>(cPDPtr q1, cPDPtr q2, Energy2 mT2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>36add845549d08b70633f73bcc707edc</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>dab5a840a80a2aa9d7b97d00c8f1475c</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>15701f1ab1c42f4dc36bda3b4c2b7ee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>636596dad42d2709dda00b37b3adc94b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>d7fdf805b0baa332a89fffac33f209ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>62d0953107e41c29959306205f28ef8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>3c84ac8be7137383c86dded923718d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>bdad60b5c68544870bbe74d36a9370bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>398d1e7869a646349a5812a1a4b38c80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>08bc5670b2c56b5b92c4aec5b2853c17</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>89b843e82fb2fdf8ec630b8b061ffe16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SimpleZGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>8f3a2b52906fae9a6ccc6d47ea974730</anchor>
      <arglist>(const SimpleZGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; SimpleZGenerator &gt;</type>
      <name>initSimpleZGenerator</name>
      <anchorfile>classThePEG_1_1SimpleZGenerator.html</anchorfile>
      <anchor>09ae883601dd8bdcdebb44afed524c7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::StandardEventHandler</name>
    <filename>classThePEG_1_1StandardEventHandler.html</filename>
    <base>ThePEG::EventHandler</base>
    <member kind="typedef">
      <type>vector&lt; SubHdlPtr &gt;</type>
      <name>SubHandlerList</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>e6e215943cabd092d89d007816e765c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Selector&lt; StdXCombPtr &gt;</type>
      <name>XSelector</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>21782807c5cdf07af6fed185bfa44642</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; StdXCombPtr &gt;</type>
      <name>XVector</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>a286572edd69ebbb8b3be311c0bdf840</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; CrossSection &gt;</type>
      <name>XSVector</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>579f89632e897d83a3f1648298565532</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; tMEPtr, XVector &gt;</type>
      <name>MEXMap</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>e51699c480fcfd0f4cc0f3d40072005d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>a50e40aa673c9e531a1ec72e95170b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>statistics</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>9755a68f556b1976492f8c53b929ebcb</anchor>
      <arglist>(ostream &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>histogramScale</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>382667fd809202426a010c4805e77f99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>integratedXSec</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>735409c1c9c4551116e99a3cb0e2cc4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>dSigDR</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>40de7031dc77691efd42edde7ecb19ab</anchor>
      <arglist>(const vector&lt; double &gt; &amp;r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EventPtr</type>
      <name>generateEvent</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>a863ab59f34bc98fb8b6c719065b9b40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EventPtr</type>
      <name>continueEvent</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>b5f62e376dd1d74637a204711a3ad3dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const LorentzRotation &amp;</type>
      <name>currentEventBoost</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>f23166f4c3f771ae4c410d26ae7e6197</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCutsPtr</type>
      <name>cuts</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>738023bb50ff50f754bf70216a41f909</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nBins</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>d0487b842aa6b557d6ed018201bcc051</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxDim</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>d91c1c1c966712a980d26a37733bb672</anchor>
      <arglist>(int bin) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>weighted</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>d7f3400fdd5759714313d0aad4afeb2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lumiDim</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>d79fb36151f2a1aac0906be7943b5152</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nDim</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>67e9cdb54d4744f0bf015b68e6051e76</anchor>
      <arglist>(int bin) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>d7821dbec2e58e0501cf2e8fe06e6952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>431cb5bc1fca943e4dcbb418e314605a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>c6d17b58b2c18f5fbc3f2027af1b699c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>215d9cfa416465a6f89f6a8fffecb4a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>047db4fded5fd5f9e770807ac8334f9d</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>ecffbe6b269349975bc852e02e165677</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>889152a88658ffe2d2cf294f4938d80d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>dSigDR</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>a9fb3deb7625f911e281d40ca09d5c76</anchor>
      <arglist>(const pair&lt; double, double &gt; ll, Energy2 maxS, int ibin, int nr, const double *r)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tStdXCombPtr</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>7cd0cc9184a53f924b119f1048761b7a</anchor>
      <arglist>(int bin, double weight)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addME</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>fe68f85731a209a0c0f5bc4bd43005d5</anchor>
      <arglist>(Energy maxEnergy, tSubHdlPtr sub, tPExtrPtr extractor, tCutsPtr cuts, tCascHdlPtr ckkw, tMEPtr me, const PBPair &amp;pBins)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tCollPtr</type>
      <name>performCollision</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>1561014577c18a8d294fc622f24462ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initGroups</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>9e798de97d9b0570b7ad2d13ce99be19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LorentzRotation &amp;</type>
      <name>currentEventBoost</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>3e258ac4329b4d4a228e5ef62d263823</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createIncoming</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>9c8c3108345b70c39282864027ec21b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>468a998b75a50f34f631f2ed39322fdd</anchor>
      <arglist>(Energy2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const XVector &amp;</type>
      <name>xCombs</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>f199e825cee05b4c3cd583d97188bf45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>XVector &amp;</type>
      <name>xCombs</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>95b721de665676445c469f0c67ec91e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const XSVector &amp;</type>
      <name>xSecs</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>2f3fa502f81303a0a76a5d802d60c46c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>XSVector &amp;</type>
      <name>xSecs</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>a468eb4353bb955078773931b8db0afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>binStrategy</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>6f468a58bf26408f6f741c0299768c31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>6e7478930278c024303a566225f3f357</anchor>
      <arglist>(double weight)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tSamplerPtr</type>
      <name>sampler</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>7e7d4ff60cb7351a7f5c8bfe55d460b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tcSamplerPtr</type>
      <name>sampler</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>83c1273c2d9bb681595dbbb454a40956</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>0e5f2f8842b44134d8d85b4f42c04e1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>92c1104cedcb0a05d78d6003769dd413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const SubHandlerList &amp;</type>
      <name>subProcesses</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>502bdbcf3846260a58c82595227b3510</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SubHandlerList &amp;</type>
      <name>subProcesses</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>50c578a298f6aed53b9e92794a6d1c3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const StandardEventHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>8858761d20471ad718ad6955fe87e2fb</anchor>
      <arglist>(const StandardEventHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDPtr</type>
      <name>theIncomingA</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>68b60ca528d3ec753491fd5d9e5e07c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDPtr</type>
      <name>theIncomingB</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>75db06587f440d9696beda097e54d9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SubHandlerList</type>
      <name>theSubProcesses</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>719002a66fd94156cc95f3d9f293461e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CutsPtr</type>
      <name>theCuts</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>727b2341d41d2d19dbc4fd0976aa6cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>XVector</type>
      <name>theXCombs</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>7bb6624b3a0e0f82181767c25bcc0c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>XSVector</type>
      <name>theXSecs</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>046a04ee14250761d4955e5a8039be07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theBinStrategy</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>5bf1248b37b2676722bdc32fd8983b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MEXMap</type>
      <name>theMEXMap</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>c4c80f321a57f87caf2aafe861b9151c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; int &gt;</type>
      <name>theMaxDims</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>816e3c27dee7298610fc70776abf1df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LorentzRotation</type>
      <name>theCurrentEventBoost</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>153a32c63dfd22cb9b21437749846bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>weightedEvents</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>066a77a0a86f71076c895721a0c77682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SamplerPtr</type>
      <name>theSampler</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>121438907cd50ef6a04afa2d6b541fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theLumiDim</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>9e3d96a2d3582064b397732ad47b7597</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; StandardEventHandler &gt;</type>
      <name>initStandardEventHandler</name>
      <anchorfile>classThePEG_1_1StandardEventHandler.html</anchorfile>
      <anchor>82550d2058d5015bba46deb4c2b6db99</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::StandardXComb</name>
    <filename>classThePEG_1_1StandardXComb.html</filename>
    <base>ThePEG::XComb</base>
    <member kind="typedef">
      <type>MEBase::DiagramVector</type>
      <name>DiagramVector</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>1c56c0e4874aeb84e3e9c474c89e1c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MEBase::DiagramIndex</type>
      <name>DiagramIndex</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>c377ef47c597da207b5025a849474726</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tcSubHdlPtr</type>
      <name>subProcessHandler</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>7f0a7e040aa760e911a06b4612bcdbd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tMEPtr</type>
      <name>matrixElement</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>5d830d1be1fab60a86a4b83317d97493</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkInit</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>21a8d0fb5b6ddda68e7478fe0808c28d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nDim</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>d879650c3988329c0dc8ba9aba82c8cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CrossSection</type>
      <name>dSigDR</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>331163c4c622695330e1cb3920b0b83a</anchor>
      <arglist>(const pair&lt; double, double &gt; ll, int nr, const double *r)</arglist>
    </member>
    <member kind="function">
      <type>tSubProPtr</type>
      <name>construct</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>fd0e4f9065f87e6fe0685903c2c568aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const XSecStat &amp;</type>
      <name>stats</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>fafe7316da96f8826aa10db5bd012e49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>c799c7792e55abe63d3f543bdc11ad49</anchor>
      <arglist>(double weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>c9154ef23e06238dd99018cf926d847f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>a971c018bf6a5ac446a36dd20cb0cfb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>58571d550276e84795df8bd09ab5ef31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DiagramVector &amp;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>2149ab49044bf2d8181d1a9e804d5e64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mirror</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>ca9ffa9f72170d3782241c173716e0a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector&lt; Lorentz5Momentum &gt; &amp;</type>
      <name>meMomenta</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>bc6edbb1e1197f8cb64aeca92e450076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcDiagPtr</type>
      <name>lastDiagram</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>84c96814e4902e971e670b859d62a829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const cPDVector &amp;</type>
      <name>mePartonData</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>829aaaedca842a72078415fdff5633e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DiagramIndex</type>
      <name>lastDiagramIndex</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>360831178c39b698412ad77ebb532ec6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const DVector &amp;</type>
      <name>meInfo</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>d350631160cbe86dd07062420d4bde82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meInfo</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>d688a731b4bb6142c633724f7bb09b5c</anchor>
      <arglist>(const DVector &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>01f87660aeb6f252901d369206c098ac</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>630378a2e810adcd081177639396d1de</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>2bee11f9c4237daad0f610cfb0666a5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>newSubProcess</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>7622cd66bcc9e1c6a62a2ef643328435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>vector&lt; Lorentz5Momentum &gt; &amp;</type>
      <name>meMomenta</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>5e09a7d627b96ec0630f035e166ee2e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>cPDVector &amp;</type>
      <name>mePartonData</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>c020713c952b1b595bd62016acb2cc76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>lastDiagramIndex</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>06922559db276e73c3b00433e93b8b7a</anchor>
      <arglist>(DiagramIndex)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>StandardXComb &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>16d4a67e2cdf8ae1cbb1bc2ec22b776b</anchor>
      <arglist>(const StandardXComb &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tSubHdlPtr</type>
      <name>theSubProcessHandler</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>5899f65ddf754af4a3a751088d209a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tMEPtr</type>
      <name>theME</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>e4582f2a2546feaa99e7ea7283caaadb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>XSecStat</type>
      <name>theStats</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>9f128949d60e577e6017b1acb9efe14f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DiagramVector</type>
      <name>theDiagrams</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>9ea0b611c3343117a30322a8f8c5d2ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isMirror</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>95789ce6cb52bcd22eeab5a6e53df8ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theNDim</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>1432ed2a7d33e739a14a918cd157f96e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pair&lt; int, int &gt;</type>
      <name>partonDims</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>be6946615f256e4954bde76e7d42950b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; Lorentz5Momentum &gt;</type>
      <name>theMEMomenta</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>5de06bc5fcb410bea94d38c11146ca40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPDVector</type>
      <name>theMEPartonData</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>caa2ab0315389865cbe0477b7f130d2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DiagramIndex</type>
      <name>theLastDiagramIndex</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>30404269c1cf3e1d72fd8cb570270a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DVector</type>
      <name>theMEInfo</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>5fc5b662a4759b9844aa30b824e44d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; StandardXComb &gt;</type>
      <name>initStandardXComb</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>64af34acfb1d85e442e2690f8a420ed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>MEBase</name>
      <anchorfile>classThePEG_1_1StandardXComb.html</anchorfile>
      <anchor>5c385fd7fe3246063eca17e796b34d23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::StepHandler</name>
    <filename>classThePEG_1_1StepHandler.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>handle</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>d083c1fb37260264fa7afe3b1b603498</anchor>
      <arglist>(EventHandler &amp;eh, const tPVector &amp;tagged, const Hint &amp;hint)=0</arglist>
    </member>
    <member kind="function">
      <type>tEHPtr</type>
      <name>eventHandler</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>6075b6f4626ca09fdc297be5652d9f55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eventHandler</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>14bdd7da2830fde944da54ad16f2ce5e</anchor>
      <arglist>(tEHPtr)</arglist>
    </member>
    <member kind="function">
      <type>tStepPtr</type>
      <name>newStep</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>9609e6ba4860e04e646caf9f9cb67142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tStepPtr</type>
      <name>currentStep</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>5b4ac81bf4114ce8d5d739caef286040</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>9d392fa9f0caa1b23ab2600cfdda030f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createNewStep</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>46e1e3e59a206fa449de4e55a4a608ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>eb34c2eb1c3060603e87577593ee1b14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>d1ab1201cc8704ef809b51816f934e7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>831bfd028929c0d90c648a90d61e7016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>20bc8dc9828a61b5414aae8803222795</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>4f7af276be2587bc96529fbbc03f00a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>StepHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>924cd131a288b089fcb9d2d8d5ff651d</anchor>
      <arglist>(const StepHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tEHPtr</type>
      <name>theEventHandler</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>8888987885e70c7bc2ae9671fd3ca4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tStepPtr</type>
      <name>theNewStep</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>1d28c9ba184229504db050947520ebea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tStepPtr</type>
      <name>theCurrentStep</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>3da02a8fb20553ace7b6c49f4177d2cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; StepHandler &gt;</type>
      <name>initStepHandler</name>
      <anchorfile>classThePEG_1_1StepHandler.html</anchorfile>
      <anchor>f36198502769fe30a61da19aa5605bc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SubProcessHandler</name>
    <filename>classThePEG_1_1SubProcessHandler.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="typedef">
      <type>vector&lt; HandlerGroupBase * &gt;</type>
      <name>GroupVector</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>071e98d9b385edd45052def0ddf65029</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; ReweightPtr &gt;</type>
      <name>ReweightVector</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>0fb6cade70785b5e98c9a7b5f01d4779</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tPExtrPtr</type>
      <name>pExtractor</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>515300895a578f407f3585623081e2b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const MEVector &amp;</type>
      <name>MEs</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>4fb92b674090879cb315b1194bf31ee5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCutsPtr</type>
      <name>cuts</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>013044c525edc83b5b6c188520270e75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCascHdlPtr</type>
      <name>CKKWHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>7b743aa96b944b0a3174103146d47a00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const HandlerGroupBase &amp;</type>
      <name>handlerGroup</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>032e69e08e6828fb1e07c88cf862c3ea</anchor>
      <arglist>(Group::Handler) const </arglist>
    </member>
    <member kind="function">
      <type>const GroupVector &amp;</type>
      <name>groups</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>6c59f19c1cea0cbcfa5e0bd04c65ed3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MEVector &amp;</type>
      <name>MEs</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>87191be8e34aa4bca7f2d4b95ffc3fcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>522c8409ae1477728f68e6884c454324</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>f89c64214d5d6d1c984f0e3e3286a43d</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>957a336715394a7db5c169f2acca692f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>5feb0be895313581df2f7a1538496c0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>358310b417cde1d0533a766f31309ab3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>73cc1b77e51db2084a9fca349baead1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>79c1ff10df8553e5abdea13f6be2d3a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>c02c3279d7053ac1160e0ca5d3c63c7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setupGroups</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>038d56cc47b2bbb3a2679296bc14f8ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostSubProcessHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>e96b62ba2cd62a527be0c91461b15ec8</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostSubProcessHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>a7c95dc2c4ad4690b663ea581b66ce1d</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostSubProcessHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>84c874222de3b8859231cd9d5ea3fb68</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostSubProcessHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>a3f2393e953a44329f79d0547b10361a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPreCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>e2d4f881ad3984ff7b4bcd4edbff4503</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPreCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>5b31420fec523c43c307980dbdfe7ad9</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePreCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>7f9278d8908a292dbb86b317f5cb0e64</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPreCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>d5402ed239a18b799cab022e4154b481</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>535e39acc9f1a23cb4b4f5eae7eb6af8</anchor>
      <arglist>(CascHdlPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CascHdlPtr</type>
      <name>interfaceGetCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>ab838e978bf3fb20696661a9ec3c02a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>1b36fa7adad1245b4c59348bd4478d14</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>830537538d779800b852c98d76c4e91c</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>4f4e5c9947e2bc820952744f0856ff23</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostCascadeHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>d6e6780479d44a3c47ecc5f24d1d02e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPreMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>02e2e892922e7986068e9f394a1e313a</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPreMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>90e6d642acdd295ed8918e0220b98eb9</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePreMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>6ca814dfea7137b07d20dc2a3596554f</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPreMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>538d97fc500c61cda12f96bba4ab3ffd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>1a8b2da6b73c8d6bf5d7ce56c24da562</anchor>
      <arglist>(MIHdlPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MIHdlPtr</type>
      <name>interfaceGetMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>a9475d197190fb5f45f67e8e8198e794</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>a26ea41fcae8e11aaa7c77262bcff26b</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>17d9ad6c92c7b80cef16f9c69adc86ee</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>c3357b6a14b3dc24dd52a2b53504cdf5</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostMultipleInteractionHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>84326f3ba86ce77a510284866381743b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPreHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>0de2388104160d22b888d23932ed822d</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPreHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>0de22de2e8dede8b750d777d5e10523f</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePreHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>c029ca9ca56b9dc1268e908242ffe69a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPreHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>82f8216bb5de7c050a73adef2f624528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>39b9088eecfc4a3b26ad1ee2f621354c</anchor>
      <arglist>(HadrHdlPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HadrHdlPtr</type>
      <name>interfaceGetHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>df5ccace0fd50abe74f0f12dbce320a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>cb60a2986b6eef45a74c1b90db2189f6</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>a1f9260a74fe751e40440b132b3e02c9</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>442cb6300fe35e02561d1fc696738125</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostHadronizationHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>74a3f46c9e83ace9123f52392b3daf74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPreDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>0a18126db93321b109d4edb56744e6f1</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPreDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>ff5365224a82f9c77122cb5235171f3c</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePreDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>b4e2defa46d921739adb44ff128f081a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPreDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>696cb6caf5f61657cfe99568196c2e1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>8905cf5a50149d8225ab822be50defca</anchor>
      <arglist>(DecayHdlPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DecayHdlPtr</type>
      <name>interfaceGetDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>103e4b2c328437aebb4c7da6922f12d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceSetPostDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>e3e8aaf96cdb0e951dad240255cd19bb</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceInsertPostDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>e86df440ef77fb6d24fef446491b0d61</anchor>
      <arglist>(StepHdlPtr, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>interfaceErasePostDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>a6a3be41c27e4c2bfd83ead8f961b31e</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; StepHdlPtr &gt;</type>
      <name>interfaceGetPostDecayHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>7582195196e481a5cda3c19e0b811393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const SubProcessHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>184a99de3a96d39114be9db70920b085</anchor>
      <arglist>(const SubProcessHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PExtrPtr</type>
      <name>thePartonExtractor</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>60cfe1eadc1dab21d06b8b7cf43e092a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MEVector</type>
      <name>theMEs</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>61a45ff7cd96bde1e9e1096d2987c470</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CutsPtr</type>
      <name>theCuts</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>17dca6c7d03fc0971e8ca7d9256d5e9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; SubProcessHandler &gt;</type>
      <name>theSubprocessGroup</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>35674a6e92a0695e990c5fac8b9a424d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; CascadeHandler &gt;</type>
      <name>theCascadeGroup</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>2ae4d078286097eb27a917e39dafef9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; MultipleInteractionHandler &gt;</type>
      <name>theMultiGroup</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>d7a255bdd6312386c2e35de388a935ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; HadronizationHandler &gt;</type>
      <name>theHadronizationGroup</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>efc61ce13faa3253f316ed694862af15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HandlerGroup&lt; DecayHandler &gt;</type>
      <name>theDecayGroup</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>fd64eea411610d6b71b1e6d1e7df3328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GroupVector</type>
      <name>theGroups</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>7cbaf162daccc3bef6e91f974b72a32c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ReweightVector</type>
      <name>reweights</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>c6785dbb77eac63a5827119ce38a5283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ReweightVector</type>
      <name>preweights</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>bad68c2f9bdf063cb8ba9deb29fc5e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; SubProcessHandler &gt;</type>
      <name>initSubProcessHandler</name>
      <anchorfile>classThePEG_1_1SubProcessHandler.html</anchorfile>
      <anchor>9163bc1baa822f8dfee0f85e34e170d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::XComb</name>
    <filename>classThePEG_1_1XComb.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function">
      <type>const EventHandler &amp;</type>
      <name>eventHandler</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>0812aa53b82ae2285fca8c5541a1a408</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPExtrPtr</type>
      <name>pExtractor</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>2103baaee4ae85911069dd08ecd3759b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCutsPtr</type>
      <name>cuts</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>22583e828137c02537dcf22c7fd82879</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCascHdlPtr</type>
      <name>CKKWHandler</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>9f98a7c6fbad83009c550988a9513c50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const cPDPair &amp;</type>
      <name>particles</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>bd97be9381db20a2f7c591088d5f0b6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const cPDPair &amp;</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>3d38c7e48ee355010367316ba7052c5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PBPair &amp;</type>
      <name>partonBins</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>2a33bc702cd77e76e6d298c30a8ef1c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>maxEnergy</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>7e3376b00e381367d0b768a9e73f5604</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>a49ac0add70e17fca5e0fec95a272c96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clean</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>113253a1f70e297f68c74429a6ffcd53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPartonBinInstances</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>81ba34aac6207b6b8e321eddc4a30abc</anchor>
      <arglist>(PBIPair pbis, Energy2 scale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>5ad87a54ffb08a583e506f4950aac80f</anchor>
      <arglist>(const PPair &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>lastParticles</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>93f5c76c1c150d12e2ce1623462ea860</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>lastPartons</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>db2822ff71c930f1b34e78c444fdbc30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastPartons</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>fd6c5004158c64dfe1b3410bfce59511</anchor>
      <arglist>(PPair)</arglist>
    </member>
    <member kind="function">
      <type>tSubProPtr</type>
      <name>subProcess</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>f0a6398e20ff52707daacdbccd92bdaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subProcess</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>d793602548dd5cecab61873c4ea0d090</anchor>
      <arglist>(tSubProPtr)</arglist>
    </member>
    <member kind="function">
      <type>const PBIPair &amp;</type>
      <name>partonBinInstances</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>1938d9da06fbc9a6a1907d58dc66c673</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>lastS</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>d3fa4a840091bce4cbd4fe95040b145d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastS</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>3c3294e83f43030422a2d819a3b89953</anchor>
      <arglist>(Energy2)</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>lastSHat</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>9aded7d640cb661e2c56777c13fdcb01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastSHat</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>3a3c0f01ab3c7c195c2d5538d120b2a0</anchor>
      <arglist>(Energy2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastTau</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>b77c5d28c07c25e4a85418a3d3b934a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastY</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>3c832389e5e50753fc91796aa13c69a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastY</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>65aed2452cd7efe0ad424d83f338e2fc</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastP1</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>5be247e40f15ad9e2b1a4771543c60f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastP2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>b442fc862dcfde24025cb0e830ae4c13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastP1P2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>8ceb5589b8f15eba5b0a0c4562b7661f</anchor>
      <arglist>(pair&lt; double, double &gt;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastL1</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>9dd5bf0076f28302ede5a1cb8a97e832</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastL2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>b8eabdc06f1fdd18d01990ab9cd8aff5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastL1L2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>71e8e007ff55a1ce81585560b538eb78</anchor>
      <arglist>(pair&lt; double, double &gt;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastX1</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>39e8a6e7011ba4c9d5ec7ff21a0b0114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastX2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>afffbec6e9a390ccf4d60374100e4702</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastX1X2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>648a03736b200f561e1cae2fcdfd4273</anchor>
      <arglist>(pair&lt; double, double &gt;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastE1</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>c0242d59685759f64bd2e8c2eb7625c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastE2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>3ee993a511affc1361ecd0ee7fa8788e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastE1E2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>36cfc854ceea8c83b3222932e2b2c329</anchor>
      <arglist>(pair&lt; double, double &gt;)</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>lastScale</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>6558223a3339af1b64983cae363aff8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastScale</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>c9090f43319d96e05f642acafb577e84</anchor>
      <arglist>(Energy2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastAlphaS</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>2b95e8578e10a329dc9c0b6fcf0f96ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastAlphaS</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>18d101be003134b09afda3580ae986c8</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lastAlphaEM</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>ca5a4a903612205849ca82fb23ac8d2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lastAlphaEM</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>2dcdf4077623c2f5bc08f1545d2d2b5c</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>63403c2c34c7dd4ce2692c9c7bf5f9a1</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>fff114414e2d05d1cd8d870757132b46</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>a6bc04e06257e2a98e3f147cef3fe964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartonBinInfo</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>0d953c5f87af42589779f9ddbeee193d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createPartonBinInstances</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>3d7aaf9abb0cfb27a4311eedddd6fb32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>XComb &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>957bf70ce0de88054d178b8974edad74</anchor>
      <arglist>(const XComb &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tEHPtr</type>
      <name>theEventHandler</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>28bef5bd6696445d72ba80c51531ec93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPExtrPtr</type>
      <name>thePartonExtractor</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>b018a05f30c4aaffc673f64aee640f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tCascHdlPtr</type>
      <name>theCKKW</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>7dd29a2a01d9403eae07eebaafd21c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tCutsPtr</type>
      <name>theCuts</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>fcbd1d89a20da766a65f30a33bc73fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPDPair</type>
      <name>theParticles</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>4fec6ecc26a5baf8f22033d8a5b77b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPDPair</type>
      <name>thePartons</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>515d70eee6688df9e1ea65d0a1060544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PBPair</type>
      <name>thePartonBins</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>9e39c794bcef68333fcd21b02f1547ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PBPair</type>
      <name>theParticleBins</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>338a8661eb077ea4628bdc44440e123a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PBIPair</type>
      <name>thePartonBinInstances</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>9eabfe4d7d9c679030142bd0aa1f8e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PPair</type>
      <name>theLastParticles</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>9f895f15083d4b3beec745992f3d6a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PPair</type>
      <name>theLastPartons</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>19fe57a707dd86ae9c0418f729d0c14a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theLastS</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>48dd23c99bb952d734b3b4b3e4806852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theLastSHat</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>2962969043d6436e6438f00d2fe8f5dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theLastY</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>b7d6cc5f247fe5cc03432b60cdebe66b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DPair</type>
      <name>theLastP1P2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>255a36174dba3ab004168538b14be5f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DPair</type>
      <name>theLastL1L2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>0d027b8834f3b8cdd065c9512364c8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DPair</type>
      <name>theLastX1X2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>4e91c59d1a5f996cdc66e9248eb12a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DPair</type>
      <name>theLastE1E2</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>59eaf62d4a3bec16e183209d25878660</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theLastScale</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>1e8603901cc09ac89a0e432f0d88ca56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theLastAlphaS</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>ca21be235952d0ed34f093931f92feea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theLastAlphaEM</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>4df7ea3f8c747672e4b43cc417b58566</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMaxEnergy</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>65bd77f8cc5e1f8297ba280648e25ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DVector</type>
      <name>theMEInfo</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>60f97fa8e89acc642c1270c6e6f7cae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SubProPtr</type>
      <name>theSub</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>d5800e72c6e661d3c887b63491f72d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; XComb &gt;</type>
      <name>initXComb</name>
      <anchorfile>classThePEG_1_1XComb.html</anchorfile>
      <anchor>fe6578cd4eeb76b9a6e32deb346c674d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ZGenerator</name>
    <filename>classThePEG_1_1ZGenerator.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1ZGenerator.html</anchorfile>
      <anchor>ce5c7cad068031fd74e0baf9d6780e09</anchor>
      <arglist>(cPDPtr q1, cPDPtr q2, Energy2 mT2) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ZGenerator.html</anchorfile>
      <anchor>61cd0cf42b40785b91babe741de9377b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; ZGenerator &gt;</type>
      <name>initZGenerator</name>
      <anchorfile>classThePEG_1_1ZGenerator.html</anchorfile>
      <anchor>de46eb0f803656616eb67c37d8c90dee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ClassDocumentationBase</name>
    <filename>classThePEG_1_1ClassDocumentationBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassDocumentationBase</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>2b4a10fba588f452d56d880f765cb3b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>documentation</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>a2b56db94396975166bfda65b8652d6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>modelDescription</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>0a1fed8869ae51d0d5ba39a356244f48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>modelReferences</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>87ff28e86d08788c6ab2772020fcdc0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ClassDocumentationBase</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>7f6b3d6e2e9c3ecafc4727d9497e6de4</anchor>
      <arglist>(string newDocumentation, string newModelDescription, string newModelReferences, const type_info &amp;newTypeInfo)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ClassDocumentationBase</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>8d9975662790743213c870d6d03ce60f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ClassDocumentationBase</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>b3b476c8c566b1791849227901f31032</anchor>
      <arglist>(const ClassDocumentationBase &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ClassDocumentationBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>161edfaf5fdcd31f4de956efe792501a</anchor>
      <arglist>(const ClassDocumentationBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theDocumentation</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>22bc24b9acd531ce9b364df98db5f0d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theModelDescription</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>5640e76b9e2d5b82403fb3c776e34459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theModelReferences</name>
      <anchorfile>classThePEG_1_1ClassDocumentationBase.html</anchorfile>
      <anchor>e07981527620e00908a995bfeef591e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ClassDocumentation</name>
    <filename>classThePEG_1_1ClassDocumentation.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::ClassDocumentationBase</base>
    <member kind="function">
      <type></type>
      <name>ClassDocumentation</name>
      <anchorfile>classThePEG_1_1ClassDocumentation.html</anchorfile>
      <anchor>3235b360579b53c5acc1633c43e2dea1</anchor>
      <arglist>(string newDocumentation, string newModelDescription=&quot;&quot;, string newModelReferences=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassDocumentation</name>
      <anchorfile>classThePEG_1_1ClassDocumentation.html</anchorfile>
      <anchor>851047aee6c747ccc0a62849c87efd0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ClassDocumentation</name>
      <anchorfile>classThePEG_1_1ClassDocumentation.html</anchorfile>
      <anchor>ac3dbc4c411f0da5b343e02ca1424602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ClassDocumentation</name>
      <anchorfile>classThePEG_1_1ClassDocumentation.html</anchorfile>
      <anchor>3eac0ea510351016bcfd7d2437dc3f02</anchor>
      <arglist>(const ClassDocumentation &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ClassDocumentation &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ClassDocumentation.html</anchorfile>
      <anchor>7001647ac7bf350f54e99a16f5b3393a</anchor>
      <arglist>(const ClassDocumentation &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::CommandBase</name>
    <filename>classThePEG_1_1CommandBase.html</filename>
    <base>ThePEG::InterfaceBase</base>
    <member kind="function">
      <type></type>
      <name>CommandBase</name>
      <anchorfile>classThePEG_1_1CommandBase.html</anchorfile>
      <anchor>f5b650f2e12368d140c48cc3e678cadd</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, bool depSafe)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CommandBase</name>
      <anchorfile>classThePEG_1_1CommandBase.html</anchorfile>
      <anchor>bd6e4841afd03a4e2d2ae67207c71d67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>exec</name>
      <anchorfile>classThePEG_1_1CommandBase.html</anchorfile>
      <anchor>972423b65dac1fb7963b3c15f05afc04</anchor>
      <arglist>(InterfacedBase &amp;ib, string action, string arguments) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>doxygenType</name>
      <anchorfile>classThePEG_1_1CommandBase.html</anchorfile>
      <anchor>8c783556a467cac57cee92d07a7b043f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>type</name>
      <anchorfile>classThePEG_1_1CommandBase.html</anchorfile>
      <anchor>d82fc69141d77575ae3571666d5e2075</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>cmd</name>
      <anchorfile>classThePEG_1_1CommandBase.html</anchorfile>
      <anchor>87b02bf61b479da5b332bfb051f2b2ae</anchor>
      <arglist>(InterfacedBase &amp;ib, string c) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Command</name>
    <filename>classThePEG_1_1Command.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::CommandBase</base>
    <member kind="typedef">
      <type>string(T::*)</type>
      <name>ExeFn</name>
      <anchorfile>classThePEG_1_1Command.html</anchorfile>
      <anchor>18b2963bcacde3cc4340b0c21cd769a6</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Command</name>
      <anchorfile>classThePEG_1_1Command.html</anchorfile>
      <anchor>85a95afdedeea290ed759209292dcad9</anchor>
      <arglist>(string newName, string newDescription, ExeFn newExeFn, bool depSafe=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Command</name>
      <anchorfile>classThePEG_1_1Command.html</anchorfile>
      <anchor>340bbf42422e8f9fafe6cef46b6362e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>cmd</name>
      <anchorfile>classThePEG_1_1Command.html</anchorfile>
      <anchor>7cd98fde3ed648b4152aa198e16077c2</anchor>
      <arglist>(InterfacedBase &amp;ib, string) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ExeFn</type>
      <name>theExeFn</name>
      <anchorfile>classThePEG_1_1Command.html</anchorfile>
      <anchor>8378435cf732f73e79f5531890a40c13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::InterfaceBase</name>
    <filename>classThePEG_1_1InterfaceBase.html</filename>
    <base>ThePEG::Named</base>
    <member kind="function">
      <type></type>
      <name>InterfaceBase</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>28f4ab9b313266ffcede7ac949ed7238</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, bool depSafe, bool readonly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InterfaceBase</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>e6c9faa0af895726f51e7401aefdad54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>exec</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>415aab536ac0fc8786d8ba5e284f78c4</anchor>
      <arglist>(InterfacedBase &amp;ib, string action, string arguments) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>type</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>a668585a94d6d4eb8557535b5a275dae</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>cac21ab1de9c804c2007dab180c1d419</anchor>
      <arglist>(InterfacedBase &amp;ib, const TranslationMap &amp;trans, const IVector &amp;defs=IVector()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>ec10c865cc2e35237f0865dfcd4fa49d</anchor>
      <arglist>(const InterfacedBase &amp;is) const </arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>description</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>64c29f54a4fd9c01fbef4f097ecdbcd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>fullDescription</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>daf31b90986c38ea9185e3e48a52478c</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doxygenDescription</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>f341de68c47bdc1bd11bc1476950ef2c</anchor>
      <arglist>(ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>doxygenType</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>e470265f3971138fc42d501be1a9162b</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>className</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>5aee3615539cb56394757b8c98337ebe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dependencySafe</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>5bd9e1cbbce3ac48689738043a4f17b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDependencySafe</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>c8e7ead1db5c74784ef3472548b144af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDependencySensitive</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>81d56d96cc210a9be475efee6cbe3c70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readOnly</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>5a16f75b7829d9e1ab4bc1753a0e7fed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadOnly</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>6a6d35319df353a2e2de654882280a03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadWrite</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>370c1ece809deb7f93e10f960a806272</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>anonymous</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>f94cf09d4c30dc380e10f3fd7cff353d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rank</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>1f26b0657e0b344ce5738677114d5bc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rank</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>07ab421c5eba3ab7660a29d9e162659e</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>NoReadOnly</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>353a8af98b3b438f7633a326309f0735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isDependencySafe</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>a69f512d94752e8431aa105e88511a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isReadOnly</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>7f568dfd951560c59d936d75d52c2b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theDescription</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>9438b163fa576c0c1af2d33876077d6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theClassName</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>08530ed31418b273ceaee42df73e0559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theRank</name>
      <anchorfile>classThePEG_1_1InterfaceBase.html</anchorfile>
      <anchor>1ace17df5c82b3a5d0578951997111a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::RefInterfaceBase</name>
    <filename>classThePEG_1_1RefInterfaceBase.html</filename>
    <base>ThePEG::InterfaceBase</base>
    <member kind="function">
      <type></type>
      <name>RefInterfaceBase</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>99fb83936f8e1f5b789bb4d46b3fdb22</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, string newRefClassName, const type_info &amp;newRefTypeInfo, bool depSafe, bool readonly, bool norebind, bool nullable, bool defnull)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>refClassName</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>9d834b9fca2a1dc94e38f2451939dc03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const type_info &amp;</type>
      <name>refTypeInfo</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>8fd631710274b6c0c1e3e5e1b21c6491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>noRebind</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>385ece19796c7d60239d59e52ac8cc8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoRebind</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>f1cc97df1b0a5de20bd6de67592af831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRebind</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>683fe463c91a6e17c5ef26bd819ac5d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>noNull</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>51836e512a4156b11a7c4f64b11b1cdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNullable</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>794d1205a93e8d50f609288358558cdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNotNullable</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>11546316e3b3bd381005080e5b8dc4cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>defaultIfNull</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>534c1e696f1b8697d76facb2c037ec80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultIfNull</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>b639072ff2b1c591300895403f614745</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoDefaultIfNull</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>dcacd4d2fa9d37f0370b8681cb54415b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theRefClassName</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>668b529267adb208879d709ca501f688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const type_info &amp;</type>
      <name>theRefTypeInfo</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>e01614eb282d2df9ea81eb504bc56910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>dontRebind</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>fd2c738389d7500adffdc9e180a0a9b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isNullable</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>bfe937b492eb6ec4b5b9e45de5cca734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>theDefaultIfNull</name>
      <anchorfile>classThePEG_1_1RefInterfaceBase.html</anchorfile>
      <anchor>4634db8428b362ba1bd7da6dd31b16da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Interfaced</name>
    <filename>classThePEG_1_1Interfaced.html</filename>
    <base>ThePEG::InterfacedBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Interfaced</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>79f924762685eb19ec61ab673da16a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>defaultInit</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>d28122a9545757dde4a7ae3c41d4a5f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>debug</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>459fd4a9bf0692814df8d36effbec0eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PPtr</type>
      <name>getParticle</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>eda34a3eb0f496d099cffe041c4308b6</anchor>
      <arglist>(long) const </arglist>
    </member>
    <member kind="function">
      <type>PDPtr</type>
      <name>getParticleData</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>8f49f5121ba263e47b73bc0a76ce2dee</anchor>
      <arglist>(long) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>used</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>068b72d337e41f0e9cda441b242d8ef3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useMe</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>00ca7fdd300b34d884e4f35ec769f57c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tEGPtr</type>
      <name>generator</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>f8d195042544e4ce24c76e2e67acf7ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>4f1984d82dd000c256acdf4c9f7642a4</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>609c8880ef6d31565f347e2cbad57688</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>7df812e6d136c6ac92dc896311c9f8a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reporeg</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>f902883c29905b116872d412e45b8c13</anchor>
      <arglist>(IBPtr object, string name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setDefaultReference</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>71bea80f5cce9ef77fd9d1b67d1d00c1</anchor>
      <arglist>(PtrT &amp;ptr, string classname, string objectname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Interfaced</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>719af84f5d99e1f6bdd705a56c235660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Interfaced</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>cf499e8e6c9a33997008d65d180353d2</anchor>
      <arglist>(string newName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Interfaced</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>245e49e051ea49456fe57e45afb07413</anchor>
      <arglist>(const Interfaced &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setGenerator</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>e5804b0bcb21ae46e6bf48b4a2383c45</anchor>
      <arglist>(tEGPtr generator)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>registerRepository</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>b3aa2873214285b144819d8d5fdb493a</anchor>
      <arglist>(IBPtr)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>registerRepository</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>775ecbec5879f2595c84fe032e446b90</anchor>
      <arglist>(IBPtr, string newName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setUsed</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>9aada712673c4c264aba0e5b73749acc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>string</type>
      <name>doDefaultInit</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>ba7189d3517f0f09874132cca58d77b1</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Interfaced &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>344df15cba30249254c33f497097aed5</anchor>
      <arglist>(const Interfaced &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tEGPtr</type>
      <name>theGenerator</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>852fe39c85be65ba44610be9bafafbc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>theUseFlag</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>762a686b2f94b07e97867e97e9cbf9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; Interfaced &gt;</type>
      <name>initInterfaced</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>03775102fdb6afde47bdddf4ceeb7e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Repository</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>aeade420d983c3fba7d0098833055006</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>EventGenerator</name>
      <anchorfile>classThePEG_1_1Interfaced.html</anchorfile>
      <anchor>dc3d8a76fa140372d28a5a54560e775b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::InterfacedBase</name>
    <filename>classThePEG_1_1InterfacedBase.html</filename>
    <base>ThePEG::Base</base>
    <base>ThePEG::Named</base>
    <member kind="enumeration">
      <name>InitState</name>
      <anchor>16361e03a20f68bb5a536ea2d007a331</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>initializing</name>
      <anchor>16361e03a20f68bb5a536ea2d007a3317718a7470265817994707343bf503128</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>uninitialized</name>
      <anchor>16361e03a20f68bb5a536ea2d007a3314faf688a4a3502c8205af3c58f211e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>initialized</name>
      <anchor>16361e03a20f68bb5a536ea2d007a3312c8824935fc44cd84843e2066a9e46b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>runready</name>
      <anchor>16361e03a20f68bb5a536ea2d007a33173616ccd109a05111393a010676060b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InterfacedBase</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>016e138f00b112af91507aed22d80abc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>fullName</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>de68d88e72bc00add70c209cd34c643f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>name</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>596b94f81dd68d20783876b444044b32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>path</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>bedaad44d75f887910c79c6728aadb35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>comment</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>cf8fbd4df9be651a66864a027cdefaeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>09c4e3ccb99be61d398041f9905082cb</anchor>
      <arglist>(istream &amp;is)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>1cb219e7a9a83343aeaf034fa5c8b15d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>cd62a6b16ff3099e5be58aa62663e15e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>b6c7a16e1fd2cf948b6c138a07f341fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>preInitialize</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>4d7e4013e46a4169d83f360db2684890</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initrun</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>460dd629f8b2df8e37adf5c734070540</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>fc1ce8f5e2958e54e2828d1e72121b69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>touch</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>a57f8253ae66287e0b3085e3f3376dbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>8bd73ca619829d6264f40e6e5e7e3213</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>14c20faaa5cb0bbd10e1ef64b7edbdd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>InitState</type>
      <name>state</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>3689fa2bf6cc7b016f27a163d8a28353</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>locked</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>c5778c5a4b1a77a09522f4ed0b80d403</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>touched</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>05d9e3dce40d4c77d99ea5f157a817e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>cb5b74e1d7867f7459e6c68397e5376f</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>c47e29404f01948ed2ea9964ecf6cd4f</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>2ca03c71add6d7cb4be123f4f0785309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>a08f695d4589cdff77647307766aa807</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>InterfacedBase</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>7b1c7b7fd4f9df9c46bdb978d5e65e99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>InterfacedBase</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>19d1ed43beb03dc825be770e9a29da6d</anchor>
      <arglist>(string newName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>InterfacedBase</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>d42264e68e3b3cff8ecf4f65f09617f2</anchor>
      <arglist>(const InterfacedBase &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>readSetup</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>b8798794ab96b28af1b97ad947708f1f</anchor>
      <arglist>(istream &amp;is)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>8f826e48e631356d46c46b763197cd0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>04301594d7ed210d95a1216d493f4698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>fab72f4f8d6cc65f3c43a09180d27878</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>0164836af687c43e3f88513f40e47e50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>d0983fad37121c83ff4955430277a4b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>eb1d1a605f44a5c3f874e3c781fe4c53</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>name</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>89940eade020c732ba3285fbe74c5db6</anchor>
      <arglist>(string newName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>a8af4a038e76e51dd1c77b0cd69c2b65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>cf144daad546025ce73c4ad6014f5294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>untouch</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>95f24d1bab934540e0e2ff8baeb7d16c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>string</type>
      <name>addComment</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>62927bef10405490c545b2ff68157665</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>InterfacedBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>a411ed441d7442240f217eb80d8d38d3</anchor>
      <arglist>(const InterfacedBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isLocked</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>ec4d19b5509773463019f318c47f0c3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isTouched</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>47a2f1e24524cb8798f845828befbc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InitState</type>
      <name>initState</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>39d7088f29978d842ba1146f9bc72481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theComment</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>63480c54a44e2a4de0cd696984a68dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; InterfacedBase &gt;</type>
      <name>initInterfacedBase</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>5030f58545d89e9174d24681f095b32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BaseRepository</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>849274371b283f3d2aa8e5f9eddda6f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>EventGenerator</name>
      <anchorfile>classThePEG_1_1InterfacedBase.html</anchorfile>
      <anchor>dc3d8a76fa140372d28a5a54560e775b</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::InterfacedBase::UpdateChecker</class>
    <class kind="struct">ThePEG::InterfacedBase::UpdateMapChecker</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::InterfacedBase::UpdateChecker</name>
    <filename>structThePEG_1_1InterfacedBase_1_1UpdateChecker.html</filename>
    <member kind="function">
      <type></type>
      <name>UpdateChecker</name>
      <anchorfile>structThePEG_1_1InterfacedBase_1_1UpdateChecker.html</anchorfile>
      <anchor>48bd5be6704b9b7db64193cc6a7d8023</anchor>
      <arglist>(bool &amp;touched)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UpdateChecker</name>
      <anchorfile>structThePEG_1_1InterfacedBase_1_1UpdateChecker.html</anchorfile>
      <anchor>dda214618bbdb829e695399936d42db7</anchor>
      <arglist>(const UpdateChecker &amp;uc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structThePEG_1_1InterfacedBase_1_1UpdateChecker.html</anchorfile>
      <anchor>b4d60e0c9c64fc97ae3b23134aac3d93</anchor>
      <arglist>(const ptr &amp;i)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>check</name>
      <anchorfile>structThePEG_1_1InterfacedBase_1_1UpdateChecker.html</anchorfile>
      <anchor>6e96975637e20b2ecee7ffcf44439ec2</anchor>
      <arglist>(tIBPtr, bool &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>bool &amp;</type>
      <name>isTouched</name>
      <anchorfile>structThePEG_1_1InterfacedBase_1_1UpdateChecker.html</anchorfile>
      <anchor>f54532e4f69fb223a65d91fb9bcb0937</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::InterfacedBase::UpdateMapChecker</name>
    <filename>structThePEG_1_1InterfacedBase_1_1UpdateMapChecker.html</filename>
    <member kind="function">
      <type></type>
      <name>UpdateMapChecker</name>
      <anchorfile>structThePEG_1_1InterfacedBase_1_1UpdateMapChecker.html</anchorfile>
      <anchor>811951276586e8ae46ca045c8e5efd86</anchor>
      <arglist>(bool &amp;touched)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UpdateMapChecker</name>
      <anchorfile>structThePEG_1_1InterfacedBase_1_1UpdateMapChecker.html</anchorfile>
      <anchor>59a108855bbf8aad50d930b674414367</anchor>
      <arglist>(const UpdateMapChecker &amp;uc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structThePEG_1_1InterfacedBase_1_1UpdateMapChecker.html</anchorfile>
      <anchor>555d8fe2d8329363b873aed31fdcfdf9</anchor>
      <arglist>(const ref &amp;i)</arglist>
    </member>
    <member kind="variable">
      <type>bool &amp;</type>
      <name>isTouched</name>
      <anchorfile>structThePEG_1_1InterfacedBase_1_1UpdateMapChecker.html</anchorfile>
      <anchor>220b55a5e18f2ba825f72b3055466dba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ParameterBase</name>
    <filename>classThePEG_1_1ParameterBase.html</filename>
    <base>ThePEG::InterfaceBase</base>
    <member kind="function">
      <type></type>
      <name>ParameterBase</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>1e440c3776cc8ad6dbf1508a73257cd6</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, bool depSafe, bool readonly, int limits)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterBase</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>3967de31f01b4601374d53fd283801b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>exec</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>9acef14ced96507a0e373c592c4ca7fa</anchor>
      <arglist>(InterfacedBase &amp;ib, string action, string arguments) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>fullDescription</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>539347503beb104676be1fec2f32e8ab</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>d69b41890ec8cec68c239f6b9f8057fd</anchor>
      <arglist>(InterfacedBase &amp;ib, string) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>minimum</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>e1b137f24f738046a89342fbebd7b66c</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>maximum</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>725b967e16d555566f966af81054e1e9</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>e684382c2a012de0a0b3843ff9bfb013</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>def</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>74d18556a09bf3baeedb295789c8539e</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDef</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>2a69e142a0cecf30272678e7315954be</anchor>
      <arglist>(InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>limited</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>5ae40e75e1ed3b79d0583831f074c6cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>upperLimit</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>16949f77605c5d06067bf723bc3008ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lowerLimit</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>ec84712ed98affbc810035efed97a20a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLimited</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>09e8c7fb6f39396cc037290195c0c6d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnlimited</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>f19360bb1b607a2ffaeb7b467731cf53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>limit</name>
      <anchorfile>classThePEG_1_1ParameterBase.html</anchorfile>
      <anchor>945bd9c8859d37acbfc3ceea6177053d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ParameterTBase</name>
    <filename>classThePEG_1_1ParameterTBase.html</filename>
    <templarg>Type</templarg>
    <base>ThePEG::ParameterBase</base>
    <member kind="function">
      <type></type>
      <name>ParameterTBase</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>3e2326ae0d26ab6fc5ea6397995d3e55</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, Type newUnit, bool depSafe, bool readonly, int limits)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterTBase</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>8642cf0db3c81063fa53cecb0a6d765b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>type</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>f286f281228e55b64478172131ee0a00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>c6636a541af8ff6c2f309af437c1d180</anchor>
      <arglist>(InterfacedBase &amp;ib, string newValue) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>tset</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>38d45c13481f74a5ab93eb2a0cc5228b</anchor>
      <arglist>(InterfacedBase &amp;ib, Type) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>efa4ce8ea3683ad2cc691cdfbb59376c</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>tget</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>e7f36096b904b25961e3903ffb0c5603</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>minimum</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>8cd0ddce192e39968e2b10631744de9c</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>tminimum</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>880bc8ad5c0a38d4b599ab9c2d4b2ef7</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>maximum</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>50256a72dde6508bdcdf9370d40b2a5b</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>tmaximum</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>3647853c2d0ee9dfecbcf52c8d783459</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>def</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>6c76b63cba3ea919ec7d4fa7e3c994c1</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>tdef</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>d3cb1a4189bf8eafb5322c26cf1f7cd2</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDef</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>57469fc92b68c5cc46e3ee6ac1142ae4</anchor>
      <arglist>(InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>unit</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>349461af6242794171a92886cd693e14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unit</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>3280f10d803872c099b3ae45862c6aaf</anchor>
      <arglist>(Type u)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>doxygenType</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>4122ca364e10556e076527eecf9c183f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>putUnit</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>0032d020ba66bd6e0923dd55c9cea6a9</anchor>
      <arglist>(ostream &amp;, Type val) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Type</type>
      <name>theUnit</name>
      <anchorfile>classThePEG_1_1ParameterTBase.html</anchorfile>
      <anchor>330af81c76804dd4b4077e6c10493deb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Parameter</name>
    <filename>classThePEG_1_1Parameter.html</filename>
    <templarg>T</templarg>
    <templarg>Type</templarg>
    <base>ThePEG::ParameterTBase</base>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>SetFn</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>d0cb046430730cfdd98f70d45aa2eff6</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="typedef">
      <type>Type(T::*)</type>
      <name>GetFn</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>d52fc656bcf786dc4ede7ba18bad48a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>Type T::*</type>
      <name>Member</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>cee0d1a0a87317a44da59987f340331f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameter</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>7e10ab09a5ec635114c25aac8332b557</anchor>
      <arglist>(string newName, string newDescription, Member newMember, Type newDef, Type newMin, Type newMax, bool depSafe=false, bool readonly=false, bool limits=true, SetFn newSetFn=0, GetFn newGetFn=0, GetFn newMinFn=0, GetFn newMaxFn=0, GetFn newDefFn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameter</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>1307a7d0979398a1912d67fb16f981f5</anchor>
      <arglist>(string newName, string newDescription, Member newMember, Type newUnit, Type newDef, Type newMin, Type newMax, bool depSafe=false, bool readonly=false, bool limits=true, SetFn newSetFn=0, GetFn newGetFn=0, GetFn newMinFn=0, GetFn newMaxFn=0, GetFn newDefFn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameter</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>88aeef0655b1f6b64a8bfe60436b3dc1</anchor>
      <arglist>(string newName, string newDescription, Member newMember, Type newDef, Type newMin, Type newMax, bool depSafe=false, bool readonly=false, int limits=Interface::limited, SetFn newSetFn=0, GetFn newGetFn=0, GetFn newMinFn=0, GetFn newMaxFn=0, GetFn newDefFn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameter</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>d4f058d8e5f8a01c8d0ce2b9a43975b6</anchor>
      <arglist>(string newName, string newDescription, Member newMember, Type newUnit, Type newDef, Type newMin, Type newMax, bool depSafe=false, bool readonly=false, int limits=Interface::limited, SetFn newSetFn=0, GetFn newGetFn=0, GetFn newMinFn=0, GetFn newMaxFn=0, GetFn newDefFn=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Parameter</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>330f91450b2e526cb72b376653341993</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tset</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>d6de26a954d7762d99ac19b0d71a786a</anchor>
      <arglist>(InterfacedBase &amp;ib, Type val) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>tget</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>e5c7fa5e11c5b3190931c32eefa8ea78</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>tminimum</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>b3f9144fc5af8c779f1e7dabb6cc90dc</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>tmaximum</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>5e64e03c82ee4ee2403bb1ec53b559c3</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>tdef</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>0b3a14f9f28515ac5798c3e68721bfb5</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSetFunction</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>a7f79f08320a2f6061f820ec5f18c54b</anchor>
      <arglist>(SetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGetFunction</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>a95e8c98c93d724ce4b936f87bcbfc29</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultFunction</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>797aa0abfc0a92062cb597910db0bdcb</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinFunction</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>e70b61a92418d2b1260da3a3d6d52517</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxFunction</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>a869b65962f6d75da4d28a02ec53aaa5</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doxygenDescription</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>fdd86795383b2f9abd51defc58ab347c</anchor>
      <arglist>(ostream &amp;stream) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Member</type>
      <name>theMember</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>8884e820a059dd5fc901f0bc51d06cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Type</type>
      <name>theDef</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>e9493758d9fe1b3fcaf76abded4a29b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Type</type>
      <name>theMin</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>f738be5265be10d93dcee03a34f35758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Type</type>
      <name>theMax</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>bfd40e5f7f34bc00affe8387a057b7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SetFn</type>
      <name>theSetFn</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>4d6f5636f82c0c0bbe7a039c12c7bcc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theGetFn</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>8e0629ed0ce0b120a6e07ba705c82e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theDefFn</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>4f5520114fe54a1c0420ada758cae7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theMinFn</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>cceefb9d99efd4ca2535cb1e2b17bf56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theMaxFn</name>
      <anchorfile>classThePEG_1_1Parameter.html</anchorfile>
      <anchor>6e3f571403995ae74713f1e621772266</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ParameterTBase&lt; string &gt;</name>
    <filename>classThePEG_1_1ParameterTBase_3_01string_01_4.html</filename>
    <base>ThePEG::ParameterBase</base>
    <member kind="enumeration">
      <name>FileType</name>
      <anchor>4a7e5a45e87992d0c665d53e7837e14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoFile</name>
      <anchor>4a7e5a45e87992d0c665d53e7837e14bcdd9f238f058300e308ab9e6bf92bf7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>File</name>
      <anchor>4a7e5a45e87992d0c665d53e7837e14b728abd81bf767777720ef2c7aa327b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Directory</name>
      <anchor>4a7e5a45e87992d0c665d53e7837e14bf45f18b15a9bdcb692eb30d46abfcf9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterTBase</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>da22daa55cbcd964594a452c0546970a</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, bool depSafe, bool readonly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterTBase</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>c1f345992150af2f00f2687872d47e95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>type</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>6f07fdba4640051f02183dfcbda8d40e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fileType</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>3ec606daf436377bb44ada4ee65a860c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>directoryType</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>d06bd8e77477b3983d0e86217960254d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>file</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>fdf24cf9de7c2ad0de7a03ecbb33c97f</anchor>
      <arglist>(FileType t)</arglist>
    </member>
    <member kind="function">
      <type>FileType</type>
      <name>file</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>f401c0fbed122be71ef4fb167946b2ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>6b8b4fcbca0a3fcc6c5004c4df7b8956</anchor>
      <arglist>(InterfacedBase &amp;ib, string newValue) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>tset</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>5f0faa50223b45d80d959b941afe7571</anchor>
      <arglist>(InterfacedBase &amp;ib, string) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>24f2109619c725fcdca46510ec84f053</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>tget</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>528ff5c3913fa7f42077c80c829745c9</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>minimum</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>156479525d92d5b3971bb9c10cd7a5bc</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>maximum</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>f8dd57fbf6c9c250ab1b53476ffc0467</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>def</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>0aa7c1edebb18b1aa3127af813b6260d</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>tdef</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>f3d563c1a055f654f71e9288e0a24718</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDef</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>e36bc080a50caee9bcbdbd282133216b</anchor>
      <arglist>(InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>doxygenType</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>4cfbb1db178926a2e6470f89aa892cb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FileType</type>
      <name>isFileType</name>
      <anchorfile>classThePEG_1_1ParameterTBase_3_01string_01_4.html</anchorfile>
      <anchor>a93c309f6680ecaf28d2c35c6bb413cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Parameter&lt; T, string &gt;</name>
    <filename>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::ParameterTBase&lt; string &gt;</base>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>SetFn</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>b4117f794808dc6389be6e36aa1fa600</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="typedef">
      <type>string(T::*)</type>
      <name>GetFn</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>0e37012b082cf0e80a2ec3d58c322f80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>string T::*</type>
      <name>Member</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>cba6026c8bc37636c2ecb4280dfa8e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameter</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>40e42a333901c3340a94fb92fd3bbac7</anchor>
      <arglist>(string newName, string newDescription, Member newMember, string newDef, bool depSafe=false, bool readonly=false, SetFn newSetFn=0, GetFn newGetFn=0, GetFn newDefFn=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Parameter</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>50407f32a0ea7fc06cb50090292a4491</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tset</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>6c4c8399df0a3c0f06e3113a83d050c1</anchor>
      <arglist>(InterfacedBase &amp;ib, string val) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>tget</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>4f2944499579d33cd646962321ce58b9</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>tdef</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>6ede7c9efbd7e0bf8a74d19cbfe5ff50</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSetFunction</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>7f2b455b7e4e035ea39161d5218afa9d</anchor>
      <arglist>(SetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGetFunction</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>4fc154ead1361552a6bc8296d8dde387</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultFunction</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>3d185ce5970b34383a88777a6b3eb3a2</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doxygenDescription</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>e7fbf58db8e31268c909f8c9ba5bf0a3</anchor>
      <arglist>(ostream &amp;stream) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Member</type>
      <name>theMember</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>8756182b8849c3645c9d690b83fafbb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theDef</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>eca6dfc16ca5f543e7f9c7b345ac89fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SetFn</type>
      <name>theSetFn</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>5d27b3f55f52e2b8fade332a086744fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theGetFn</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>b0521ff6b51a87bef81c7fd3ade59405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theDefFn</name>
      <anchorfile>classThePEG_1_1Parameter_3_01T_00_01string_01_4.html</anchorfile>
      <anchor>1857060a156c9f50342bfd87aff2b96e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ParVectorBase</name>
    <filename>classThePEG_1_1ParVectorBase.html</filename>
    <base>ThePEG::InterfaceBase</base>
    <member kind="typedef">
      <type>vector&lt; string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>76506c9d1cd5a6c9f8c02c8280f02baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParVectorBase</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>ca1a8110938a10c370344682866480ce</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, int newSize, bool depSafe, bool readonly, int limits)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParVectorBase</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>06f6c0fdf51ad1a197eb01cf26c4bb61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>exec</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>1299fb0ae270dc8be151fb6cd82bd95a</anchor>
      <arglist>(InterfacedBase &amp;, string action, string arguments) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>fullDescription</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>bdb2e61f3824989a535b55389f1e1f73</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>75f6a47afcdea476990a108b67373985</anchor>
      <arglist>(InterfacedBase &amp;ib, string val, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insert</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>9ecaed6b132e5b20d91d710bfad636cd</anchor>
      <arglist>(InterfacedBase &amp;ib, string val, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>erase</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>f44b6261f2384b0ab0528b233ddea703</anchor>
      <arglist>(InterfacedBase &amp;ib, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual StringVector</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>f138a7f273c87641416762ce981866a6</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>minimum</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>b389a7db34ec756ad9f45d5daddae075</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>maximum</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>e09c5807b7b8d914eda68d06cb4154fb</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>def</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>ff6d17f94528c6e264afddc5b720af7a</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual string</type>
      <name>def</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>e42ddb5e28a2cd9edce767a14f812fb4</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDef</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>e8252b224802dd1498a00ed33b3e7385</anchor>
      <arglist>(InterfacedBase &amp;ib, int i) const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>limited</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>dc1163755310c673abb2886bc9fce1ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>upperLimit</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>8dd4da1685ad9e11c84b3c21a6b7ef2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lowerLimit</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>323eaaad63be7a031d934c6d8ff940fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLimited</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>abddc0970f9d16eb55107749d2ec19fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnlimited</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>67be91b1b6d93a75a8fd629d544ddca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>172abaa4928ee930dbc6f7d57777765e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>3479d23dbb60dbee8366cf0937365d90</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVariableSize</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>426fafbb666084e4ae04b3b7e5edf281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>limit</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>6ddfdf9eeb1cc64c71ddd16e892f3d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theSize</name>
      <anchorfile>classThePEG_1_1ParVectorBase.html</anchorfile>
      <anchor>1531c1f5b8e72e40d9ff45a2c04e3ace</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ParVectorTBase</name>
    <filename>classThePEG_1_1ParVectorTBase.html</filename>
    <templarg>Type</templarg>
    <base>ThePEG::ParVectorBase</base>
    <member kind="typedef">
      <type>vector&lt; Type &gt;</type>
      <name>TypeVector</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>e0a1e17a8ea412cc5f19a2ab8f542fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParVectorTBase</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>5a4969d7d08a00e7662bce67900069d0</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, Type newUnit, int newSize, bool depSafe, bool readonly, int limits)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParVectorTBase</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>f7cec3e83c5a36ce9934d258d7714f1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>type</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>c9cda4734e6641e7ae7fa76559fe6c9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>doxygenType</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>e9566c2ad963b8a0873faedd4f34a7fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>fullDescription</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>3530d15fcc0cf304414294f15cbe251c</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>cfdc9fe3d0b50f84ea952fdced93693a</anchor>
      <arglist>(InterfacedBase &amp;ib, string val, int i) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>tset</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>22d5c03ee9ff4049bac0681b2ef1af7d</anchor>
      <arglist>(InterfacedBase &amp;ib, Type val, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insert</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>17be23d33405b1c80399e29f8f22c60b</anchor>
      <arglist>(InterfacedBase &amp;ib, string val, int i) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>tinsert</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>0db05f4f14aba335214382563051a1d3</anchor>
      <arglist>(InterfacedBase &amp;ib, Type val, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StringVector</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>ee6971b49a2d7da190f5614d24404e89</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TypeVector</type>
      <name>tget</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>169c90f769a0e281d291e880352ecf39</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>minimum</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>03966bf44644dbb670e4b545a18164d5</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>tminimum</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>22823e58857d31f0f39ae1c0dde33527</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>maximum</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>feaa5cf74a2ce94e9aab9a3838c7dcec</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>tmaximum</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>55881137314c6afa384a33638d573363</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>def</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>f47848914cc293fddef518b86f5791aa</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>tdef</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>f78c15c4c2d29601da4b652089ffa137</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>def</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>0ee442ef1ed2c8d328e5d58bf5a77b96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>tdef</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>e08eb34710dc4522d1eb49d8e26cd47b</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDef</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>dfd34edee521aac3bb678d3e2393c2ad</anchor>
      <arglist>(InterfacedBase &amp;ib, int i) const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>unit</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>918928dae04aa6b203e5575efa0416a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unit</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>4eb0e5fe9488157c4c4e835b0c89ece9</anchor>
      <arglist>(Type u)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>putUnit</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>3dc899f0c091a7418dc75e7f3ba03671</anchor>
      <arglist>(ostream &amp;, Type val) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Type</type>
      <name>theUnit</name>
      <anchorfile>classThePEG_1_1ParVectorTBase.html</anchorfile>
      <anchor>7e9f2913a28d8812a94a3068bd434b89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ParVector</name>
    <filename>classThePEG_1_1ParVector.html</filename>
    <templarg>T</templarg>
    <templarg>Type</templarg>
    <base>ThePEG::ParVectorTBase</base>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>SetFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>9ce58aa3c6e18389eb43bbedbf33061f</anchor>
      <arglist>(Type, int)</arglist>
    </member>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>InsFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>cd242fdcb494af78221ce230bfba6cd2</anchor>
      <arglist>(Type, int)</arglist>
    </member>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>DelFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>47e5b01119649aa36a6edfd1280a99f8</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; Type &gt;</type>
      <name>TypeVector</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>64562a8f5c5e1618d286d14d4eb19d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TypeVector(T::*)</type>
      <name>GetFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>f20914636dc686fb723e7987a1d163c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>dc8545b2d8f349d2aa166c6bb4bd4283</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringVector(T::*)</type>
      <name>StringGetFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>a7ba89b79578d8ed8503ae76c8300935</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>Type(T::*)</type>
      <name>DefFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>3d2ce0e8430a6cbf678d7addd06202da</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="typedef">
      <type>TypeVector T::*</type>
      <name>Member</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>5951e8269cbba3d477e602df91fa95ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParVector</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>fe5f5d20ebd451dfcd6e930f43ba38fd</anchor>
      <arglist>(string newName, string newDescription, Member newMember, int newSize, Type newDef, Type newMin, Type newMax, bool depSafe=false, bool readonly=false, bool limits=true, SetFn newSetFn=0, InsFn newInsFn=0, DelFn newDelFn=0, GetFn newGetFn=0, DefFn newDefFn=0, DefFn newMinFn=0, DefFn newMaxFn=0, StringGetFn newStringGetFn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParVector</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>182fc97e4c9e16c40657ce02e594281b</anchor>
      <arglist>(string newName, string newDescription, Member newMember, Type newUnit, int newSize, Type newDef, Type newMin, Type newMax, bool depSafe=false, bool readonly=false, bool limits=true, SetFn newSetFn=0, InsFn newInsFn=0, DelFn newDelFn=0, GetFn newGetFn=0, DefFn newDefFn=0, DefFn newMinFn=0, DefFn newMaxFn=0, StringGetFn newStringGetFn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParVector</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>f268c18e61fdb1baf6e0b485ba7a4031</anchor>
      <arglist>(string newName, string newDescription, Member newMember, int newSize, Type newDef, Type newMin, Type newMax, bool depSafe=false, bool readonly=false, int limits=Interface::limited, SetFn newSetFn=0, InsFn newInsFn=0, DelFn newDelFn=0, GetFn newGetFn=0, DefFn newDefFn=0, DefFn newMinFn=0, DefFn newMaxFn=0, StringGetFn newStringGetFn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParVector</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>eb5232c32c981835d922a31237762117</anchor>
      <arglist>(string newName, string newDescription, Member newMember, Type newUnit, int newSize, Type newDef, Type newMin, Type newMax, bool depSafe=false, bool readonly=false, int limits=Interface::limited, SetFn newSetFn=0, InsFn newInsFn=0, DelFn newDelFn=0, GetFn newGetFn=0, DefFn newDefFn=0, DefFn newMinFn=0, DefFn newMaxFn=0, StringGetFn newStringGetFn=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tset</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>66061875fafd1e7af30609a9d5aee6ed</anchor>
      <arglist>(InterfacedBase &amp;ib, Type val, int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tinsert</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>58ac9c327a9943f85652ef07de643608</anchor>
      <arglist>(InterfacedBase &amp;ib, Type val, int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>erase</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>b7555fe6220c8fb3501d6b6b3f59af31</anchor>
      <arglist>(InterfacedBase &amp;ib, int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StringVector</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>cf6e27faa8605f3547572a230b0c95ef</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypeVector</type>
      <name>tget</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>3872179907178a2f8706fdf2d7cb9113</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>tminimum</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>c6cd594eb819467b531022e1f7d352c9</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>tmaximum</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>d213e7ac51123d4db0bc00f75aae95bc</anchor>
      <arglist>(const InterfacedBase &amp;ib, int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>tdef</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>01556f73fb072e5206aec80058c727e4</anchor>
      <arglist>(const InterfacedBase &amp;, int) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>tdef</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>cfeda62a2fc62786f2ff6ac09c8b53bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSetFunction</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>ecae4fc40b38e64a381c0e206835b5aa</anchor>
      <arglist>(SetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInsertFunction</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>19eb2e654e851012de91703a563be8bf</anchor>
      <arglist>(InsFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGetFunction</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>642a5c25eb6c1f853b2730dd26482464</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEraseFunction</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>f53305bd5e08e79ab5391daa0fa93b22</anchor>
      <arglist>(DelFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultFunction</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>b8706eb413455250505a03d9c9a97b19</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinFunction</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>124810cd185a1667242560399869c447</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxFunction</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>9c03af1ee47d1a0af3b2b065a7e748a3</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringGetFunction</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>2fff30bfe9ca0217a76b7ffd302ee667</anchor>
      <arglist>(StringGetFn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doxygenDescription</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>fb4293e865d7ab44840b79518387a940</anchor>
      <arglist>(ostream &amp;stream) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Member</type>
      <name>theMember</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>4f5e0f5482a5900c064fdbfbef284e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Type</type>
      <name>theDef</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>03643b46aca6878da8e3c3cb7043c953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Type</type>
      <name>theMin</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>c486b4b9c7007f9aa3efa309188d8fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Type</type>
      <name>theMax</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>b4ea8f35b4eff3c452f37dcf936abf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SetFn</type>
      <name>theSetFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>c9b3931085af919be78fae7d33c635f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InsFn</type>
      <name>theInsFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>895af85d5abed7185bc9a5cb4399bf06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DelFn</type>
      <name>theDelFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>79e94358d76eca1ddaba2e999444331d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theGetFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>26a944dc538b20754dfd9d7f0e84eeec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DefFn</type>
      <name>theDefFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>75c05cc0b9501781cd9ffbb7a9adfbda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DefFn</type>
      <name>theMinFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>11a446da0ef2cb24112bbf8097724719</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DefFn</type>
      <name>theMaxFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>99730f01255d0284ed089d7486dbd5c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StringGetFn</type>
      <name>theStringGetFn</name>
      <anchorfile>classThePEG_1_1ParVector.html</anchorfile>
      <anchor>e8fca5172df2f85e8acd1807bd7c1e3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ReferenceBase</name>
    <filename>classThePEG_1_1ReferenceBase.html</filename>
    <base>ThePEG::RefInterfaceBase</base>
    <member kind="function">
      <type></type>
      <name>ReferenceBase</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>a1e0dcdce697154bbd36270983b8135e</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, string newRefClassName, const type_info &amp;newRefTypeInfo, bool depSafe, bool readonly, bool norebind, bool nullable, bool defnull)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReferenceBase</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>97d7f0d86c13ea04059d09724242982e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>exec</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>2e1c4415a9244fdef3fc76345fe6156a</anchor>
      <arglist>(InterfacedBase &amp;ib, string action, string arguments) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>fullDescription</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>d27888198c624a9eb0d23d70a56e3695</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>type</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>d9d8f1fdf36d1bf32707351fa9c0ebfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>doxygenType</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>b631c76d296e75e5b4e325fe871c715a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>e669d63474c2bc71d19a0ccd86533b5a</anchor>
      <arglist>(InterfacedBase &amp;ib, IBPtr ip, bool chk=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IBPtr</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>5cb454f81744eb62daec923edbdac52b</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>1d0c1a00d2cf1429a75ea634e383f897</anchor>
      <arglist>(const InterfacedBase &amp;ib, cIBPtr ip) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>1c0009fda7d763d79bbcbc74757baa83</anchor>
      <arglist>(InterfacedBase &amp;ib, const TranslationMap &amp;trans, const IVector &amp;defs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ReferenceBase.html</anchorfile>
      <anchor>030070dfb38a57cfc95e5c0c29f50e23</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Reference</name>
    <filename>classThePEG_1_1Reference.html</filename>
    <templarg>T</templarg>
    <templarg>R</templarg>
    <base>ThePEG::ReferenceBase</base>
    <member kind="typedef">
      <type>Ptr&lt; R &gt;::pointer</type>
      <name>RefPtr</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>ae57894abefd527c2818d66b9feb93d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; R &gt;::const_pointer</type>
      <name>cRefPtr</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>57e7177325f447e27d87cb9cd25256e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>SetFn</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>18f4433d586d7ff3b371a3c4e35124a1</anchor>
      <arglist>(RefPtr)</arglist>
    </member>
    <member kind="typedef">
      <type>bool(T::*)</type>
      <name>CheckFn</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>f6bb1045797394a57ec9fffb48718e6f</anchor>
      <arglist>(cRefPtr) const </arglist>
    </member>
    <member kind="typedef">
      <type>RefPtr(T::*)</type>
      <name>GetFn</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>13197420cba711ab989eabec96891e37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>RefPtr T::*</type>
      <name>Member</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>e5ff005f1838faca5787e715e2dbf208</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>0d54fc8b5476ac90bfb0bb968527e3b0</anchor>
      <arglist>(string newName, string newDescription, Member newMember, bool depSafe=false, bool readonly=false, bool rebind=true, bool nullable=true, SetFn newSetFn=0, GetFn newGetFn=0, CheckFn newCheckFn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>ebb1bf093afb6bd780c881b4549dc1be</anchor>
      <arglist>(string newName, string newDescription, Member newMember, bool depSafe, bool readonly, bool rebind, bool nullable, bool defnull, SetFn newSetFn=0, GetFn newGetFn=0, CheckFn newCheckFn=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>0d9e9825bfcf44e363e2ec43717ab3bf</anchor>
      <arglist>(InterfacedBase &amp;ib, IBPtr ip, bool chk=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>5cbe20efccba02f2bfd33d2db97c70ee</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>8713597b23b64305458813a87efd83fb</anchor>
      <arglist>(const InterfacedBase &amp;ib, cIBPtr newRef) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSetFunction</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>14d2d4bd703762e2d75f083ae43eb0b0</anchor>
      <arglist>(SetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGetFunction</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>7b220d046e2d9a7455d3f3d0575b824a</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckFunction</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>6a8b847dec15ee6d424893c8266d2ec3</anchor>
      <arglist>(CheckFn)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Member</type>
      <name>theMember</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>5f5410f70b912e3ea7430228221d1367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SetFn</type>
      <name>theSetFn</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>08e01d6260273c280de272034e61fe9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theGetFn</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>9dc8ee07a7d8b0409400651683730abe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CheckFn</type>
      <name>theCheckFn</name>
      <anchorfile>classThePEG_1_1Reference.html</anchorfile>
      <anchor>9d1c9e8692ffe6275a716f88406a1be3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::RefVectorBase</name>
    <filename>classThePEG_1_1RefVectorBase.html</filename>
    <base>ThePEG::RefInterfaceBase</base>
    <member kind="function">
      <type></type>
      <name>RefVectorBase</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>b18e4e2a8c271b87481779029036b285</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, string newRefClassName, const type_info &amp;newRefTypeInfo, int newSize, bool depSafe, bool readonly, bool norebind, bool nullable, bool defnull)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefVectorBase</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>5d2dd7e6fa2d988cda2559c936f7616e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>exec</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>e80f5527d1b370613f85699ecd8109ea</anchor>
      <arglist>(InterfacedBase &amp;ib, string action, string arguments) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>fullDescription</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>87630f76be6632aea5aafb7e532c389f</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>type</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>e3374f586ffdd02a56fc24dd2790378d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>doxygenType</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>c5d147c012e5eb50a18bb6f245c84b8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>386cdf401288c5e8eb6cd7301d61e24d</anchor>
      <arglist>(InterfacedBase &amp;ib, IBPtr ip, int i, bool chk=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insert</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>92242082d41a6234a6f907e15c2de439</anchor>
      <arglist>(InterfacedBase &amp;ib, IBPtr ip, int i, bool chk=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>erase</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>260d11d45a91a22122deceb5c91a9ddf</anchor>
      <arglist>(InterfacedBase &amp;ib, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IVector</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>6818dd4ed670e92633bed6c865e2f228</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>a96afcf0066d29f5eebc9b041866573c</anchor>
      <arglist>(const InterfacedBase &amp;ib, cIBPtr ip, int i) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>dd81ef9c4eebe1e2bef725bb0257307f</anchor>
      <arglist>(InterfacedBase &amp;ib, const TranslationMap &amp;trans, const IVector &amp;defs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>8cfa029f74629638af1076441d3e8b21</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>98cb03348c316717140bb164fe642aa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>55015066ee58efcd0982fe7f7488d394</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVariableSize</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>445b3b7f43633e703713118410e4ca3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theSize</name>
      <anchorfile>classThePEG_1_1RefVectorBase.html</anchorfile>
      <anchor>45044efca77944ef0dd8b1322831db09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::RefVector</name>
    <filename>classThePEG_1_1RefVector.html</filename>
    <templarg>T</templarg>
    <templarg>R</templarg>
    <base>ThePEG::RefVectorBase</base>
    <member kind="typedef">
      <type>Ptr&lt; R &gt;::pointer</type>
      <name>RefPtr</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>3b1680a241f13df6503e02e26943d93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; R &gt;::const_pointer</type>
      <name>cRefPtr</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>662aacf52d840fadaccf72f6f4bc5f22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>SetFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>830b34b9541ac478a919daef317ba37c</anchor>
      <arglist>(RefPtr, int)</arglist>
    </member>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>InsFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>ac7fa2ff789634473b1551834857d36e</anchor>
      <arglist>(RefPtr, int)</arglist>
    </member>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>DelFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>4fb6c7021b2068adfb0f506c04813a60</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="typedef">
      <type>bool(T::*)</type>
      <name>CheckFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>b7efeed13a3d7dd2ac79989aecb8a7e0</anchor>
      <arglist>(cRefPtr, int) const </arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; RefPtr &gt;(T::*)</type>
      <name>GetFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>d7250299d8c6c3403260474b1fc74c69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; RefPtr &gt; T::*</type>
      <name>Member</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>9f5daedde85fe44b9de807c70be9dc7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefVector</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>6ed381d025b8de5619b46c9074e04cec</anchor>
      <arglist>(string newName, string newDescription, Member newMember, int newSize, bool depSafe=false, bool readonly=false, bool rebind=true, bool nullable=true, SetFn newSetFn=0, InsFn newInsFn=0, DelFn newDelFn=0, GetFn newGetFn=0, CheckFn newCheckFn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefVector</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>9929fd40798e8203a9426f72fa7b847a</anchor>
      <arglist>(string newName, string newDescription, Member newMember, int newSize, bool depSafe, bool readonly, bool rebind, bool nullable, bool defnull, SetFn newSetFn=0, InsFn newInsFn=0, DelFn newDelFn=0, GetFn newGetFn=0, CheckFn newCheckFn=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>06dcebd5a764f6a3f1409270ab75d12f</anchor>
      <arglist>(InterfacedBase &amp;ib, IBPtr ip, int i, bool chk=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insert</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>2939f4d628259f24c6cdb0912ba31b4f</anchor>
      <arglist>(InterfacedBase &amp;ib, IBPtr ip, int i, bool chk=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>erase</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>e572a67cf5bb5131dfef6c2b21939fe9</anchor>
      <arglist>(InterfacedBase &amp;ib, int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IVector</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>cbbd2a2e39c7134a3cf0a610644278ff</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>4f6dd2aec2fa6d9ee4f6f12389c2a7fe</anchor>
      <arglist>(const InterfacedBase &amp;ib, cIBPtr, int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSetFunction</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>a86870a95f9756fc78942f2cda25fbde</anchor>
      <arglist>(SetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInsertFunction</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>213174e6662550b480ef1bc6196eb504</anchor>
      <arglist>(InsFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGetFunction</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>d461460fc0b0ff3c48207a8efc6c4e0b</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEraseFunction</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>e476c75e7b7aa800cb31258d2ae5860c</anchor>
      <arglist>(DelFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckFunction</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>85d0c62a61051a24b900bcdd9a2a6db1</anchor>
      <arglist>(CheckFn)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Member</type>
      <name>theMember</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>f62cb8cd73314e2ceac5543d165d80ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SetFn</type>
      <name>theSetFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>90c7adac14ada08ee250c37627f1a378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InsFn</type>
      <name>theInsFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>5bae8cb11f99910ea19fb4f923393115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DelFn</type>
      <name>theDelFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>a42dc020ff8d6f2561873c275de7b749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theGetFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>b55bd607afed21ca81d67ca09ea0ea20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CheckFn</type>
      <name>theCheckFn</name>
      <anchorfile>classThePEG_1_1RefVector.html</anchorfile>
      <anchor>00129915920a2d44458a4dc122777c29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SwitchOption</name>
    <filename>classThePEG_1_1SwitchOption.html</filename>
    <base>ThePEG::Named</base>
    <member kind="function">
      <type></type>
      <name>SwitchOption</name>
      <anchorfile>classThePEG_1_1SwitchOption.html</anchorfile>
      <anchor>a82e6dd930f801685dd66d242bcbebb1</anchor>
      <arglist>(SwitchBase &amp;theSwitch, string newName, string newDescription, long newValue)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SwitchOption</name>
      <anchorfile>classThePEG_1_1SwitchOption.html</anchorfile>
      <anchor>e03eb6696e57ee494109395222de4c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SwitchOption</name>
      <anchorfile>classThePEG_1_1SwitchOption.html</anchorfile>
      <anchor>653e3c1750ae7af2a6b03506d8bc7c65</anchor>
      <arglist>(const SwitchOption &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>const SwitchOption &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SwitchOption.html</anchorfile>
      <anchor>80c1b6b51e7d30f4b2a17fa86a38f006</anchor>
      <arglist>(const SwitchOption &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>description</name>
      <anchorfile>classThePEG_1_1SwitchOption.html</anchorfile>
      <anchor>dbd943af048b2f0cec5d64f8fe0298b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>value</name>
      <anchorfile>classThePEG_1_1SwitchOption.html</anchorfile>
      <anchor>149d31779e9d6dba2869d8411b332730</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator long</name>
      <anchorfile>classThePEG_1_1SwitchOption.html</anchorfile>
      <anchor>22735d824cbe0618f93594b5614a4955</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theDescription</name>
      <anchorfile>classThePEG_1_1SwitchOption.html</anchorfile>
      <anchor>83312cb98197052d9f20004ae54cd7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theValue</name>
      <anchorfile>classThePEG_1_1SwitchOption.html</anchorfile>
      <anchor>0ba9bcd67f10e623dbfa7fb043d56d1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SwitchBase</name>
    <filename>classThePEG_1_1SwitchBase.html</filename>
    <base>ThePEG::InterfaceBase</base>
    <member kind="typedef">
      <type>map&lt; long, SwitchOption &gt;</type>
      <name>OptionMap</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>dde94c6e185b49ac19a0065195565100</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; string, SwitchOption &gt;</type>
      <name>StringMap</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>e0b07e7c009465b6bdfa63c41535279c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SwitchBase</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>bebd576a9bfe72567e5629204cc55d8b</anchor>
      <arglist>(string newName, string newDescription, string newClassName, const type_info &amp;newTypeInfo, bool depSafe, bool readonly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SwitchBase</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>120e75e5b8b903c6c38ea80f27b8534b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>exec</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>4e77b2712a0174e881c4430a9fdb77e3</anchor>
      <arglist>(InterfacedBase &amp;ib, string action, string arguments) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>fullDescription</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>a16bd15ad68909d3b15b0c64824179c6</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>type</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>502b713a4a75efd21bbfed89620b0845</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>773d4c2e3216bf027e6bdbadb3fd3895</anchor>
      <arglist>(InterfacedBase &amp;ib, long val) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>2fa5ccc4627ad0cd5c271a57497ca7ca</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long</type>
      <name>def</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>6471b530108cc3a4954a4ddd570f1718</anchor>
      <arglist>(const InterfacedBase &amp;ib) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDef</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>a9e7bcf34adca93b95061a1b8a32f44d</anchor>
      <arglist>(InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>acfb060060a05a2355b18dda41bddfee</anchor>
      <arglist>(long val) const </arglist>
    </member>
    <member kind="function">
      <type>const OptionMap &amp;</type>
      <name>options</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>8855d0f94ee13fab29f3ac277625bed5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual string</type>
      <name>doxygenType</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>44d66f75792a4e2d97f2e8c7d9110c2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerOption</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>f2f93238c0aa5141490ca317f5035321</anchor>
      <arglist>(const SwitchOption &amp;o)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OptionMap</type>
      <name>theOptions</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>a28339c22ec9356d072d9755733cc20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StringMap</type>
      <name>theOptionNames</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>e43b9137144d6dbb33c9c8273c67e2bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SwitchOption</name>
      <anchorfile>classThePEG_1_1SwitchBase.html</anchorfile>
      <anchor>4bb361083a829379e3bc6d4e6dc1e71c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Switch</name>
    <filename>classThePEG_1_1Switch.html</filename>
    <templarg>T</templarg>
    <templarg>Int</templarg>
    <base>ThePEG::SwitchBase</base>
    <member kind="typedef">
      <type>void(T::*)</type>
      <name>SetFn</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>a8fee7227ffff6c25bd2927a89266a5a</anchor>
      <arglist>(Int)</arglist>
    </member>
    <member kind="typedef">
      <type>Int(T::*)</type>
      <name>GetFn</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>ed571aad270b3ba7afe3856ded51090c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>Int T::*</type>
      <name>Member</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>4db9ab62932e6dc0d5f1c9d136288c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Switch</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>425315135df73fc50f78a6e0658da2de</anchor>
      <arglist>(string newName, string newDescription, Member newMember, Int newDef, bool depSafe=false, bool readonly=false, SetFn newSetFn=0, GetFn newGetFn=0, GetFn newDefFn=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Switch</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>51ae8bd00614568fce509202c2936c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>8ddee99094479e054ce393e193293eab</anchor>
      <arglist>(InterfacedBase &amp;ib, long val) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>3bd44810a78c5e07d1cb19aa88b93005</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>def</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>01bae3ff64246c9ec832805346ae3cb5</anchor>
      <arglist>(const InterfacedBase &amp;ib) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSetFunction</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>2cf59f92852166174b932e495fc48cd2</anchor>
      <arglist>(SetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGetFunction</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>092932ae9b38338fcceb72210bdab177</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultFunction</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>86a05d79172a9db26adc7493ea09f573</anchor>
      <arglist>(GetFn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doxygenDescription</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>512627791f5c68b7c8479c3532260165</anchor>
      <arglist>(ostream &amp;stream) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Member</type>
      <name>theMember</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>52907d43a163d01116c682eb09335d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Int</type>
      <name>theDef</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>ee7d94e724c8a97cd91e05f3c77b07bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SetFn</type>
      <name>theSetFn</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>d48ade146129baa9febed4100395b0f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theGetFn</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>8a86bc20237e7247bac97c3f0969608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GetFn</type>
      <name>theDefFn</name>
      <anchorfile>classThePEG_1_1Switch.html</anchorfile>
      <anchor>7f530d7ccc26fd5afb036dc48e61dccd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HEPRUP</name>
    <filename>classThePEG_1_1HEPRUP.html</filename>
    <member kind="function">
      <type></type>
      <name>HEPRUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>99bde188a57500648ef166cb2b606e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HEPRUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>b53f3422a28134d1b3c236a86233d814</anchor>
      <arglist>(const HEPRUP &amp;)</arglist>
    </member>
    <member kind="function">
      <type>HEPRUP &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>2c9eedce7b75a43af169445d61da376e</anchor>
      <arglist>(const HEPRUP &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HEPRUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>0994a32cd1409880b45eb0e8dd6608fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>e607ba29305269a5d3bda444b43987ed</anchor>
      <arglist>(int nrup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>e903270e8e7698e57f36ce5a9ed5f29a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>pair&lt; long, long &gt;</type>
      <name>IDBMUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>259197946ac11d7a11bec47898f34531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pair&lt; double, double &gt;</type>
      <name>EBMUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>cadd2d03df2f34f826040e4540c3eb3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pair&lt; int, int &gt;</type>
      <name>PDFGUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>c375e7666f77cc69b2845f527ce9d27b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pair&lt; int, int &gt;</type>
      <name>PDFSUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>c0846584700b070928493b8d40e0c8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>IDWTUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>4b247dfd4dc588dc02d6d2da6585d1da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NPRUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>3d8081aa964dbcc9e6840a761e5b9704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; double &gt;</type>
      <name>XSECUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>74b673fa656c2af0997707fbe40de017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; double &gt;</type>
      <name>XERRUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>42f3ffcbf0e951992bd3b9efc73b4aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; double &gt;</type>
      <name>XMAXUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>74a2f9d361af9679cfedb837c13f2dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt;</type>
      <name>LPRUP</name>
      <anchorfile>classThePEG_1_1HEPRUP.html</anchorfile>
      <anchor>ea04f67452407f33c1cd6906b0f34208</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HEPEUP</name>
    <filename>classThePEG_1_1HEPEUP.html</filename>
    <member kind="function">
      <type></type>
      <name>HEPEUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>ada2fd8af5a43e9b275a1d17f5b5f284</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HEPEUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>7c6c373a627038b5382380435f5fdfe6</anchor>
      <arglist>(const HEPEUP &amp;)</arglist>
    </member>
    <member kind="function">
      <type>HEPEUP &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>e45ceac7220e64455ec73d5dcf67483f</anchor>
      <arglist>(const HEPEUP &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HEPEUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>5df277e51b2372e73f3313eceb31807c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>e4ecae3c56514fd84bb427a35d4f8929</anchor>
      <arglist>(int nup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>9878528e2d813307361e951df8fc1e6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>bc9eed075058ecc459cf7b68127731f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>IDPRUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>8a2c26784d870509aff7357e4847475b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>XWGTUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>e1d5696f2c3e5ecf26a165f70ac29540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pair&lt; double, double &gt;</type>
      <name>XPDWUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>f76072a5007802ab5c9cccd0108376f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SCALUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>4aee78c19d447d27cb0116a7b66e0188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>AQEDUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>4687d683265b1e5e4ab7b8438598baf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>AQCDUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>fb0d85dac9097139bc8695510b1a8d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; long &gt;</type>
      <name>IDUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>f746b165837eb5caa996e4d31890d886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt;</type>
      <name>ISTUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>130bd59865d5c5719fea6050ec424d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; pair&lt; int, int &gt; &gt;</type>
      <name>MOTHUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>594d8e29ef0e79902e3521fb1a13321e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; pair&lt; int, int &gt; &gt;</type>
      <name>ICOLUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>fdd74cea2f8bea4b76fd4defc7af8c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; vector&lt; double &gt; &gt;</type>
      <name>PUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>589b32df2719270995044ce4d0ba5d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; double &gt;</type>
      <name>VTIMUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>cf49a07ec549f560e05969526bee3b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; double &gt;</type>
      <name>SPINUP</name>
      <anchorfile>classThePEG_1_1HEPEUP.html</anchorfile>
      <anchor>190f2b1f1ad178767a2d7d1807e39c15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LesHouchesEventHandler</name>
    <filename>classThePEG_1_1LesHouchesEventHandler.html</filename>
    <base>ThePEG::EventHandler</base>
    <member kind="enumeration">
      <name>WeightOpt</name>
      <anchor>d1dc56273ca081c31eb67efbf7fba7f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>unitweight</name>
      <anchor>d1dc56273ca081c31eb67efbf7fba7f19a271523657d36f47dfdfa5dfc6384e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>unitnegweight</name>
      <anchor>d1dc56273ca081c31eb67efbf7fba7f12472a22215a234877df09b9a220a4fd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>varweight</name>
      <anchor>d1dc56273ca081c31eb67efbf7fba7f161f447f4ec7680ce4702f43757266dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>varnegweight</name>
      <anchor>d1dc56273ca081c31eb67efbf7fba7f17726e885a524637090809406eb70803c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; LesHouchesReaderPtr &gt;</type>
      <name>ReaderVector</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>77bbbd0d749f49e44abe679520462e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompSelector&lt; int, CrossSection &gt;</type>
      <name>ReaderSelector</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>a77ce3114d93153644064709eff194ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>e619e056d29add7d07709a90365c58bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>statistics</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>4526731a90ac289ccdf09c87c5a11b4e</anchor>
      <arglist>(ostream &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>histogramScale</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>15e784f6ca0ef48924d6ce2276e388e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>integratedXSec</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>61029c8a1f8069677213e7b3ea7931b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EventPtr</type>
      <name>generateEvent</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>7803bb29bdfa1d90b0037ac8290b5779</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tCollPtr</type>
      <name>performCollision</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>3366c75e318ca9bf979d5f1d738ad9da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EventPtr</type>
      <name>continueEvent</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>7a501dde9deab923de09bf20317163c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>6323b2018b0045ff9b1f242fd9081704</anchor>
      <arglist>(double weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>4c59d543524b5ba26fc0fb8dbb40be21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>381950d1df83d4bb047c2ce8f96bf31c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increaseMaxXSec</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>874dd07d37254e18fd791fc2ca7c8e61</anchor>
      <arglist>(CrossSection maxxsec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skipEvents</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>0bbd96e701e85288ac41e2c5486e032b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WeightOpt</type>
      <name>weightOption</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>14892d1bf32b8cda884b8a890267f482</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ReaderVector &amp;</type>
      <name>readers</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>a611ca43a11e95b362c66c644e552973</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ReaderSelector &amp;</type>
      <name>selector</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>1db551b1193202ae3730706ae9fb0adb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tLesHouchesReaderPtr</type>
      <name>currentReader</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>7b6aa20c7b0a010da538b9f349e256a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentReader</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>b881884aec0789abe808ba54e36c204c</anchor>
      <arglist>(tLesHouchesReaderPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>47fc1028c95dc85da4bbb5aaa71dcb95</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>beb005a63e4a961b3aade93cfba0e50a</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>b2ec17fc0ec485db0689a56640737bfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ReaderVector &amp;</type>
      <name>readers</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>621e898d78f61ece6c0639bf94eddfa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ReaderSelector &amp;</type>
      <name>selector</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>fe59c09d84a95324d0b627bdeaf15f56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>f703518d54b64408d5fc5eabb18b7ef5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>e33debe5a637f1f4f24286fcec1eece1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>7cbe9d41de131a10944c76a203f44156</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>e1610d2728029290af56d70607317b7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>cfce750b24c932bdc41f3aaa3b6e35df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>c742abf9bc0d1f347ecdd0bdb6dd64eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>03340bf9f7c02f0ca2a7f19af1107aaf</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>0d265ef1cd315d0e202590e76485d76c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XSecStat</type>
      <name>stats</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>ea012889df633849d27d45741f9e6cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XSecStat</type>
      <name>histStats</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>b96d2cc20f69398bc0a784427cd06cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>LesHouchesEventHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>78314ebed8dd2e8372d7e6a6f4a8cb74</anchor>
      <arglist>(const LesHouchesEventHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ReaderVector</type>
      <name>theReaders</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>864f5526c30e2ae84d8fcf4ddfb0588d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ReaderSelector</type>
      <name>theSelector</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>36fac36db315e6b53817693eeaec4ca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WeightOpt</type>
      <name>theWeightOption</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>6d3212e6f75d8234c0ece7778ca85310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tLesHouchesReaderPtr</type>
      <name>theCurrentReader</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>e847d1a5d1ab8ebac3b2eaba276b42cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; LesHouchesEventHandler &gt;</type>
      <name>initLesHouchesEventHandler</name>
      <anchorfile>classThePEG_1_1LesHouchesEventHandler.html</anchorfile>
      <anchor>0ef4100e9fb28c2c081badb16d6c18fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LesHouchesFileReader</name>
    <filename>classThePEG_1_1LesHouchesFileReader.html</filename>
    <base>ThePEG::LesHouchesReader</base>
    <member kind="function">
      <type>string</type>
      <name>filename</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>b7c5a3595d10db31011888a20ae6515a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>file</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>4daf939e41cd2f15c3b395b43872d912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>open</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>50442b96e5c775a6873a400d764bff55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>close</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>0085ed5573f4c638819531a44bebaeff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>doReadEvent</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>a59f506eee568e7cf79349a503bef7ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>c14dcb931f128790371192106ad35deb</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>6ac3250196fb63759cde9c5f554bd016</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>5243a134099f83b4041677d6b9423800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>9d4f5ba1f83d7331a0d42fb664824e53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>4c9d6a67d46519ad05ef0a8e1f8daa18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>5f9cc313b2d90728a7467471ed10d2f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>9faac4e0e2f3fb861456edb9df7c3533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>2ee3a8b2888f1805817ee0938dffa107</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>6f229198e3e31601f39f42cfa383354f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CFileLineReader</type>
      <name>cfile</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>43aab3f17d68a4a44ac8b279b0e29577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>neve</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>48a5914d9f98768b48c9ff671eda6288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>ieve</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>e46c91f7772eba88273a11997e13cbee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>string</type>
      <name>LHFVersion</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>c8e188d65c82e1b53198dc49325b0ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>string</type>
      <name>outsideBlock</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>aabc8a72115d54499503fe6701d420df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>string</type>
      <name>headerBlock</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>f48f1b45e4d017bcc0b4be8002b12f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>string</type>
      <name>initComments</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>fc179334ebaa15859d146f8e6d161943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>map&lt; string, string &gt;</type>
      <name>initAttributes</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>59a80622ae85536c9b45a6f999530589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>string</type>
      <name>eventComments</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>ad913edf0e663561b22654c44a47d275</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>map&lt; string, string &gt;</type>
      <name>eventAttributes</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>519c8dbff1c334d1a7cb8e0321717edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>LesHouchesFileReader &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>bacda3733f84b0da66e58a47efcbb1eb</anchor>
      <arglist>(const LesHouchesFileReader &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FILE *</type>
      <name>theFile</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>7ab9b190e612dbb99616b0526e0505ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theFileName</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>124a8e66c7e62c74add92fb43d9fe92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; LesHouchesFileReader &gt;</type>
      <name>initLesHouchesFileReader</name>
      <anchorfile>classThePEG_1_1LesHouchesFileReader.html</anchorfile>
      <anchor>fe1698f9c30a164b2a55b9b91d5e16e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LesHouchesReader</name>
    <filename>classThePEG_1_1LesHouchesReader.html</filename>
    <base>ThePEG::HandlerBase</base>
    <base>ThePEG::LastXCombInfo</base>
    <member kind="function">
      <type>const PBIPair &amp;</type>
      <name>partonBinInstances</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>48efeecd09985521c60e8d8a089ced8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>beams</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>d902965da6aaa2828d77403f7644622f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PPair &amp;</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>a1c244aa4421f677951a12f4707de299</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PVector &amp;</type>
      <name>outgoing</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>bd02b6fc07c6218f4de063ed1a480c1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PVector &amp;</type>
      <name>intermediates</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>c3e2db7b3f68ce1e3802b54d4a4edb1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxMultCKKW</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>4313b7867d0cf0e87dc354d40bc3ed18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minMultCKKW</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>3f9407ec35c0feeb303276f3c658c038</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>eventSize</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>944672f058bd34807a4b662991367653</anchor>
      <arglist>(int N)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>string</type>
      <name>cacheFileName</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>1a8889b2bdd976c0425d3453700156ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CFile</type>
      <name>cacheFile</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>30c514a8ec7d56eb2df2071c73d313ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>openReadCacheFile</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>c7794d7ebe23eeeb340bc1921bf8d3c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>openWriteCacheFile</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>96bad5862de772b15c3cd21a1744cc11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>closeCacheFile</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>9410b49d7ee724037f2d9dfbd6e10e3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>compressedCache</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>d542131b374b4e272d6bfcbbe32cfd11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>cacheEvent</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>4fc7366748e9657f45a0b358aea7ed4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>uncacheEvent</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>8b4d7745f5ebe482d8913fdf854efc9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reopen</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>bee6e96b3df882015d4ae3e34be4d7cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static char *</type>
      <name>mwrite</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>80eb799f287b71a31712833bf02ef968</anchor>
      <arglist>(char *pos, const T &amp;t, size_t n=1)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static const char *</type>
      <name>mread</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>490cc5039af6f96b52446c566b020aea</anchor>
      <arglist>(const char *pos, T &amp;t, size_t n=1)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>open</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>644a5b64298cf273a22c26ac897d2c64</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>doReadEvent</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>c465abf3b9b3df2dea32df5944a85e73</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>close</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>abdceb8082485f42a70faea25114e0f2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>7559f263d5accdb6026dbe2564e8924c</anchor>
      <arglist>(LesHouchesEventHandler &amp;eh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getEvent</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>1e8c2dd8a4b578fe0b74aa384bc5ae90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>readEvent</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>3ab0819509bb47541a7887f39c00a64d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>skip</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>19168a5d58811029360f8a4d35e23813</anchor>
      <arglist>(long n)</arglist>
    </member>
    <member kind="function">
      <type>tXCombPtr</type>
      <name>getXComb</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>18deb2402d503f585a74634c2b968cf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tSubProPtr</type>
      <name>getSubProcess</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>53885be74eb7ec3890ce0b4ba16bb8f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>scan</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>d0c4621de06ece6a3d5308fda301237e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initStat</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>f57ad769e8ed87cf432f951140a7475e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>3c852ec13ccf2c664952b5c238ccf5ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillEvent</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>6656f0d704a1f33953e22ffa220adea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>58e6890237733c5d0e30e8dba4438b80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>NEvents</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>f9e287bbe60264431409162bdf8c1b4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>currentPosition</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>6d0fc88bb4303a1968ec3350a157d8cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>maxScan</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>97c7467f1d55941ca77400ea9ce3e009</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>active</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>8a3cc59ad9c584b96675078dc0d63413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>weighted</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>825e40df6f2d5481a82830260dd76aec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>negativeWeights</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>10f7e683234d10fcf482a1ec25508a5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const XSecStat &amp;</type>
      <name>xSecStats</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>2937bb2d5610c075c0bcbd320f3cfa2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const StatMap &amp;</type>
      <name>processStats</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>3102966a9e146d421a6c11fd6aff1b81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>07d1d3c392f6faee08ceeac022aac87b</anchor>
      <arglist>(double weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>c75e59a9e678dad638ec522b5c760ef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>a75bbce61d4a0b9a16efde9094887176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increaseMaxXSec</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>bcba7a936927036735fe42519790c263</anchor>
      <arglist>(CrossSection maxxsec)</arglist>
    </member>
    <member kind="function">
      <type>tPExtrPtr</type>
      <name>partonExtractor</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>00844df8e89187f71e9207d07c6e0f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCascHdlPtr</type>
      <name>CKKWHandler</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>ec2d475a4f18b6302f1b89f4d6440acb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PartonPairVec &amp;</type>
      <name>partonBins</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>042a4c59dce3f1db0c42b83a39eaead2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const XCombMap &amp;</type>
      <name>xCombs</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>4c7e71403212163805d7ccd8277738db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Cuts &amp;</type>
      <name>cuts</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>ade7419c6494a3faf0d314f547b36c06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>e26e35150419d699e8c534a49240be61</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>0bc6079cb3e6227584e4104a337f9582</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>f6a2955179f36411a444c38feddf6e08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkPartonBin</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>a1a8d56adf09b9f04e516554c1044b9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>createParticles</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>c7d8ce8ef2dffcdc5953b28559f08d24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tcPBPair</type>
      <name>createPartonBinInstances</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>2dbc6066b70c49e8f59f214988c513e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>createBeams</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>f89522dd0b3bece2f2a83b96a0ec0bbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>connectMothers</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>0eef35b85e6912b00042d23b7ab48123</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>weighted</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>e2efdf0ac3773655798fbe39d6d25223</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>NEvents</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>d26dac778d57f9517018ffab0e4cba4e</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>negativeWeights</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>d6d6efc0b804cdc47f65ecf509ee203e</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>XCombMap &amp;</type>
      <name>xCombs</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>34c79f07c67fd4280b0f09243b6b3aeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>fd546518e9c81b93685911e388ae3b52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>f99ca6a1875e2ee6ec5ad602cc9dc22f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>f2c0f1dee39d10a0d340ccb23541d85e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>f0ae3fedd05c6461d6891bc6ea34206c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>f340dd8b67a268832907b05ef09dbb53</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>225310ad1cc675ac4f7f19fb344cf773</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>preInitialize</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>ae6af844481a2164c2483d985f9eb4eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initPDFs</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>a82d8d5fca1ad95cc766c7a5feb8f080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HEPRUP</type>
      <name>heprup</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>a0849c7b84fb5b445d730b3e22563f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HEPEUP</type>
      <name>hepeup</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>30a783f8fd3d1a319e9cac51f240b34b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tcPDPair</type>
      <name>inData</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>b81977cf22d67bcde512897379d1229b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>pair&lt; PDFPtr, PDFPtr &gt;</type>
      <name>inPDF</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>032bfd8e06303ba40a391c2069a2f3a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>pair&lt; cPDFPtr, cPDFPtr &gt;</type>
      <name>outPDF</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>dc68472ae0ca5d8eaaf3bb2d5068c1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PExtrPtr</type>
      <name>thePartonExtractor</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>e6f88c355c3b8210f3e6827e0ae3cf19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tCascHdlPtr</type>
      <name>theCKKW</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>1fe197d2c01c101c74294efc19708979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PartonPairVec</type>
      <name>thePartonBins</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>037851f98b24b5160d705a49fe720e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XCombMap</type>
      <name>theXCombs</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>721e3046ad89fb09355a237cb03fb44f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CutsPtr</type>
      <name>theCuts</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>2888a4c83cee81fb57c20e0399fb7d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>theNEvents</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>40b510dd4b3d120d49f0ee92fc2944b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>position</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>08370e5f347784dec1631035087a5d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>reopened</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>1588143dc45fbdfd1ba6cdcb6b434d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>theMaxScan</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>c382bdaf08a252f2c630e66b55efa357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>cf5089cc2339ac4a2dcf8f2d0ab47bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isWeighted</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>b5551b05694696870c9c86203eea9716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hasNegativeWeights</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>486a2359dce349bacbe19f11f4adfe9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>string</type>
      <name>theCacheFileName</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>ea59445805194da76dcd2656ddc60802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XSecStat</type>
      <name>stats</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>9a8a102484be9bee7601e16fc9a42c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StatMap</type>
      <name>statmap</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>b08d52c44f7d1f4e17135a9ec7dabc64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PBIPair</type>
      <name>thePartonBinInstances</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>103a6c7e380e193ec26cac50cf5bf83f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ObjectIndexer&lt; long, ColourLine &gt;</type>
      <name>colourIndex</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>ca961a1082064fe1d51ad3b97888bc69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ObjectIndexer&lt; long, Particle &gt;</type>
      <name>particleIndex</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>5d715d5764906a931cbcaf573a6e4688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PPair</type>
      <name>theBeams</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>41427da8286354bb61a036b2dd760f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PPair</type>
      <name>theIncoming</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>4da349467d0f2931507b80823603abe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PVector</type>
      <name>theOutgoing</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>a6479fbda2c68f46aee734abf8d82871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PVector</type>
      <name>theIntermediates</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>d0280ac4c03c71c4bd52894ca9ae2236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CFile</type>
      <name>theCacheFile</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>51bf61d6841d876b13df8f5e00917d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReweightVector</type>
      <name>reweights</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>5055e777e083f7960ee7375dd6513e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReweightVector</type>
      <name>preweights</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>76a4fcccfe3f050341c893b6b714b2e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>preweight</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>b26c03351b4438b07189f1e18a5884ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>reweightPDF</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>065c1821473cb28a4a8479b42f7bcfd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doInitPDFs</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>2ffbfefea12c52826f71d55b05d32612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>theMaxMultCKKW</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>e6431e8a8bd646781799f56f653f0626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>theMinMultCKKW</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>be7bd177165c5782a58bebc1115293f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastweight</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>a5afa96644af6472be0841c31ac7d684</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxFactor</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>b74d17893c80d398fa7bc1af61d68fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>skipping</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>e63cae3b6079d1d348f923ba5ed59667</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>FILE *</type>
      <name>CFile</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>d7cd53215f1a7a6471dc606529e3df8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>map&lt; int, XSecStat &gt;</type>
      <name>StatMap</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>955d0367fded215e5be74f2ee24ad6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>map&lt; tcPBPair, XCombPtr &gt;</type>
      <name>XCombMap</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>4a5c1990315a70ac7ec90356d6af7e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>vector&lt; ReweightPtr &gt;</type>
      <name>ReweightVector</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>7d43aef2738ed5ed121cdcc825b0f7e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setBeamA</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>533fd82ce6e49d9652b58cbe7708ac93</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>long</type>
      <name>getBeamA</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>419ac022cdea92ee568a1ca62d91b32d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setBeamB</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>583e74a65dc4872592322c89d12f0c2e</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>long</type>
      <name>getBeamB</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>ca97301d9d2a10e7fe9898437fb118fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setEBeamA</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>d6f19ee71dcdcbe7378ac063b41f7b57</anchor>
      <arglist>(Energy e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>getEBeamA</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>403bf6617c0533256f95f35ad04ba94d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setEBeamB</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>9e3d9f28447af37b7bcd24ff32cfda90</anchor>
      <arglist>(Energy e)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>getEBeamB</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>b193de2ef5c886a143b1d34df4e290fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setPDFA</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>0466cc9a8368ea7ab97a3e70741a2ea8</anchor>
      <arglist>(PDFPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>PDFPtr</type>
      <name>getPDFA</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>c1b50ff61de57d2868ed641bf0ff8620</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setPDFB</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>7b25751f39aa444837710b3958cf5d89</anchor>
      <arglist>(PDFPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>PDFPtr</type>
      <name>getPDFB</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>17a78231ff5221637ceb9bbaafeacb0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>LesHouchesReader &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>147bccb7d91aa071673a65e7af58c288</anchor>
      <arglist>(const LesHouchesReader &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; LesHouchesReader &gt;</type>
      <name>initLesHouchesReader</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>cd71c1fd0d61b3f418b8a0384883aa1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>LesHouchesEventHandler</name>
      <anchorfile>classThePEG_1_1LesHouchesReader.html</anchorfile>
      <anchor>1efa7a201c19a99b26f21d9f6cedf85e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MadGraphOneCut</name>
    <filename>classThePEG_1_1MadGraphOneCut.html</filename>
    <base>ThePEG::OneCutBase</base>
    <member kind="enumeration">
      <name>CutType</name>
      <anchor>b521978dc64df393e41b0cf52810561e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PT</name>
      <anchor>b521978dc64df393e41b0cf52810561e7b7a24eaa77dd99589dfb4dabd3f7df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ETA</name>
      <anchor>b521978dc64df393e41b0cf52810561e7f109d2ab7f5e33a7dab26fb05af289e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPT</name>
      <anchor>b521978dc64df393e41b0cf52810561e90f7b3a14c389dadbb9b04ce3ed782ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PType</name>
      <anchor>1aed653c3d57a20c9c1d61c75ba475fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JET</name>
      <anchor>1aed653c3d57a20c9c1d61c75ba475fbb536b42867b820f1b67b377d2d9a66c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEP</name>
      <anchor>1aed653c3d57a20c9c1d61c75ba475fb4c9a160cdc1314f3c72cbe5cfc658b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHO</name>
      <anchor>1aed653c3d57a20c9c1d61c75ba475fbac8438c5e84bd2404a8ba302081a886a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOT</name>
      <anchor>1aed653c3d57a20c9c1d61c75ba475fbdc6ade9a4da76f847942923be0fd465e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>minKT</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>4d304f910e2f80348773ae92eeb1b490</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minEta</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>86f6a7bd04161f447aed56c8539beb6e</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>maxEta</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>f1f4b1dafba90369e5bf9fc206a140f3</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>minMaxKT</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>b162e80e23773ba8c8cc4c26dda18a01</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>ca5928049b4f435e2be4a44c93920d63</anchor>
      <arglist>(tcCutsPtr parent, tcPDPtr ptype, LorentzMomentum p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>85b56f17a9c1a70eb2c2728605623608</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>ce0fdd972ca7cce971bcd92bd8f96a60</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>fbd6afa85cc45c240a72d45739624927</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkType</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>211cc425de4584dfbf5b3b99ceaeb857</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>188166446cc2a38db4fb2ef9495584e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>d91e5dc610a3d305a83ba66357da5dfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>aae661a650e4b3fb45e389c5d18c739a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>6c7a1025480ce407033f48cc4ed0bf4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>58a9bd2e4894ee9133e36dc8936c8ad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>db5b2f63f1de20f21a94906b39db98d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>fac0335f7afafba90e9fae4863c4b4b4</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>a6662c9ace6827b508c1e26ac6998828</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MadGraphOneCut &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>37792651c3dc901646c9b7d6a085f641</anchor>
      <arglist>(const MadGraphOneCut &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CutType</type>
      <name>cutType</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>db20c65aa41994d9aa22f97f86f7c1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PType</type>
      <name>particleType</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>ae1937e6c117da8a0a67cf09a2165f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theCut</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>082a1d72514f557e52c02dcbfc0b8395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; MadGraphOneCut &gt;</type>
      <name>initMadGraphOneCut</name>
      <anchorfile>classThePEG_1_1MadGraphOneCut.html</anchorfile>
      <anchor>a2591227767e9ccef10ddc5d1999ada3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MadGraphReader</name>
    <filename>classThePEG_1_1MadGraphReader.html</filename>
    <base>ThePEG::LesHouchesFileReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>open</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>47493afaa014e90d387a6f3598e82307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>scan</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>e5837ce95228a7908fbd0d1a40707b93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>doReadEvent</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>36f387ce9df4538e5813162a68025b4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>089883bee114e1d69fe9cddd0fc28260</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>a29cf16c474e5d57f743bfedc02dd41f</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>3df3a2b07d15bb737928abea7e84e396</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>string</type>
      <name>scanCuts</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>4fee03a43524fa3ae7f3714c02abc254</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>d9ead64f2979acbb39d89cd94a7e690b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>018799a01236301d9412356b412e0386</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>bcc6be0517c50db1d36927dc353577ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>da95784090b85f9cace858dbff815b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CutsPtr</type>
      <name>initCuts</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>81113956a4b85b342e778bad257dd94b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initPDFs</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>2c284d363dee6cd172d0e2bc2232fd3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>preInitialize</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>b25e6f8d012302d7f19ac3bfbcecf604</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>ddb076fd4ce5deba3e6d2240c9d0a400</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>23707fd90d8c974d14629e4c0d782402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>a6b918071b5c49c2d0f1aa82fcf59a0a</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>b338fc7ca1e6fbbc953da15aa1a6f00f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Energy</type>
      <name>fixedScale</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>174fc6d832290753889499d3ca1efba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fixedAEM</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>b279890d37584326836a7bf218898b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>fixedAS</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>acf9eb9b67840e00828a1ea83781641c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>map&lt; string, double &gt;</type>
      <name>cuts</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>85e5b1e8ddd382237d353bc1805c0327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doInitCuts</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>2f9205f88507490972b82c445185a20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>wtfac</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>f04d04f6c056a94b56ca81920ca8eec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>MadGraphReader &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>9db4f08db576032a550c0513391c0dd3</anchor>
      <arglist>(const MadGraphReader &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; MadGraphReader &gt;</type>
      <name>initMadGraphReader</name>
      <anchorfile>classThePEG_1_1MadGraphReader.html</anchorfile>
      <anchor>074544b8ff9d9372f698b1dc23b19998</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::MadGraphReader::WeightedExcetion</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::MadGraphReader::WeightedExcetion</name>
    <filename>structThePEG_1_1MadGraphReader_1_1WeightedExcetion.html</filename>
    <base>ThePEG::Exception</base>
  </compound>
  <compound kind="class">
    <name>ThePEG::MadGraphTwoCut</name>
    <filename>classThePEG_1_1MadGraphTwoCut.html</filename>
    <base>ThePEG::TwoCutBase</base>
    <member kind="enumeration">
      <name>CutType</name>
      <anchor>365737eb92a6246a0f0155ab372f10ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVMASS</name>
      <anchor>365737eb92a6246a0f0155ab372f10ba14041caeae7ecb8e47c87a0d57433bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELTAR</name>
      <anchor>365737eb92a6246a0f0155ab372f10baaf8c515178f73549e4cba16e73932019</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PType</name>
      <anchor>d56f70d4ccfc44beca223e6cd5d4c8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JET</name>
      <anchor>d56f70d4ccfc44beca223e6cd5d4c8db321e6d0276bd9ca1e144d8879dd1f6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEP</name>
      <anchor>d56f70d4ccfc44beca223e6cd5d4c8dbdebaab4d61e17d2e16c2a3b07b43500a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHO</name>
      <anchor>d56f70d4ccfc44beca223e6cd5d4c8db75a97eea701f1ceaf9d2f6c8e06125d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOT</name>
      <anchor>d56f70d4ccfc44beca223e6cd5d4c8db3525d4f40cfe70de2d29f5e348a41812</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT</name>
      <anchor>d56f70d4ccfc44beca223e6cd5d4c8db858f8a9b5b640a817719da2e30009854</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PPType</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JETJET</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df59e6e76a6eac7461bbe890e9d9f0a9aaa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEPLEP</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df5904cbc5bb2f547f28babc32e8f11e7026</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHOPHO</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df59b99baf1fc4e02869b9dabc502da9272b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTBOT</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df594442a411e36e2e53044d6a68eb546fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTJET</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df591cf7c0d535f16d136bffbd7ef25a0b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHOJET</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df5974e22b91e6a85732d69f5446a8043453</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JETLEP</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df59042368826116a5b5dd7cbac272440306</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHOBOT</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df59d39ca6ee18c1c9243827e008ef45d902</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTLEP</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df591dcb5508e149661437b1d0fd7c8aef1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHOLEP</name>
      <anchor>2481229f18a9e4a8e2384ab9f053df5986f69cc58bee5b8051df24dc22c462db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>minSij</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>1934cae3fc795edeb2391e2e7fb5b6c8</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>minTij</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>4019400d1ec0ea5bddc65c59d0f0c21a</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr po) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minDeltaR</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>2531c8376c8b3bcf8b0b8e51e4c9b86d</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>minKTClus</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>8bd578e62deb421a2abf7f2acb831210</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minDurham</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>00adc5a1972601069607a11806322b39</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>passCuts</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>50e304d523e4541f68026341ee1ed087</anchor>
      <arglist>(tcCutsPtr parent, tcPDPtr pitype, tcPDPtr pjtype, LorentzMomentum pi, LorentzMomentum pj, bool inci=false, bool incj=false) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>a1d5311cea26746e4615e544db0c6b02</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>c13bc5b44070fff41c7d6f1a531b8813</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>7106d40391ed6ca0f0598689f7a51e56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkType</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>b4fc179efe3e4831f85058a01f34fa41</anchor>
      <arglist>(tcPDPtr pi, tcPDPtr pj) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PType</type>
      <name>getType</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>0b85b14f3b1e1a09b3e2a645584ca0f8</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>01ee0395eab8cf3fea7b58704b7f0e53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>cc83f29e7e7a63b1673394ce385d3298</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>9e4af3b4f97bdf6f15111b68a293b1aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>a562fe82b4f2067af13c4ee2e6ea8028</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>e720ff9021a54c8acfb2814b072d54f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>5fcbb29b94a7687a5fec871e72372478</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>83ec5de156c5e1226051ef35eb8b85ca</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>f9ae826ee4e28edc634ec9358506a446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MadGraphTwoCut &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>6ad5a4e2df33965230276a2e6e20de43</anchor>
      <arglist>(const MadGraphTwoCut &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CutType</type>
      <name>cutType</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>7b72c3b00d50acb90270c07564736b01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PPType</type>
      <name>pairType</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>d15b6ca33046e06bad134f393e62b4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theCut</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>55d41da54c4c13700fc2a1ef8de83203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; MadGraphTwoCut &gt;</type>
      <name>initMadGraphTwoCut</name>
      <anchorfile>classThePEG_1_1MadGraphTwoCut.html</anchorfile>
      <anchor>a43c479ebf111709c7d7032b8fcec745</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Amplitude</name>
    <filename>classThePEG_1_1Amplitude.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual Complex</type>
      <name>value</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>d4dc0e1e14113c9b30cdc8633d8a8c7e</anchor>
      <arglist>(const tcPDVector &amp;particles, const vector&lt; Lorentz5Momentum &gt; &amp;momenta, const vector&lt; int &gt; &amp;helicities)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Complex</type>
      <name>overestimateValue</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>5c1bad7db6d822a5afafbab38c26beac</anchor>
      <arglist>(const tcPDVector &amp;particles, const vector&lt; Lorentz5Momentum &gt; &amp;momenta, const vector&lt; int &gt; &amp;helicities)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>value</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>7b4aa18a2e641fb241db39839c66fb8a</anchor>
      <arglist>(const PVector &amp;particles, const vector&lt; int &gt; &amp;helicities)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>overestimateValue</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>28b150092d8e50217efac1a1d8913ab6</anchor>
      <arglist>(const PVector &amp;particles, const vector&lt; int &gt; &amp;helicities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>a95e9b8867b6fb77df397bb46548258b</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>b844729cbb4655bf5a6644be292362f3</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>f55d9c06625e7c0698d1f348fb4e0aa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Amplitude &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>0b3eb1b094082374b395c6a4879be449</anchor>
      <arglist>(const Amplitude &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>309415f2068c553f2a9177f70afd5a6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>88280af337b68cb42d01ede18dddfdf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>c5654dbcbe7104b9e209e37072624c8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>816c71027f210b6c0da2c1d72b7f42e4</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>3dd0fe64f542625e27b019e7d768009f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static AbstractClassDescription&lt; Amplitude &gt;</type>
      <name>initAmplitude</name>
      <anchorfile>classThePEG_1_1Amplitude.html</anchorfile>
      <anchor>ef29571e91a2b21ba1431a474702df34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ColourLines</name>
    <filename>classThePEG_1_1ColourLines.html</filename>
    <base>ThePEG::Base</base>
    <member kind="typedef">
      <type>vector&lt; int &gt;</type>
      <name>Line</name>
      <anchorfile>classThePEG_1_1ColourLines.html</anchorfile>
      <anchor>c560bc9c022103dcd7e46dfa735098f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; Line &gt;</type>
      <name>LineVector</name>
      <anchorfile>classThePEG_1_1ColourLines.html</anchorfile>
      <anchor>99b7ebb60924d6b432d453b12eb845ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; ColinePtr &gt;</type>
      <name>Vertex</name>
      <anchorfile>classThePEG_1_1ColourLines.html</anchorfile>
      <anchor>654a4e55af5ef258bea2acde3d047d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; Vertex &gt;</type>
      <name>VertexVector</name>
      <anchorfile>classThePEG_1_1ColourLines.html</anchorfile>
      <anchor>d2fafd5f81e424738bb1a2ae244f482b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classThePEG_1_1ColourLines.html</anchorfile>
      <anchor>7a231f196a2073c46581b1a060b51315</anchor>
      <arglist>(const tPVector &amp;partons) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LineVector</type>
      <name>theLines</name>
      <anchorfile>classThePEG_1_1ColourLines.html</anchorfile>
      <anchor>9aa48cd3ddfa3b955a54faf70e34f4b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::DiagramBase</name>
    <filename>classThePEG_1_1DiagramBase.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function" virtualness="pure">
      <type>virtual tPVector</type>
      <name>construct</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>c2bc20e699246a61440fd9c85a637f41</anchor>
      <arglist>(SubProPtr sb, const StandardXComb &amp;, const ColourLines &amp;) const =0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nIncoming</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>088a31aa81a92e933c541e8d8e505bd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const cPDVector &amp;</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>2b8860f4fe736514a5425edc9b2e75e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>id</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>8606ac6a12cbcb6ee0a18344cc25f627</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getTag</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>75c77d332932568e5ea50ec540ab386d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>034527b2e8498e027de0a4624c4315d7</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>57d78817c4de33df0fd41a01645cd600</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>f76bd46a77a6d4640efca5ae96e0b85b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>6db028f92ef28892b547fd23b4c5f414</anchor>
      <arglist>(int ninc, const cPDVector &amp;parts, int newId)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>done</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>df9c3a9c29b3c0c4345a15722b956e51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DiagramBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>d297b0bc3dca84443594a0f06e2b347b</anchor>
      <arglist>(const DiagramBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theNIncoming</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>18458ef6c77cd981f38dfd01c160b977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPDVector</type>
      <name>thePartons</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>946123d4683b1d4e59a5833765153ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theId</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>b9b51972ebe196b365075d6e913ba1cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; DiagramBase &gt;</type>
      <name>initDiagramBase</name>
      <anchorfile>classThePEG_1_1DiagramBase.html</anchorfile>
      <anchor>baec6a323ec146c54c1a08fafebbdc36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ME2to2Base</name>
    <filename>classThePEG_1_1ME2to2Base.html</filename>
    <base>ThePEG::MEBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCosTheta</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>5495bda49d8041964ea21bb5db8255af</anchor>
      <arglist>(double cthmin, double cthmax, const double *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scaleChoice</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>7fc069fcf75f6102c780c7c8f42e8431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>nDim</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>fd16728e13dcee1dc3ea66946cfaa778</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>generateKinematics</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>4408a1401b93befbc723a135fa9e5c8f</anchor>
      <arglist>(const double *r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CrossSection</type>
      <name>dSigHatDR</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>57d629a2fef91458eff39642f4115fbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>894d043de50089d564092c63b276b755</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setKinematics</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>1b069baffb461431318d317cbfe6bb49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>tHat</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>324aac80ed1a5e4282a53c4838cfcc8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>uHat</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>59bc71e9908584a4154b5671d9b8bd65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>phi</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>6f1d2f5b0daf4195772f51c8ebc4391f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>cf2d7b57ca8165c796b2ed1c219d6dbe</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>c3e25cafcb322efa49bdf0652554cabf</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>870b89304a6918be6c8bf1b60122ffb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>52c56bbb3318ba09396448605a7f9bf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>82c523f1d6c52537609655b831ecdd3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>0cfba322fb46402ec7e06f67eda7a379</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>c2772e0d973356e08ea857181cfcd479</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>c93c13e57c7724c3f7df256908657b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>tHat</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>07a1816017ec38dd8cd0df2e46e10adf</anchor>
      <arglist>(Energy2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>uHat</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>09f5326248abb1bb1b3fb58414ffcf33</anchor>
      <arglist>(Energy2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>phi</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>f576f6bda38305d6c5752869c8305dd0</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Switch&lt; ME2to2Base, int &gt; &amp;</type>
      <name>interfaceScaleChoice</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>4d9af29d7086a84db83e8d17e31ec7b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ME2to2Base &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>2c80fa87e2e2468295748f8486e5a19f</anchor>
      <arglist>(const ME2to2Base &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theScaleChoice</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>87c8c24e776969b6dadb68226c544c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theLastTHat</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>12241f175b40dbb985577ac9f230df15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theLastUHat</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>ae07c30346b58d24fe5fdd62b121b811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theLastPhi</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>c44aa468ec5b5ead71020e1ce42a4d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; ME2to2Base &gt;</type>
      <name>initME2to2Base</name>
      <anchorfile>classThePEG_1_1ME2to2Base.html</anchorfile>
      <anchor>fd95366ab4ebb8e3848b79b001d0e02b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ME2to2QCD</name>
    <filename>classThePEG_1_1ME2to2QCD.html</filename>
    <base>ThePEG::ME2to2Base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>orderInAlphaS</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>c7ccf88536dd87a7d04f44b4387e64da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>orderInAlphaEW</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>c4ba00887f7210e96ebb34c3d692294f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>comfac</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>0f4027f27bcaea30b43cdc908404cd6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxFlavour</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>cc92be43050c9b08b7fb18861f8bc333</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Kfac</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>8f2b6263bc723a70e5979ba75e836288</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>KfacA</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>e437a60d25964f727d9fe58ceaa6788a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>interference</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>7c056f21cee562e5a4ce41d10c091d4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isQuark</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>1f8af515d48d2b1a229781e82e5f7893</anchor>
      <arglist>(const ParticleData &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>quark</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>4e73f395672c23ee60d5be9656c5a3d9</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>7edb7297d6e5343544d8c7527d5c21b5</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>a1a257aa3bf1c61d3ffdfc3f4c9e3c5e</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>06aa00ff751acf04c0996caa6c022c1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>817546c0fa272a0987222b38ff912244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>08e04d5b199c9a893afa2f363c97aae2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>d3ade9974eff659ea308b1587119059f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>6ac19db9f5b03c4269ce9f04e145f97d</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>1dd577cdcc31b9587b8cc06c309a528e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ME2to2QCD &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>940869235b50c9ef6847628322268832</anchor>
      <arglist>(const ME2to2QCD &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theMaxFlavour</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>21eec45a93a84d372736ba396966ae57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theKfac</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>48c296887cb34ad1bcba9dbbe9712496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theKfacA</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>489aee1c32ab34ef952d2d2f7a6c9b9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useInterference</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>1017c901804cc8534cb05e7c27c45137</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; ME2to2QCD &gt;</type>
      <name>initME2to2QCD</name>
      <anchorfile>classThePEG_1_1ME2to2QCD.html</anchorfile>
      <anchor>7eeae5add10fbbe16c7e305ae1bcaea9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEBase</name>
    <filename>classThePEG_1_1MEBase.html</filename>
    <base>ThePEG::HandlerBase</base>
    <base>ThePEG::LastXCombInfo</base>
    <member kind="typedef">
      <type>vector&lt; DiagPtr &gt;</type>
      <name>DiagramVector</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>e3d756ea4a90cde56a58ca8daf24cd8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DiagramVector::size_type</type>
      <name>DiagramIndex</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>ab9e78a99dd525d768308bb80ded5c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; ReweightPtr &gt;</type>
      <name>ReweightVector</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>324df4129a2d74c1c36af7f446c42ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>orderInAlphaS</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>fc832a2758bfe30454a59eff707f22f0</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>orderInAlphaEW</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>b8161c632fb5f1d5abae57149efe8e2b</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>4ada33048ee0fb29f43ee675dc094e90</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Energy2</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>e1a4d5c0479ea88251f24447695c3575</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>alphaS</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>6d8e91bff708cfbb78432984fbc4e25d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>alphaEM</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>9205f41be7cf20ad1f08730e3d216793</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKinematics</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>f6db60d1ae6c3023287aca5e54364590</anchor>
      <arglist>(tPPair in, const PVector &amp;out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setKinematics</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>d1a401ebae67bd19c71989c95c8eec14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>constructVertex</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>57acd6fb1ab97139bd036da4fab36cbc</anchor>
      <arglist>(tSubProPtr sub)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>nDim</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>ede8ba85a217e2a051c3b6ae1d291f8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>generateKinematics</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>538cd5cbe15d3313e0a8d86705823b08</anchor>
      <arglist>(const double *r)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CrossSection</type>
      <name>dSigHatDR</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>1cf1fed76a8c0709bfa1a88867e3649e</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>generateSubCollision</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>94c1f30857465b8f670b8f65b9e7703b</anchor>
      <arglist>(SubProcess &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearKinematics</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>ee5924273dee6f203e8d4718c7bbfb27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>5de9d783ee2a5751596db22532b90c08</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>const DiagramVector &amp;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>f32411453734c360dd2bb6c3761ca2a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>c750fc9fd1b89f85e0c9ccbde21050db</anchor>
      <arglist>(tcDiagPtr diag) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ColourLines &amp;</type>
      <name>selectColourGeometry</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>c096646c559240d7f49194ff441096dd</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>21edc21f008ec4d07c3376685237564d</anchor>
      <arglist>(const DiagramVector &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DiagramIndex</type>
      <name>diagram</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>166eae5275c05086610c69525025deb9</anchor>
      <arglist>(const DiagramVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>reWeight</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>b222100df5d20118de9f57d9d4fda57a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>preWeight</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>7eae4cc59429bc3341c9bd287f2dd2be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addReweighter</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>8d10f1d412046249d0455233f3149874</anchor>
      <arglist>(tReweightPtr rw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPreweighter</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>72a3166d2ee2bf11159453cddb69a1bd</anchor>
      <arglist>(tReweightPtr rw)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Amplitude &gt;::pointer</type>
      <name>amplitude</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>390075a23d716821c3ca4d0bc624c211</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>sHat</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>fcb0db976afa887a621078943f413a92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>preweight</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>73ec97ce8a100a196a6ecf8cef8298d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setXComb</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>f62a47811a30d4c75a55a8391858c66c</anchor>
      <arglist>(tStdXCombPtr)</arglist>
    </member>
    <member kind="function">
      <type>const DVector &amp;</type>
      <name>meInfo</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>c7f103e9a41da6011e0fe31ed3fc7122</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meInfo</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>db6cb43ab728e4844ac34474189194f9</anchor>
      <arglist>(const DVector &amp;info) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxMultCKKW</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>6debe200accaa8842098ef570d6abf01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minMultCKKW</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>a25e2fef0ddd8d2161ca09f1d34c8e16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>1ddd092f533db7309d655f7e9a368b4b</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>328b1cd3797efb1af09b50d0a6f611df</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>ea5566373d8d5ffa0b12f4e9168e0b6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>add</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>b27e92f5b8870d22d201385e24af4c71</anchor>
      <arglist>(DiagPtr) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>vector&lt; Lorentz5Momentum &gt; &amp;</type>
      <name>meMomenta</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>3054a421c9b99ad08c5b12e4ab68a62e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>jacobian</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>3c2af89b0dce0c389b89cd49eb07b9fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>jacobian</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>2be3540c08326d60d235b0b555db9eb7</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>3a57407ed7d0326abaea5d55119e6a46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>0b957bb1ec58e1b67fb9326c28309443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>a4ef52d40042894dae69dc4543d13545</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>8d9390e81834757ff3c6b0616ccf08e0</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>381d4450126035dd61bcfae89f5bc376</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>ba881494874bc84d9d7e99f2e0df077e</anchor>
      <arglist>(const MEBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DiagramVector</type>
      <name>theDiagrams</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>8c1100ff25f1a45cc969f4309f8608d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theLastSHat</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>ccb3fb067ade9db11a3991bf26ba6bb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ReweightVector</type>
      <name>reweights</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>b3bdfb855e5ea44d2927a253be0dc5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ReweightVector</type>
      <name>preweights</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>dd553d60e0195ce878a59c0cfdc2ede7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>lastPreweight</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>679846eae452f7fa1d0ec8673b0952c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ptr&lt; Amplitude &gt;::pointer</type>
      <name>theAmplitude</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>66464831088b377de9cb4044575050ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theLastJacobian</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>699cc56788bc429e53a606d7ae397f24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theMaxMultCKKW</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>c97ade72fc113896695510075a5eff58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theMinMultCKKW</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>67abec69372611dd1f72b3badd635892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; MEBase &gt;</type>
      <name>initMEBase</name>
      <anchorfile>classThePEG_1_1MEBase.html</anchorfile>
      <anchor>0d7bf0d0be314a64a3388865b96ff921</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MECuts</name>
    <filename>classThePEG_1_1MECuts.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function">
      <type></type>
      <name>MECuts</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>53503a99a98fc2cd49e997170adbe011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MECuts</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>29ef8c2371b5ddf47692810cb07f393a</anchor>
      <arglist>(const MECuts &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MECuts</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>0fe48a3e8a73cd97778aaa3da1fee686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>c45d9e748cf07444710a1ef804f94247</anchor>
      <arglist>(const SubProcess &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>mHatMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>7ed391af615601639592dc7442873c29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>mHatMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>b621e4ae3e4000e51207c48a109df81e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>sHatMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>def6a212b04eca43318302b9f68c3809</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>sHatMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>3254639afd8cb2fbd479242e5ebeaa92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>pTHatMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>9dd27b57270cd5d5ca72897f5b95dbdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>pTHatMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>a9029be5aefed8c83d58df936b32d1af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>pTHatSingularMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>b11af9098bfb9a70fea56cfc69bb795d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>singularMassMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>ae476f8e880fdc48eacb336864096291</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cTHMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>a6b4ae6c3084605d8cffb1076ce235e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cTHMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>d5eac7907e4fb4a0908758b8c1594430</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>tHatMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>dca3349499b721d9859817ef697fd459</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>tHatMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>e1c8dcd59ab64d85291074a26f3b7781</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>uHatMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>eda935d70277317163b21ffcd0fc9496</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>uHatMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>da98ab6db4fd31df917d315192c88232</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scaleMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>99891aa8003d851792347f90a892c13d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scaleMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>06b0a4d86d21eab94867fba4f8defac7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>6c1baa0d7347548f0594be4306cae8f9</anchor>
      <arglist>(PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>bd9146fc12d8f9d9e942743a8e30fdc7</anchor>
      <arglist>(PersistentIStream &amp;, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>e349329e60206b1e30180af199ec7012</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>newcut</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>84ca7a72b7a54d00d82064ddd6984789</anchor>
      <arglist>(const SubProcess &amp;) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>f4eb01ebe5a2c4d9e9c04a1b2e54ca6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>120be0cf710e06766184613937af990b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>ff46171e0ee1140e2d2bebf48da91936</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>8ba26c50e5c6a568f752157902449e72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MECuts &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>b7e59e0e8e0c8d9603fc8cef6b2a9d16</anchor>
      <arglist>(const MECuts &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMHatMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>4268dd4927c9b3ab01398e8dc2998d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMHatMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>902b7f44f1e71e93355983990ea249cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>thePTHatMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>cf167cea906ee557b8e07cf30c0ecbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>thePTHatMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>573063ebe495df8308dd40284052dddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>thePTHatSingularMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>12aa66b08355fdd952904abf27eee19b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theSingularMassMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>132ddeb528a7669abc2647b9ed858546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theCTHMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>a5b1f660b6d0c61e14601f617b2756bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theCTHMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>228e0e26cae74707df21986ab20e22f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theTHatMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>c22c8a0187a04560b158e54b2053fb06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theTHatMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>c47181ae41cef36fb4f05bafdf28ebbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theUHatMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>5d3344e2c250161e1f5afa703cb1fab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theUHatMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>e1c60d042be61654d12eb396b93eec04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theScaleMin</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>81a5c1d9b487cffc23dc5bc22eca31a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theScaleMax</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>25b50c2d0f2255bd5a39d3ff3043b815</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; MECuts &gt;</type>
      <name>initMECuts</name>
      <anchorfile>classThePEG_1_1MECuts.html</anchorfile>
      <anchor>3037b450af8b4074f98e10f409ed4ad6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEee2gZ2qq</name>
    <filename>classThePEG_1_1MEee2gZ2qq.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>orderInAlphaS</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>71fe2b6403300a9c302a0f7adb4db064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>orderInAlphaEW</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>667e7a74b5b3f2b5d25bfca25d546e25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>5075747d6702a7748524e5aa359aaef2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>a159a1ec6f9709314bdc5852f3be71f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>52968786cacbf728068e16255a9b3e29</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>5b2f5be02625dd2833fbd4d1b5f155cc</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>6f2cd634e5e2a8bbc51e47839ed4243b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>9c9ea6ea91c4544a37590af8547f4cd9</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>3f6ca303a3b58837c5660f50de322e10</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>ab0d4a8c196f1c66ac4695ce424936b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>3637319f90900828b0a7a5814fd673e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>3bba70ca218c6c3fa75549d056e78929</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>8cedab42af551dded187111ea96a0427</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector&lt; double &gt;</type>
      <name>coefs</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>00ff65d0b8fdb6107cacb0a9f5d16f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Energy2</type>
      <name>mZ2</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>a01327b27fa32d130578cd53f71a5244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Energy2</type>
      <name>GZ2</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>d65ac27f071748a6b667021c14175f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastCont</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>012841c42a9b00a2fd0014b92f057bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastBW</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>9c142bd893e4f9fadaed306bc65c8b5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEee2gZ2qq &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>1dff8608e51b9d3efbdae8dcc3ed3d6b</anchor>
      <arglist>(const MEee2gZ2qq &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; MEee2gZ2qq &gt;</type>
      <name>initMEee2gZ2qq</name>
      <anchorfile>classThePEG_1_1MEee2gZ2qq.html</anchorfile>
      <anchor>69bfe48e1da49e5d6e750ce4e16f2ae9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEGG2GG</name>
    <filename>classThePEG_1_1MEGG2GG.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>a9276bc28764f947a26ef1082673e455</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>30cdc912a406faa03608da8d0c043ad8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>b6b2f66c2646481883c9f679be53ff13</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>0992a3559c4d7ec3d78bc5442a69335f</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>1272bd29d75ba1490d0e5af83a5e5547</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA1</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>f051053d9b85f9f2f16d2acec23b2579</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colB1</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>2bbc86a20ab564848181979dacbe9858</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colC1</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>a52d4a47534c150d077afd7b0fa34e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA2</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>4e77ebdb3dfc06f3c7b1d9a12e88cfab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colB2</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>1cb1cdc1eb4f30a27f1af3ee01f8899a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colC2</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>f088ff46b5606b7a55dc113ba7ac0cc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>552d625a32e494b71cc6271d2891592d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>7b2ee05ce2d5d6133f2eae2e3fd5d6fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEGG2GG &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>1a8afda8575f9b272f3e284a65e501d8</anchor>
      <arglist>(const MEGG2GG &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; MEGG2GG &gt;</type>
      <name>initMEGG2GG</name>
      <anchorfile>classThePEG_1_1MEGG2GG.html</anchorfile>
      <anchor>4b2aa3b326ab52b0d97afadde608ea0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEGG2QQ</name>
    <filename>classThePEG_1_1MEGG2QQ.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>58828c3cc35ba13970084ee2e7705b99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>192f2adbd80f25c1423525baa3665bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>60716380b3eb3c185d8cce1a6388f0b4</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>6e1f16b8c94d5c032b208a47f3d76e78</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>7cd84310f5ee1c8a75d8e657ceb285bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>e1379af29e21b132e61957f46669cb5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colB</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>1d439cdd15ef0a186a40e6344f78ff84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>c3957aa049a25ebcac41780002a50d54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>c8b8079075e36efc247d2c23b7d38b7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEGG2QQ &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>002b9a396e0569f47a1327047d535fb4</anchor>
      <arglist>(const MEGG2QQ &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; MEGG2QQ &gt;</type>
      <name>initMEGG2QQ</name>
      <anchorfile>classThePEG_1_1MEGG2QQ.html</anchorfile>
      <anchor>28710d21b230c0cb3608afa9a9c5d6b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MENCDIS</name>
    <filename>classThePEG_1_1MENCDIS.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>orderInAlphaS</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>3e0ef8eca4de8fb10064c36c47d11d9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>orderInAlphaEW</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>d7efd329a8d9744484cf8791c8323576</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>0f79bb47c1ec87910c3d91fe771207ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>0384018a9dc8f8fd3acf898d88033667</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>99b792d305e5b67498f4de5c6826dfc1</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>1169d2d3c1c8d1a71637d889801eb1b1</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>26ea468c8bc7de133bd30c67ecf4e463</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>6863e192069ac90faadc03b59a3dc4e3</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>eb85c3fa3007004fb3f2e0c18eeede43</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>c81a62681bbe5744f94b1aeaaf7dfe91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>dd91e11942a99499c220ac3d0f0ef4f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>8ebd6440c21d351dfe9e21936f287867</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>dfbb0b50a9619361523845dc0f23bbc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Energy2</type>
      <name>mZ2</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>d37c820db7c82ea18c90c2a14dcbbc71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastG</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>911ed1c2b082c0426eaec663e1c5be4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastZ</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>8d0295da20cd9d4c689024685ecb8cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>MENCDIS &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>310fbf379fecd7ea907b3d77c1ab6d02</anchor>
      <arglist>(const MENCDIS &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; MENCDIS &gt;</type>
      <name>initMENCDIS</name>
      <anchorfile>classThePEG_1_1MENCDIS.html</anchorfile>
      <anchor>fccbc3b84fd5b501aba067247da0fb76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEQG2QG</name>
    <filename>classThePEG_1_1MEQG2QG.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>6336c534235a127f77e66289c676330e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>2f82f9c7ba37adfa31f0415a2f5ee82a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>7c1e2513caf2f93fe287495337555fbd</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>eafd893afcd0d036cc4948c4b9dde741</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>b8bbf2433b7c7ab4286fbc820508ca76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA1</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>ca23f79e7e5993d96e8345d548f0a555</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colB1</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>639b977a5f058b452b56c9c08088fa74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA2</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>415ee42f2aa3d6e2ef7be3e696c7a0ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colB2</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>c956f2614c05de44c8c1e9f480c1362c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>742bb7dfd8bd95f6e9d0619d299ac69b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>290172d142c270dc9ae48ed3b30dde2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEQG2QG &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>1b090a749b9ed54ef22885295537a791</anchor>
      <arglist>(const MEQG2QG &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; MEQG2QG &gt;</type>
      <name>initMEQG2QG</name>
      <anchorfile>classThePEG_1_1MEQG2QG.html</anchorfile>
      <anchor>25e592bd75b8c92c26c660ca7fc6a1f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEQQ2GG</name>
    <filename>classThePEG_1_1MEQQ2GG.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>fec0640718cbf119bde597facb4a7607</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>f595b6b4588be4b1ef38f314398a6e6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>8cc9f8bb4f83b96f7052216ea37339c9</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>667fe56de236558ae6f8ad97ae9d7a3d</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>7402aa967706767ae62aed5ac68f2503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>21fde32fd2c3ab35d4436c9664edf0a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colB</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>780440b5db6631b56dee0e4933a5cc9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>285acacbf578ef3603a55f7719511eae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>9e96b8fc1cdfe264f62e42a192919977</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEQQ2GG &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>eab7fe5f73458494a481ba966c8a7237</anchor>
      <arglist>(const MEQQ2GG &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; MEQQ2GG &gt;</type>
      <name>initMEQQ2GG</name>
      <anchorfile>classThePEG_1_1MEQQ2GG.html</anchorfile>
      <anchor>10e7bb1955f467f3db70f89544c02d22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEqq2qq</name>
    <filename>classThePEG_1_1MEqq2qq.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>c0c87ec419c5fb1fe2b45c9af8a28080</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>8ca80189fe814d1157e232b73a40413a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>74809b0d032b27a3433f056ac67d70e6</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>49b6ae5e9cb9449afe68f507cfa05563</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>539e55dd2f9e170f847b4c9a96ebdfc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>fa4eedbf83a85917885752bde3c0d13d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colB</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>c9d58150cdf7f057c3cc30f39745ab1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>f5a917407be12ed0ddce4fb720a98458</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>4aeb526342a1fa38bd2affd279d1ab80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEqq2qq &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>94f84819ede36a4825d282e4e30f1a4a</anchor>
      <arglist>(const MEqq2qq &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; MEqq2qq &gt;</type>
      <name>initMEqq2qq</name>
      <anchorfile>classThePEG_1_1MEqq2qq.html</anchorfile>
      <anchor>8d48c98ee07d7fa62c2780d43751ec9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEQQ2qq</name>
    <filename>classThePEG_1_1MEQQ2qq.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>70e694adc61ca19559ecb9924d0c0fc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>bfd198e7ded07f9cd9b85a4f76fa0f29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>44c5b98775eb46fef61eccd9e1593aec</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>3f5aefba0efacc5c6dcd612d0a938ed7</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>267e2f18a71218dc4adaea7ae9ad4903</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>9d54a9f9fdb32e08ebefb2f8a6a9f360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>e57d15afdceaa78e4907d1d573b37606</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>49c8a0dfe5f3d2c48d67e00289e22c4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEQQ2qq &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>cbb349c5bafa4bde88da5b48277a2ba2</anchor>
      <arglist>(const MEQQ2qq &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; MEQQ2qq &gt;</type>
      <name>initMEQQ2qq</name>
      <anchorfile>classThePEG_1_1MEQQ2qq.html</anchorfile>
      <anchor>c1b5f1627919db32088a505047e7145d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEQQ2QQ</name>
    <filename>classThePEG_1_1MEQQ2QQ.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>f5dcf34d0e8ecc2570db245791693a54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>1701c33365913d61315d175762e19a26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>fc504b7af7d1948e63766c950d1f3f5e</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>22ddac74150ad977f1cd4306601f52b4</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>5b1aa467bd7e7f29b4acd643817d51ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>2c1130d94ded713ddb98570659f849f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colB</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>c33fbc9ad5ccf68757d5ea9fd4ab12a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>161eacf53471355a7f4ab8abaf48aac1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>6998360e9b7b2265ece70e701129cc21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEQQ2QQ &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>213e3483f07ddeab471f06b55f1f424f</anchor>
      <arglist>(const MEQQ2QQ &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; MEQQ2QQ &gt;</type>
      <name>initMEQQ2QQ</name>
      <anchorfile>classThePEG_1_1MEQQ2QQ.html</anchorfile>
      <anchor>a4675a92e48858553f773065b3f3f2f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MEQq2Qq</name>
    <filename>classThePEG_1_1MEQq2Qq.html</filename>
    <base>ThePEG::ME2to2QCD</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>me2</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>6e41414a2f34ae8608c01973e0ca12c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDiagrams</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>6e3eb96c0d3de74e780817cf0c86d9ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; const ColourLines * &gt;</type>
      <name>colourGeometries</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>150e93c0925d0abdcd45d18e0b981dd6</anchor>
      <arglist>(tcDiagPtr diag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selector&lt; DiagramIndex &gt;</type>
      <name>diagrams</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>29881a2bbdf2901b891002fb803acba7</anchor>
      <arglist>(const DiagramVector &amp;dv) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>4b7768a817235fe147b5e9414ad71db7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>colA</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>58a6df7417f3bf825cfe60f23b1dbb75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>2693c1b18b3c623c92929f915a7a05de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>7afb39f76cfc13b5e42d150d2993efde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MEQq2Qq &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>d7a3e3aff17bd9c2a68dbb216c52c5e4</anchor>
      <arglist>(const MEQq2Qq &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; MEQq2Qq &gt;</type>
      <name>initMEQq2Qq</name>
      <anchorfile>classThePEG_1_1MEQq2Qq.html</anchorfile>
      <anchor>847d45e393a90773c181632d121a6459</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ReweightBase</name>
    <filename>classThePEG_1_1ReweightBase.html</filename>
    <base>ThePEG::HandlerBase</base>
    <base>ThePEG::LastXCombInfo</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weight</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>afa22e52abbe0dbab945651c3165dd20</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXComb</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>ecdea90580f9c3c65653db1d74ed1989</anchor>
      <arglist>(tXCombPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>e63f99c1ce333e2198238710de252726</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>2bcb5c57fc3f32f276343fbd6acb9476</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>c7115a38e9111b005b0097d7e30a8451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>78be894a65cd0b04428425f61f9beb59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>11c6bddf371cd9944fb7c8c48d812cfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>1ac0be0aeded5d06a64ea6679780be78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>c0dc0e29ad96a72d3943ac63e947256a</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>8581eb0f502b53aed515415721cd0bcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ReweightBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>871e50ab744a0717f0e49a2272a32a37</anchor>
      <arglist>(const ReweightBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; ReweightBase &gt;</type>
      <name>initReweightBase</name>
      <anchorfile>classThePEG_1_1ReweightBase.html</anchorfile>
      <anchor>8c826e1ae832b662ea4432e35bbb6b3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ReweightConstant</name>
    <filename>classThePEG_1_1ReweightConstant.html</filename>
    <base>ThePEG::ReweightBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>weight</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>3cd7c1e56d382cde527ec3829ef8dbe4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>4778bf6d91fc934cbd05f08aece9dffc</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>2ae920f77acd97bfb649b92bf36811b6</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>ae49119560da379de7fbff2db5f768dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>85d5c854feb2da4f46fc0cfdc0488972</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>f6d67983b5725767c05317380e2070c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>e4e42883bd78f5cd062f5178f2af9077</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>75fb0312f54d96fe4aacf29eb88c44ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>3cac37ab9a09f3f26a6dd8724a5c349f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>bf0ff09356a9f074505b3243ecce0d00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>eef9096ff8a57ca7ce0a0f22af41a42a</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>471eccde94e480ac02b1a56c7d0a5d66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ReweightConstant &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>e8ad523d49f32d4eb57604f8d1eecc17</anchor>
      <arglist>(const ReweightConstant &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>C</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>4d42b104133c0ffd833c1af5a2d906d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; ReweightConstant &gt;</type>
      <name>initReweightConstant</name>
      <anchorfile>classThePEG_1_1ReweightConstant.html</anchorfile>
      <anchor>f9d72d6167dce5d51079e9252b9f0ad5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ReweightMinPT</name>
    <filename>classThePEG_1_1ReweightMinPT.html</filename>
    <base>ThePEG::ReweightBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>weight</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>6262a209e6d44777502115f3ea609ca7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>249731e156ff63083dab19f9fcabb4aa</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>8bff0f3614a6095008dcf2751ca8b86d</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>d387f4eb5cd41a4232b6b86e8606d6da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>e1e5ce93aac66f46a761db728be47640</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>caaa0f618dc304adb97b4e071bf850be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>b3dbe5cb6035d3da47a6bf5d749a3cb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>26b28309c327f1453b0924557db53366</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>ac7d0ccd4b9661743d6cfe65882a360e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>dbb09272b70e2031492c1a9d09aff1e4</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>27d76f55de32d6877ed42a42eca68e2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ReweightMinPT &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>3f8c8ad9bc0c9f4e97076d8c176d442f</anchor>
      <arglist>(const ReweightMinPT &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>power</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>5450367839baa2c0bc6d61d77cb138ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>a88219032532b1778b02f0d2aea46651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; ReweightMinPT &gt;</type>
      <name>initReweightMinPT</name>
      <anchorfile>classThePEG_1_1ReweightMinPT.html</anchorfile>
      <anchor>a0ac35f4d6851fe87a0844e4298151f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Tree2toNDiagram</name>
    <filename>classThePEG_1_1Tree2toNDiagram.html</filename>
    <base>ThePEG::DiagramBase</base>
    <member kind="typedef">
      <type>cPDVector::size_type</type>
      <name>size_type</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>b43b4bc71779b6777e0105ef2ddfd7e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>multiset&lt; tcPDPtr &gt;</type>
      <name>PDMSet</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>db3754a431076077fd9c5027c8ca73b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Tree2toNDiagram &amp;</type>
      <name>operator,</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>b018609a2caffb355e752fa0c8fb0dd6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Tree2toNDiagram &amp;</type>
      <name>operator,</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>82023bb4422603dbcd19deef3a2f20a5</anchor>
      <arglist>(PDPtr)</arglist>
    </member>
    <member kind="function">
      <type>Tree2toNDiagram &amp;</type>
      <name>operator,</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>99f0d1aaf2e01c037cc59c79a847f2fa</anchor>
      <arglist>(cPDPtr)</arglist>
    </member>
    <member kind="function">
      <type>Tree2toNDiagram &amp;</type>
      <name>operator,</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>5287058deff225bdf2f8b144684db73b</anchor>
      <arglist>(tPDPtr)</arglist>
    </member>
    <member kind="function">
      <type>Tree2toNDiagram &amp;</type>
      <name>operator,</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>6eb771640c13b7f9e86dddceb3f2ba7a</anchor>
      <arglist>(tcPDPtr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tPVector</type>
      <name>construct</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>3fbdc1b594423bedcb3e9b00e0eca4df</anchor>
      <arglist>(SubProPtr sb, const StandardXComb &amp;, const ColourLines &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>tcPDPair</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>f8234c5831a79810013589ef4f0cf14d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const cPDVector &amp;</type>
      <name>allPartons</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>eb3251dd653987ca19dc27d2edc3b653</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcPDVector</type>
      <name>outgoing</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>c7ec1f3b0a21b74d4da7262f5229927c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcPDVector</type>
      <name>external</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>e177d9f0690a9e587e1cf3e3d64c3a5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parent</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>f32b0c79f518b42975bbad84cdf07c3e</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>pair&lt; int, int &gt;</type>
      <name>children</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>cdedb8bc69f2f3058bcd98f2b3d55b0e</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nSpace</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>e4102194bfcf6721791e015e4ee2e895</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nOutgoing</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>2b7fd065a8b84559cda704ac7910f0b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>7dffab350521320c4ddca736e128b93e</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>7a0f50c70164a97b96186ae5e3c67c72</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>67855258d728cfb1ba33a2b5e2be872b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addSpacelike</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>0627c2192ac4e84f4626b321fb104fe3</anchor>
      <arglist>(tcPDPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addTimelike</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>d3d13443d937e7ee19a98ebbebe08c90</anchor>
      <arglist>(tcPDPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addTimelike</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>6e49c9fa60c4142c1dd9466a475eb0e6</anchor>
      <arglist>(tcPDPtr, size_type origin)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Tree2toNDiagram &amp;</type>
      <name>add</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>7017005541480d784d37bfc71dcf1067</anchor>
      <arglist>(tcPDPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Tree2toNDiagram &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>2c097c22d605e85ab4c3f32295468af3</anchor>
      <arglist>(const Tree2toNDiagram &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>theNSpace</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>52c13060035d5bc81576920e80c5e5ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theNOutgoing</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>238c362f9b05d05fe8d1cde2ed70aa14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nextOrig</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>6e9816d60f4e6b881691c06bf1ce3e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPDVector</type>
      <name>thePartons</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>3cd59e2192829ead84f4105c3430db19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; int &gt;</type>
      <name>theParents</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>20769f6b13c2effa03dcc839cc52fc8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Tree2toNDiagram &gt;</type>
      <name>initTree2toNDiagram</name>
      <anchorfile>classThePEG_1_1Tree2toNDiagram.html</anchorfile>
      <anchor>aaa7dba8f560614e452f0f1d2e837d61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::BaryonRemnants</name>
    <filename>classThePEG_1_1BaryonRemnants.html</filename>
    <base>ThePEG::RemnantHandler</base>
    <member kind="typedef">
      <type>Ptr&lt; PtGenerator &gt;::pointer</type>
      <name>PtGPtr</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>241e2f91d35c85e217d1c726b40105e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ZGenerator &gt;::pointer</type>
      <name>ZGPtr</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>c912c979baaecd85fae3a8c7cf0c3980</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; FlavourGenerator &gt;::pointer</type>
      <name>FlGPtr</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>54408ba72f3e3f5ec43035f89373c9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>margin</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>1905c340fed5e78bb0034c492087a8f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>67f8a7c3881309bd93b5fb545bf3b05c</anchor>
      <arglist>(tcPDPtr particle, const cPDVector &amp;partons) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>2edb8ae20ba5b2a647ad1675bbafbe3e</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, const LorentzMomentum &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>a989ff44c7882ca16ced050489a47ec2</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, Energy2 shat, const LorentzMomentum &amp;parent) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>boostRemnants</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>6f02225aae925c5480e60bbcc7320fdc</anchor>
      <arglist>(PartonBinInstance &amp;pb) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>83176798400119390cf46fb416e3fb2c</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>3edda91e0794fdb65161eedb54de956c</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>40abc34fccc7c95e2a59e5e604207a02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ZGenerator &amp;</type>
      <name>zGenerator</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>9a829aa92a5182fd37207feff80772d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PtGenerator &amp;</type>
      <name>ptGeneratorQ</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>857d9d5738e496b029ad2ab4e57e824b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PtGenerator &amp;</type>
      <name>ptGeneratorR</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>4972fbea29cd9f11ce3916c56e526e3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>FlavourGenerator &amp;</type>
      <name>flavourGenerator</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>e7a81fefc3cffe78ac9bd0430120579e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>specialValence</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>c32ecf3d762036e28d2b30c1ae74177e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>67c0f58b1bf8b4b60f133c88b4ba9f5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>0ef475700845a4473bc6ff1f90cd11f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>f920e13d1c8a4be5545d03e04c104435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>d2a1b348ea179e575aa3af26ba104df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>eb1d09d20f349225b66f7b6f8f824a9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>3e552bd6e49fe3dbec6855dccf766ceb</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>1c618e94671d65e6d7125aff1858be62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>defaultInit</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>d31d2ea4d777f00b3d19a3cf52683596</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>BaryonRemnants &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>ce7b8e0e10cd9590138033628eea5a21</anchor>
      <arglist>(const BaryonRemnants &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PtGPtr</type>
      <name>thePtGeneratorQ</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>21791cca55c0fe0457e49c015226fab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PtGPtr</type>
      <name>thePtGeneratorR</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>af5807834a3a4cc5cb90d1f9bad1e544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ZGPtr</type>
      <name>theZGenerator</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>c1487d188fae241e0f9115d98929d057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FlGPtr</type>
      <name>theFlavourGenerator</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>2d34d6f3d610d72671e0c3c6b6ffd9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMargin</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>644e27f84243f7a6d7ec9b0d777b3547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useSpecialValence</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>b3e25ad0cc4f9b5e9764389540cd31a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; BaryonRemnants &gt;</type>
      <name>initBaryonRemnants</name>
      <anchorfile>classThePEG_1_1BaryonRemnants.html</anchorfile>
      <anchor>4c1a9f0b2c93146ea886012b353d0ef6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::BaryonRemInfo</name>
    <filename>structThePEG_1_1BaryonRemInfo.html</filename>
    <base>ThePEG::RemInfoBase</base>
    <member kind="variable">
      <type>int</type>
      <name>iq</name>
      <anchorfile>structThePEG_1_1BaryonRemInfo.html</anchorfile>
      <anchor>7b11f7fb8e4cc66a81d043758471015e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sign</name>
      <anchorfile>structThePEG_1_1BaryonRemInfo.html</anchorfile>
      <anchor>9f094fa86c3dc63025bec0b93cb2f71f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt;</type>
      <name>flav</name>
      <anchorfile>structThePEG_1_1BaryonRemInfo.html</anchorfile>
      <anchor>ffc093fa6299c9ad66295228f455b765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt;</type>
      <name>vflav</name>
      <anchorfile>structThePEG_1_1BaryonRemInfo.html</anchorfile>
      <anchor>5391b90accdf9a47a57757c2cd6b96b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VSelector&lt; pair&lt; int, int &gt; &gt;</type>
      <name>flavsel</name>
      <anchorfile>structThePEG_1_1BaryonRemInfo.html</anchorfile>
      <anchor>df96e0412d38fd805466263b0f88efa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mayval</name>
      <anchorfile>structThePEG_1_1BaryonRemInfo.html</anchorfile>
      <anchor>2e77bf32423ecd0a1f2052479ac28bc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::BeamParticleData</name>
    <filename>classThePEG_1_1BeamParticleData.html</filename>
    <base virtualness="virtual">ThePEG::ParticleData</base>
    <member kind="function">
      <type>tcPDFPtr</type>
      <name>pdf</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>aa018e0273390f62f26a5f108320ae02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>934a9dd5560381d8d97afaad0c142efd</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>f2c593ef8836858fa30f1022048edaa8</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>2dd8be86ed06a9c4af97c22ee60a5637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PDPtr</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>c77aeb6974ada671efd558e62dbdaf3a</anchor>
      <arglist>(long newId, string newPDGName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PDPair</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>accdf0ad67e8ed3b04ab8b461aae7d0f</anchor>
      <arglist>(long newId, string newPDGName, string newAntiPDGName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BeamParticleData</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>e5f631fc35c671452f3d8ed34948697f</anchor>
      <arglist>(long newId, string newPDGName)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual PDPtr</type>
      <name>pdclone</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>3a5102d774cc12954be7f46bb82049e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>4791a3d6bf63e2be39bde04479a26c04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>d83e1a8cb74d50384a0838094fee9e4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>16b7037cfe7395550ddc54918ec68fd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>331e40ce2dce02a766e1754ec31dc60d</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>6691532df6704c2eabbc9c913499fe04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setPDF</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>b3dd3456ef851d739f16addaf8e2f2fa</anchor>
      <arglist>(PDFPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>BeamParticleData &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>e86ca70907b402d1f4e82ecbab5976e5</anchor>
      <arglist>(const BeamParticleData &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDFPtr</type>
      <name>thePDF</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>f3a64284cb874cd88bdb7c159d805cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; BeamParticleData &gt;</type>
      <name>initBeamParticleData</name>
      <anchorfile>classThePEG_1_1BeamParticleData.html</anchorfile>
      <anchor>d31c1f6f4374dab1e1a5921814cbccc6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::GRV94L</name>
    <filename>classThePEG_1_1GRV94L.html</filename>
    <base>ThePEG::GRVBase</base>
    <member kind="function">
      <type>Energy2</type>
      <name>mu2</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>8fab85546b115d1ec2edc7c49353eab2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>lam2</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>0250ffead9a6952f506d15f9e8b8a5b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>2a165ae186ec3f395b3b5f4d74fc78fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>fde4bd68abf5992c6fec65ded5b7ae0f</anchor>
      <arglist>(double l, Energy2 scale) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>uv</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>f81a217070be666469346fe04f73ed48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>dv</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>ac6d589afc10307bcc5426a114f85de6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>del</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>282c01f7e68941fd446059d23388d856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>udb</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>62d187865dcb383f03ec3bb89b0e7472</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>sb</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>87353991ee91b594acc46f2b0567d770</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>cb</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>227e3ba914424ed1a915bd1bb1baf69b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>bb</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>a989f602e892bf7a888f246cd3d5b188</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>gl</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>a5c7b0c10f21bb4b7b95372b416bc881</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>24a1c58650719f5df1a7b36a25c71042</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>9970616eb3b56386018e0aa300d8a9ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>cce42455bafb4fdbdd4de65596053475</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>6a09aba4f66a1f6e1f27420c8b95ce17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>01009c0e03b0206e791736a5b7e1e811</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>e12e6eca8efe0aa4fa91dc4c09fe5e73</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>db0f86813b2633a62cd804976dd59a0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>GRV94L &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>375f2ee77613c7e95545050ac89143bf</anchor>
      <arglist>(const GRV94L &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; GRV94L &gt;</type>
      <name>initGRV94L</name>
      <anchorfile>classThePEG_1_1GRV94L.html</anchorfile>
      <anchor>8c41e9626d7f2f3dc4d6b78eb7010e28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::GRV94M</name>
    <filename>classThePEG_1_1GRV94M.html</filename>
    <base>ThePEG::GRVBase</base>
    <member kind="function">
      <type>Energy2</type>
      <name>mu2</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>3c72313aabe932327f2d68544f9b82dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>lam2</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>e28a8aafa27f2d5c890d8b553b724451</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>cd92e9b2b5e4069441ae3fe316b5382c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>2238d1cc59a31e2544e1946cae35394b</anchor>
      <arglist>(double l, Energy2 scale) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>uv</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>7ef929d03bf4a7f39b24bb04e0f3250b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>dv</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>9afd3e0c6bc7079b59fe44083d379ddf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>del</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>36a27201f2ef190d7e7a9b50686bc2e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>udb</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>51a074e30f751984558640e8507eb806</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>sb</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>aea0ee99242ac7195485ab4817e6e469</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>cb</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>7c7cdf28ab4b9cd987f07ef83db688d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>bb</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>30b57dbf246cee1f3aca3289758b71d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>gl</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>625e6c5831ca92eeb5237696b89591f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>13f0ed20ea1763f40f15184b7a91d3e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>51c7441925c236d234f42f15dacbb8d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>5bc19c69a4701de0ad30a942f96d7fd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>d37cd64709a00432e21a2dd7baf96406</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>aa91cc0df2d91f33c57d18ddd9071b6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>0ebcf2cb09b9c123a3895034fdd20040</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>ba6c5fa3c3331a17598c8c3b455a2d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>GRV94M &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>be7db81dce2273b1256471a4bfd85f04</anchor>
      <arglist>(const GRV94M &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; GRV94M &gt;</type>
      <name>initGRV94M</name>
      <anchorfile>classThePEG_1_1GRV94M.html</anchorfile>
      <anchor>bbff455de09a6cd8e80ae65313c0f768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::GRVBase</name>
    <filename>classThePEG_1_1GRVBase.html</filename>
    <base>ThePEG::PDFBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandleParticle</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>9a41f5d0798b2a1640b7ba067267f0ca</anchor>
      <arglist>(tcPDPtr particle) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cPDVector</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>3905e8c3557dc52267b84e812bacb6db</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfl</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>7d077d6ff6814ce36c77261b9bcc6d2e</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double l, Energy2 particleScale) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfvl</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>769391efed0923c4d981135c0700d316</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double l, Energy2 particleScale) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>S</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>51d5c69d7800e9842bc5e53a29452db8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>S2</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>9fc44881f344d8d5b3c2d21c39d38514</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>S3</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>419a02bedcfd505beb74837d3b5cfcb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rootS</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>f0021fe82435733584cc3c83f5ab99db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>440e2b266fac2711ef342b2c6edf1391</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lx</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>b9a18c92f6d1bdaad86604a143655ab5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eps</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>de97d0c6e801b7d27f601b388a3f5469</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rootx</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>974f35866401ce6f751c0867e4dc5630</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>531664f93758700e868bc7603db80346</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>108dce0500fb5f21a0493fa93e68ba19</anchor>
      <arglist>(double l, Energy2 scale) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>85909a7b065ade8fa6c5f4deb85a7d24</anchor>
      <arglist>(double l, Energy2 scale, Energy mu2, Energy2 lam2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>valens</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>8c46c52fce164655a189b0fa124aabd0</anchor>
      <arglist>(double N, double ak, double bk, double a, double b, double c, double d) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>lightsea</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>fd2345e2a81717f430c90ed841587edd</anchor>
      <arglist>(double al, double be, double ak, double bk, double a, double b, double c, double d, double e, double es) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>heavysea</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>d06cf6a70c373796769c3917ecb2716d</anchor>
      <arglist>(double sth, double al, double be, double ak, double ag, double b, double d, double e, double es) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>uv</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>81d484f1fc8d9c3d6791d8128f5602c1</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>dv</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>fe697ddd41d66b6f465aa6d102d19686</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>del</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>d66096d64e45fdb6f7ecba967c5914d1</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>udb</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>e964249258e85368eba2ba5db3274056</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>sb</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>075b32d8438f9068f46720d2cc2f5b02</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>cb</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>9cc456784f134ef45c6cd28582e15187</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>bb</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>42951dd14258d03a8e11e1fdc273b3ba</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>gl</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>9e2411df324de80356e90e1742bc4cab</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>fuv</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>975f5aee38511c2836c84cd77eb29c06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>fdv</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>421e15fd46a8e7036104d1718212890a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>fdel</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>7166bad49a8b5c6da6bf3201a15d5145</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>fudb</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>4a1b6dc04793cd3b802c9f534b523375</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>fsb</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>f3d802da2c6acbe4ddc3d7a484f0d888</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>fcb</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>b72ed6ace1b908ca5e2110817cf4d5ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>fbb</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>c8b2327740ad2e20fa3bc14b14055f11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>fgl</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>1c522d8a20e93b2cde5c3dc50fc1421d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>c994979427bf38e742e903a8e5984a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>73cac78bc5e200a5562bfe06dac17a16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>325fe6196b8889aec47c52c77af71f0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>e0deb2f34dce6fe42d83b32099211aa3</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>ee091f75102c606806a6ef8391760241</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>GRVBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>d5d26d0ad8c4e4b7ad2a636760e0634f</anchor>
      <arglist>(const GRVBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theLx</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>724bb2e1f25cc573d8fac0cde699104e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>thex</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>11810bbc919f46e0b023bb7f493168d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEps</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>55f4aee73d6a81f5c50ffd4b20739baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theRootx</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>645c6863f3fdf9ee9da4f42dbc0b927b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>Q2</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>9915c5a0ed0e9d7a3f7c078ce5b9c11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theLam2</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>4e78031e922f73340b4c3aade89ef567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theMu2</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>23d0064d9b7b03fad015aabbf5d68736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theS</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>5d45b2456c26d123448643387a8f0458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theS2</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>d902d84f4f8f57aec270ae20ac4fbfd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theS3</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>2bf7589e2a70907bea72bb3c190796b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theRootS</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>0b57b07845b92030dfe09307706d295a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>uvSave</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>e4b2646fab44ed28fa4120267360a48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>dvSave</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>80e6e5a8d404265603e11ca08598b7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>delSave</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>45f2ab1a254753998776006383f94ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>udbSave</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>ea4b7e44e2d24a633e4d165ff77f9333</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>sbSave</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>f684c1c4bdbaf3e6b9b7ddcf6065fe77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>cbSave</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>775c2cf92f81537302a8a1710beeae34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>bbSave</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>5eebdb4b6f550f54e006ca6ef3106a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>glSave</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>a9b4064b7897277e10410c6198c0f54f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; GRVBase &gt;</type>
      <name>initGRVBase</name>
      <anchorfile>classThePEG_1_1GRVBase.html</anchorfile>
      <anchor>913a636ad9bd2788b4185ba13aa083cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LeptonLeptonPDF</name>
    <filename>classThePEG_1_1LeptonLeptonPDF.html</filename>
    <base>ThePEG::PDFBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandleParticle</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>8c2e7871c591d396ea8629ec3e14b567</anchor>
      <arglist>(tcPDPtr particle) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cPDVector</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>2a585681d0a26ab84a03e52656ad7a17</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfl</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>0ff46da6e0fc32da3b6c47b9cb459d3f</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double l, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfvl</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>0e1bd012bb5a18527e49931a526a1c35</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double l, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfvx</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>96f6ccc3194b45689d0fd823922a14d9</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double x, double eps, Energy2 particleScale) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>flattenL</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>9de5e57c7695a0a79a9370405e010727</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, const PDFCuts &amp;, double z, double &amp;jacobian) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>de1dff1bd34e6583afccb599e44c920b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>78a640fdb94d2aa063ef8991dfd25f7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>15223dfc08ab42f700653673daf1c45b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>c685cf1e480c67b9be5c82bc42aa1fa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>4c6b158d681a5ad26ce6522059a6cf85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>92f011884c4c0bf8e246df43bdacd1a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>fa0770fb900bc44ff469f02dd53a03d5</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>7a23468b3aed54d0b819c9e340114841</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>LeptonLeptonPDF &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>4339fd4e36665195f206835d995ec236</anchor>
      <arglist>(const LeptonLeptonPDF &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; LeptonLeptonPDF &gt;</type>
      <name>initLeptonLeptonPDF</name>
      <anchorfile>classThePEG_1_1LeptonLeptonPDF.html</anchorfile>
      <anchor>b0c1c3a633a2b42e5d4029ac90bdf889</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LeptonLeptonRemnant</name>
    <filename>classThePEG_1_1LeptonLeptonRemnant.html</filename>
    <base>ThePEG::RemnantHandler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>c5bd01a7c687bf70bcdfaa0771ee471a</anchor>
      <arglist>(tcPDPtr particle, const cPDVector &amp;partons) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>541b5dd69e8e0bddb77d0264d33a4d13</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, const LorentzMomentum &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>f8225e89f254499c3376cd059b8d33b1</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, Energy2 shat, const LorentzMomentum &amp;parent) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>086909cfb4115da6a4ddd210538c0add</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>7d398cdbcaae3c3e7783891e0a559fb9</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>34c36c7fe70b761d9c6568b4a4fba879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>ac75f719bec6ebcab3e085d0c403f867</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>859da50177a2020ed321b5145a927268</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>a7924f06b9eb9bc60260aa05849676f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>212a6f4c6907d2e544c849267da30230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>588887b0363f301358ffac914b689a05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>02c64d88ea9e213ecde413f53ef6b04f</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>6179931182ee2c1586037ce708ee5cd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>LeptonLeptonRemnant &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>ce67d5076850402ef632122dba8a26af</anchor>
      <arglist>(const LeptonLeptonRemnant &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>minX</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>baae393a8e508e457cbf187bba1357d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPDPtr</type>
      <name>photon</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>b25551f157861c49650c61ea9bc72531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; LeptonLeptonRemnant &gt;</type>
      <name>initLeptonLeptonRemnant</name>
      <anchorfile>classThePEG_1_1LeptonLeptonRemnant.html</anchorfile>
      <anchor>59ff862217efde22dbea3abf8aff32a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LHAPDF</name>
    <filename>classThePEG_1_1LHAPDF.html</filename>
    <base>ThePEG::PDFBase</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initpdfsetm</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>1494c09e51cbb13f6512d4ed21fb57ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initpdfm</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>73907b48f7c56b5e4fbca380cdd37ae7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>lastReset</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>94fa5cd3454b837e2d47444926a3e1b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setnset</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>465d4ff5668a36743a8ac0438244c667</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getMaxMember</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>af0b7f187055d7f60f02068e20731ee6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getMaxFlav</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>b69c53774bbea6231f612dd679feecde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkInit</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>084342ef828f1b95411d659f75bf6f45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkUpdate</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>4a105adafd7df2db5492365493d8e44c</anchor>
      <arglist>(double x, Energy2 Q2, Energy2 P2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setMaxNSet</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>e9e3ca0dca106686bca7d34512259524</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getMaxNSet</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>17f682cbc2313775b2fa18a18b7bc40d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setMinMax</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>07afbb079d509952cdcdc53ab1210c84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPDFNumber</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>85c3b4595a76b444825c8dca3ffd3869</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getPDFNumber</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>87de100792db8fb0badaa36575296b64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPDFLIBNumbers</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>520e53a61110d3cefff65ac4e2cee7f3</anchor>
      <arglist>(int group, int num)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>string</type>
      <name>setPDFLIBNumbers</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>1e79d9c70b60d3334d857b924ad2534f</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>pair&lt; int, int &gt;</type>
      <name>getPDFLIBNumbers</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>c76a6a7fdccef4f42f31ab9ecae066d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPDFName</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>5f8726e55893bef9c8572f28a6613592</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPDFMember</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>fffaa5f49d52aed7c5de2c558635d944</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>string</type>
      <name>doTest</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>b76ecde913cfde3a5cf56eb7e9cc49ff</anchor>
      <arglist>(string input)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::string</type>
      <name>getIndexPath</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>2f78c61a160070172c62f3ef47747dfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>openLHAIndex</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>564cd1fca641320943f82f6b9b87b68e</anchor>
      <arglist>(ifstream &amp;is)</arglist>
    </member>
    <member kind="enumeration">
      <name>PType</name>
      <anchor>96cc19fb7064b56de7fa0189ab33b6f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nucleonType</name>
      <anchor>96cc19fb7064b56de7fa0189ab33b6f27fafcd681ab4fcbc9a0ffad9a7e2db28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pionType</name>
      <anchor>96cc19fb7064b56de7fa0189ab33b6f22f14bc66144e0a74ffea56a4d1de5323</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandleParticle</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>5a0427c639c5d3358c4607ca60bc46fd</anchor>
      <arglist>(tcPDPtr particle) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cPDVector</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>f146cded266a604789dae30f35cc0c3f</anchor>
      <arglist>(tcPDPtr particle) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfx</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>45ad5985c417980ad694ee87cba835e6</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double x, double eps=0.0, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfvx</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>3f0cfafc484fa9ac14752fb4527093ac</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double x, double eps=0.0, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function">
      <type>PType</type>
      <name>ptype</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>2e726da072ef8c94342b5d64d0606493</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>PDFName</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>edd75b0ac2378b0b1e13510d913ab8ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>member</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>61ca71e52958fe8c348ae77b75e48ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>a77d41de86f8bf8ca3917f097e7912ab</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>f4ddef6ff8cf1ae7d7415c9bfe3aa953</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>ada0e6e33a83a7e9db92f9ba0e62db30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>3f93d5fef1686e16e2e9bdcdd40f11c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>2a2d65306227a93062bd12655a554d2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>16e01b38a8f8c5106f1d7286158ab088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>7ba7c0f611e0024a1e4c0d5756917b9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>4287852b706a6dda6fdfe6b09f481a00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>LHAPDF &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>cbabeceeab56d93a25cc06d6273d8ef5</anchor>
      <arglist>(const LHAPDF &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PType</type>
      <name>thePType</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>28b587801ba1db72e3d263ff10a23a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>thePDFName</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>2f53b1de3400f2cd9f16c3a45669e89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theMember</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>3f93a0e40b09aed5e323c3c92a97910d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>thePhotonOption</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>b230ba5b76f9b30b8e6e02a1c838d7ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theVerboseLevel</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>84ddce11f7c726c9d5a13c5675c4bfd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nset</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>a67a53a4bfb456d0c6e4582156f95884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>lastQ2</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>03d26fba830ba1613ec6ee3c09803da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>lastX</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>d54d52a5558723e03f7bbf5b7d5a90f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>lastP2</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>db31ec044216a66c4b6d07bd60f339f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; double &gt;</type>
      <name>lastXF</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>2e804ef3562d955e43cbd0f27907de25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>xMin</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>a1f958ce7053b827d55c2a20899b0783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>xMax</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>43edfd0e95ad4c1dfefef4058bc145ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>Q2Min</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>4fadd2397468aebe209b2e904c72f483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>Q2Max</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>698f7d0a9092159894d93821564b4765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>MaxNSet</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>4b167cebf40f09c0c02385776dd1833d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>lastNSet</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>9b5ada3a978bde51321e3c0090ca50d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static vector&lt; string &gt;</type>
      <name>lastNames</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>5732dba80d84757ccdce38612c57baac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static vector&lt; int &gt;</type>
      <name>lastMem</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>269686509b29179e6d84a068d52a91d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; LHAPDF &gt;</type>
      <name>initLHAPDF</name>
      <anchorfile>classThePEG_1_1LHAPDF.html</anchorfile>
      <anchor>514e0ddb2f517903e8b243c24c340626</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::NoPDF</name>
    <filename>classThePEG_1_1NoPDF.html</filename>
    <base>ThePEG::PDFBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandleParticle</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>261f775bcf643f784281fd4b876c16e6</anchor>
      <arglist>(tcPDPtr particle) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>40f343c12939fe58f09942c597b753bd</anchor>
      <arglist>(tcPDPtr particle) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cPDVector</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>1a9e960a84d1c745b276516fde40332e</anchor>
      <arglist>(tcPDPtr p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfl</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>ce4fe767889d8f308ee89b2301629d6f</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double l, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>a66e95b75e79f59020ac28adb35e53bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>5127e40cf974ef5c161ec5da296b9c4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>92a22f0a385a5e1d211fc3f7ec4b46d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>34e04128b03fa23921620b9193ed6207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>14d4a6be16f1746c94259872ff4d6ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>6a4adb4e27ff74f8f414d71d766e3a43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>4440991673e9503ab2e61a5fdcebf482</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>430ea6ed857b71597067c425db472465</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>NoPDF &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>3af79fc9d3b46f8ec7267f3fc376807a</anchor>
      <arglist>(const NoPDF &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; NoPDF &gt;</type>
      <name>initNoPDF</name>
      <anchorfile>classThePEG_1_1NoPDF.html</anchorfile>
      <anchor>86eb0b0aecc76ed0617636e373fe3619</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::NoRemnants</name>
    <filename>classThePEG_1_1NoRemnants.html</filename>
    <base>ThePEG::RemnantHandler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>d08fcebbe5288a83499ef7c09ed603fa</anchor>
      <arglist>(tcPDPtr particle, const cPDVector &amp;partons) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>a74160cf744d63152e844c86bf098524</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, const LorentzMomentum &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>8aaf2ea969a6e1b91e118bde91e2eeba</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, Energy2 shat, const LorentzMomentum &amp;parent) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>148c8c459b116e330301796fbdc40c15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>54d1f49837635c18816b22da446135ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>aae5c25f8110cd4954aadfd6f905a72d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>663f1354706517eedbaab8e4b50a651e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>a47c56b7a39e444c2a5650dcb0decd88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>6ef6aa910e59e12d0762b5bacf51fc5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>60da48f1e2cf46820d85fb43fe96ef39</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>50f859be802e33d44daf55feb77fcf1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>NoRemnants &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>1ddfccbfa342c33ced7921708a0092ee</anchor>
      <arglist>(const NoRemnants &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; NoRemnants &gt;</type>
      <name>initNoRemnants</name>
      <anchorfile>classThePEG_1_1NoRemnants.html</anchorfile>
      <anchor>c6574bca9f0e765f545831ae6d416144</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PartonBin</name>
    <filename>classThePEG_1_1PartonBin.html</filename>
    <base>ThePEG::Base</base>
    <member kind="typedef">
      <type>vector&lt; PBPtr &gt;</type>
      <name>PBVector</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>611d2f409f64cf727401dfe6341a3391</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>particle</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>9fdaaded9761d97bfacd2036c228b46a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPBPtr</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>c962a5acfdd24a5129aaef71912a7a4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PBVector &amp;</type>
      <name>outgoing</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>f872ee7e53502858c66742ce2d85022b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOutgoing</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>05f727dd66e43cae33ed5f8f977d782c</anchor>
      <arglist>(tPBPtr)</arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>parton</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>e0345f6d03d91cd6eae16c072b190695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcPDFPtr</type>
      <name>pdf</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>6ff8f53e1cfbe8b470ea17823322f285</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcRemHPtr</type>
      <name>remnantHandler</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>8f6eac2d026f4e5a7559fcf9ab5ee480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nDim</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>f94d4cb1e95e778a4f463ce732b0faa3</anchor>
      <arglist>(bool doscale)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pdfDim</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>046cf778179d0a5c5256a389a191bda3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>remDim</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>418bdc2c4d3f2a3e3dcfb6fef428798e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PDFCuts &amp;</type>
      <name>cuts</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>ecfe3a4fd83bd3a5aa06eddd16b47b2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>fullFn</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>b4bfd3b4c83ec4099ee3bd00301b81b0</anchor>
      <arglist>(Energy2 newScale=-1.0 *GeV2)</arglist>
    </member>
    <member kind="function">
      <type>tPBPtr</type>
      <name>getFirst</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>837cc05086b79bf24e48f4cf1038f594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>77a080398f0a3555e328b66a007488db</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>9ec509d1c1eb3307097bceffaba38f1d</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>e8e393f95b05519505d2b02d217e63f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>PartonBin &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>4b37078daac7faeeeffa74add4778d75</anchor>
      <arglist>(const PartonBin &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPDPtr</type>
      <name>theParticle</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>a50138962977963b2077d3255398a56f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPBPtr</type>
      <name>theIncomingBin</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>ac6abae672eecf1ad2a01d913bd1a1eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PBVector</type>
      <name>theOutgoing</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>ab8db31c21df32d81346c2555d138789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPDPtr</type>
      <name>theParton</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>7b576ddc494a8ccef92f8a5ae832892e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPDFPtr</type>
      <name>thePDF</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>11a7d8c08f00da15de198c25648931c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cRemHPtr</type>
      <name>theRemnantHandler</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>c8a58a1652b10d85a630c4e0882ea2df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>thePDFDim</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>a0e3e635064b7a8a6df9a4bb8def5771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theRemDim</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>3acc99a97164c8d8b2f7e6bb79634d93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDFCuts</type>
      <name>theCuts</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>6682dfce463a7fd8c6a73d3d9b8a75ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; PartonBin &gt;</type>
      <name>initPartonBin</name>
      <anchorfile>classThePEG_1_1PartonBin.html</anchorfile>
      <anchor>8519117f06c12704b533b2af3e6675c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PartonBinInstance</name>
    <filename>classThePEG_1_1PartonBinInstance.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function">
      <type>tcPBPtr</type>
      <name>bin</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>4e124e07210bea41f9fb7d50e129aeac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PartonVector &amp;</type>
      <name>bins</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>cb139032caf4b90e204bb7aa3b163f1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>particleData</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>9bc6eed5a913a0548d1944010c95143c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>partonData</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>67acb30411d4ec0136a768878b7eee2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPBIPtr</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>28c0982293fe4e2379ac8976721c3fd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPBIPtr</type>
      <name>getFirst</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>f0a6d2ea6a2670f23aa108f3dfba3363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tcPDFPtr</type>
      <name>pdf</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>3b9317ce0dabe114ab56c014895bfeec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcRemHPtr</type>
      <name>remnantHandler</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>68bf855b46cd46b2fe73135af12cd056</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>34594924b26f4da2443190cd971718b5</anchor>
      <arglist>(double lx=0, Energy2 Q2=0.0 *GeV2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>54cad1dfe0229099d875f43e219243c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>78e8e05f8f29e2504d64d4dfc5c2998d</anchor>
      <arglist>(const double *r)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>fullFn</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>5bb07626fcabb3256bcb5cda85f7d393</anchor>
      <arglist>(Energy2 newScale=-GeV2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>jacobian</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>2072ef8e8d21dcb800cf8b63c7d6da50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jacobian</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>3e03e1b2bd0e276f3287cf026661d03d</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>particle</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>9ca212dc1c2d4b03ac154f5c9551b10c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>particle</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>af5fd93bb1521e6b47faf682cf14284b</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>tPPtr</type>
      <name>parton</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>5d71fd9b744087e962030b14cb00dad4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parton</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>cfbcfbf6694ad77ce2ab5f777bad5f61</anchor>
      <arglist>(tPPtr)</arglist>
    </member>
    <member kind="function">
      <type>const PVector &amp;</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>b6a35f859a553b9460f6283875e8f3fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xi</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>1a7bff47cab8c8e9bec31e0651b5e9bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eps</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>bbbb26cf1de8cc94dca9d8e7963b2f33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>li</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>d9e99ad65964aee1a8c191ea80356e5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>li</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>37e266d8692a68871a6280584059f4a4</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>fdef9e27e55cc222821fd2162553457d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>l</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>441711c4e77879c92c51150e9b44a8f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>l</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>b54da212dbc017001fced3e9fade8244</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>cfad13bb91b8eb82f93f8a6852d1dd53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>5915d4af15f4846e4dd378b8b215f44f</anchor>
      <arglist>(Energy2)</arglist>
    </member>
    <member kind="function">
      <type>const TransverseMomentum &amp;</type>
      <name>kT</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>2dc7eb21b4b5ca532c19a40c7c826f61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>remnantWeight</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>5d633c43723a5f2f6653c5dde0d456d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remnantWeight</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>4ac60158b0a5101d061f1174c6ceae35</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>const PVector &amp;</type>
      <name>remnants</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>d188a2815d8adcf9506cc98c64224178</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remnants</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>13689d2748e7a2d93719833ede61d8c7</anchor>
      <arglist>(const PVector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tRemIPtr</type>
      <name>remnantInfo</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>5e5cd23e41218b46cd563ad1a0839c78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remnantInfo</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>78f5b16cb6f3a25bf666570befa24736</anchor>
      <arglist>(tRemIPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>3594d603954471853a88c24a0ff6eb72</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>fbfafcb3a732a8f4126f3bffc52d88f3</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>0db862082c33a8d5c7665fd4f53850a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>PartonBinInstance &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>f6e93bfdcbe272412a487a3751680447</anchor>
      <arglist>(const PartonBinInstance &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cPBPtr</type>
      <name>theBin</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>25a09e3e75d308c2f82db708e237b6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PartonVector</type>
      <name>theBins</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>0a449eb4f23be39ea7041019bc3effb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PBIPtr</type>
      <name>theIncoming</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>3506f038f29308172bd3fb985f45d092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theJacobian</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>29d761832332a72147d9cfd16be2330b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PPtr</type>
      <name>theParticle</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>9d6464c273035592fbd6b2b72e7a6f8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PPtr</type>
      <name>theParton</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>38d4a118d68a4f0a40bd960bb33433d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PVector</type>
      <name>thePartons</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>bd06dc84dcce5b0d0f9507586063ae73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theXi</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>593e74470efd75d5a4c2a9acd2407549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEps</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>1b352cff7e62ef65f89c728cf1905e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theLi</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>a79808394d8a5a25bb74318f0035f708</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theX</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>ce9d60aab9a701d5ae415b6dcd1e39ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theL</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>48add6221e5a9b79d554e4cdd17c06a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theScale</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>3fe8cabf625950101923b4db61d873fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TransverseMomentum</type>
      <name>theKT</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>53539ebccc4c67d97ed006f63eeefe5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theRemnantWeight</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>b32a49e498a09a6c515916e27cc80529</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PVector</type>
      <name>theRemnants</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>c1bfb84516d35d7b4a6f07f408369059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RemIPtr</type>
      <name>theRemInfo</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>6d522d008012c8789b3deb0fe89d777a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; PartonBinInstance &gt;</type>
      <name>initPartonBinInstance</name>
      <anchorfile>classThePEG_1_1PartonBinInstance.html</anchorfile>
      <anchor>36ce1655c0620d5f00e223e7d802fd6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::RemInfoBase</name>
    <filename>structThePEG_1_1RemInfoBase.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RemInfoBase</name>
      <anchorfile>structThePEG_1_1RemInfoBase.html</anchorfile>
      <anchor>6cd996ff5113c40e33fcb0b444d15835</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PartonExtractor</name>
    <filename>classThePEG_1_1PartonExtractor.html</filename>
    <base>ThePEG::HandlerBase</base>
    <base>ThePEG::LastXCombInfo</base>
    <member kind="typedef">
      <type>map&lt; cPPtr, PBIPtr &gt;</type>
      <name>PartonBinInstanceMap</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>988d2ab1eefe57a0375cf32e16d74b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxTries</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>9f76fda05a837efb5325f86280a72faa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcPDFPtr</type>
      <name>getPDF</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>bcd04a56671d6fc2307f8da5ff97701f</anchor>
      <arglist>(tcPDPtr particle) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>e3664a777cb7832225b73e0284d0a6f2</anchor>
      <arglist>(const cPDPair &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PartonPairVec</type>
      <name>getPartons</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>2d56a48c143b682feb2f610b88ee2020</anchor>
      <arglist>(Energy maxEnergy, const cPDPair &amp;, const Cuts &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>newScale</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>f397aeaab75efa90dc2052b77d98f4fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>colourConnect</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>8e6f29bc30b1f392df1fd3b019856f71</anchor>
      <arglist>(tPPtr particle, tPPtr parton, const tPVector &amp;remnants) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PBIPair</type>
      <name>newRemnants</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>98360808bad314af1965b65bb9703431</anchor>
      <arglist>(tPPair oldp, tPPair newp, tStepPtr step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual pair&lt; int, int &gt;</type>
      <name>nDims</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>9ff92ec013858b73c937b9141784cfbe</anchor>
      <arglist>(const PBPair &amp;pbins)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepare</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>c52c8057a95a563f9e8fa804437c8e63</anchor>
      <arglist>(const PBIPair &amp;pbins)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>generateL</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>35fa449cc496a5fd49a8f3b1dcbad164</anchor>
      <arglist>(const PBIPair &amp;pbins, const double *r1, const double *r2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>generateSHat</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>21577663cd38c99714d3b14fef68354a</anchor>
      <arglist>(Energy2 s, const PBIPair &amp;pbins, const double *r1, const double *r2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>fullFn</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>3e3dfb842c35623343f0ac493deb9709</anchor>
      <arglist>(const PBIPair &amp;pbins, Energy2 scale)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>construct</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>d7d191b555a98135db363940bcd2de76</anchor>
      <arglist>(const PBIPair &amp;pbins, tStepPtr step) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>constructRemnants</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>16e36cbcaf54b6338c48133501c64dab</anchor>
      <arglist>(const PBIPair &amp;pbins, tSubProPtr sub, tStepPtr step) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LorentzRotation</type>
      <name>boostRemnants</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>57faf1902b971d84b4e971c3c14ac289</anchor>
      <arglist>(PBIPair &amp;bins, LorentzMomentum k1, LorentzMomentum k2, bool side1, bool side2) const </arglist>
    </member>
    <member kind="function">
      <type>tPBIPtr</type>
      <name>partonBinInstance</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>4ce5d2c6a0c365dcae74674b27bbfa10</anchor>
      <arglist>(tcPPtr) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>90aab264d767cf553eabf831aa6b2816</anchor>
      <arglist>(tXCombPtr newXComb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>4448b3aac9b019d5e829836e9e8b597a</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>ade1a7eb88ceca9b31b6dd62c4442f82</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>d61134766c4f596151455636d7d4e606</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addPartons</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>31f83a98e465f2764ba52d408f8fd323</anchor>
      <arglist>(tPBPtr incoming, const PDFCuts &amp;cuts, PartonVector &amp;pbins) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tcPDFPtr</type>
      <name>noPDF</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>78022bef05e0db531a85dace1935a38c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>findConnect</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>dd5410e66102a13dfcb12d9d8e73a189</anchor>
      <arglist>(tColinePtr line, tPPtr parton, bool anti, Iterator first, Iterator last) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>generateL</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>f89088c82807200df405431309031c9c</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>44f9e3a48f0ce09c47db4c2c5fd88ff8</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 shat, const Lorentz5Momentum &amp;first)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>fullFn</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>ebd6d412ac637d1d943a8c8575c2bc29</anchor>
      <arglist>(const PartonBinInstance &amp;pb)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>construct</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>2ac6774d3672b07000908bf40ba2a9d9</anchor>
      <arglist>(PartonBinInstance &amp;pb, tStepPtr step, bool boost=true) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PBIPtr</type>
      <name>newRemnants</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>2b98bbddf93bac028fb60ec05f5a1f7c</anchor>
      <arglist>(tPBIPtr oldpb, tPPtr newp, const LorentzMomentum &amp;k)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addNewRemnants</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>cc332f2a599b01bcaa8325d4e65bb45a</anchor>
      <arglist>(tPBIPtr oldpb, tPBIPtr newpb, tStepPtr step)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>transformRemnants</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>fc8a4364f21db2335c06114d61797e44</anchor>
      <arglist>(LorentzMomentum &amp;Ph, LorentzMomentum &amp;Pr, const LorentzMomentum &amp;k, const LorentzMomentum &amp;P) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>constructRemnants</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>4f4f508847a09d860b56dcffb183e7fd</anchor>
      <arglist>(PartonBinInstance &amp;pb, LorentzMomentum &amp;Ph, const LorentzMomentum &amp;k) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>cbc14cf862ceefec0203750ae8387072</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>aa3cd8aef436a6c3490c7edd887a9bf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>89e80d200584df9ade695d9be12b1035</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>2ca314cc49546644bdf7be093cd8118f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>def92b1671f3723fe2544d8aa3f426aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>466ba77b1bb477a37804bf828249a1b8</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>97ecd236751c1313e22c230a6029a949</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>PartonExtractor &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>8bcbd85601a4d6d20efab63b8a48c29c</anchor>
      <arglist>(const PartonExtractor &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PartonBinInstanceMap</type>
      <name>partonBinInstances</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>3de26546ae7dfd7be2fa9ef059efce9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; PDFPtr &gt;</type>
      <name>theSpecialDensities</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>946123a46526db495602f264f935f0e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDFPtr</type>
      <name>theNoPDF</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>06ae0ac7990607bc64130bd405593724</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theMaxTries</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>da0b23730bd12bdcc53f97ea310e8e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>flatSHatY</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>f044887b6ff338a95d9ff615a05bfd47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; PartonExtractor &gt;</type>
      <name>initPartonExtractor</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>8f2bd257d1673df4c7e3528ef785f1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>XComb</name>
      <anchorfile>classThePEG_1_1PartonExtractor.html</anchorfile>
      <anchor>2bd6080f98338d386c2e1de935d6a230</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PDF</name>
    <filename>classThePEG_1_1PDF.html</filename>
    <member kind="function">
      <type></type>
      <name>PDF</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>9bdb133d4e92f8ed0c183b79871b7ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PDF</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>27c856a0e893d407a84f7aea70943e17</anchor>
      <arglist>(const PDF &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PDF</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>1dfd710213ed5331378fa3b056d377a4</anchor>
      <arglist>(tcPBIPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PDF</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>99735a6d36ffa16fe9c4eef2c9ae9b00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PDF &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>371ae6ea93f92025f1129d06e2ac7d08</anchor>
      <arglist>(const PDF &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xfl</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>dbae71e1a21b0e4902a0ee043649d64e</anchor>
      <arglist>(tcPPtr parton, Energy2 partonScale, double l, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xfx</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>28106ced4a643459a9fdeec7f813ec65</anchor>
      <arglist>(tcPPtr parton, Energy2 partonScale, double x, double eps=0.0, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xfvl</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>940a07ecd2a5f136ce835f2f589d450d</anchor>
      <arglist>(tcPPtr parton, Energy2 partonScale, double l, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xfvx</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>401c5aca444454db9dc00f51cdc965f3</anchor>
      <arglist>(tcPPtr parton, Energy2 partonScale, double x, double eps=0.0, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xfl</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>d20b3a4802366ab59f3fdcace06ac3a0</anchor>
      <arglist>(tcPDPtr parton, Energy2 partonScale, double l, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xfx</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>b1115269c2a34feefc54393200c0a861</anchor>
      <arglist>(tcPDPtr parton, Energy2 partonScale, double x, double eps=0.0, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xfvl</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>97300ddf32ab2b91c91416c4f3c2b1ae</anchor>
      <arglist>(tcPDPtr parton, Energy2 partonScale, double l, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xfvx</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>e8c4bfb1e106d5f1f974ac83e0e3f33f</anchor>
      <arglist>(tcPDPtr parton, Energy2 partonScale, double x, double eps=0.0, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tcPDFPtr</type>
      <name>thePDF</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>c5f3a3688dc4f6383048685ce78ae691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tcPDPtr</type>
      <name>theParticle</name>
      <anchorfile>classThePEG_1_1PDF.html</anchorfile>
      <anchor>f88ebf37c95685e99b93e41761d1ae0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PDFBase</name>
    <filename>classThePEG_1_1PDFBase.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="enumeration">
      <name>RangeException</name>
      <anchor>8cc07566a44fe5396a2811bbfebb6a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rangeZero</name>
      <anchor>8cc07566a44fe5396a2811bbfebb6a7317a6743e2b19d218ad543caba8a8836f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rangeThrow</name>
      <anchor>8cc07566a44fe5396a2811bbfebb6a73983a244db759a44eb9ce1e28c285d943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RemHPtr</type>
      <name>theRemnantHandler</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>ff5b9eff0da40c3de4071c40e2b69d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RangeException</type>
      <name>rangeException</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>9d7a70b571e21e3640efd39faaabbb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; PDFBase &gt;</type>
      <name>initPDFBase</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>3437a514d0e7ea17b2a0299e26d80d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>b523b05b51e31025379e84ef58094f7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>7bd8dea46eaee8afb8fe76e944fa662b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>8645c48f80c2466ab2e9d18b368b1411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>29984164e7f5344860a22140150d4c1c</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>c383c33b5cdc41d6ead39f181bc31832</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>PDFBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>7b01601045990e62f56bc14b92765279</anchor>
      <arglist>(const PDFBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tcRemHPtr</type>
      <name>remnantHandler</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>48df59af7a50bce9888d8beba46e5581</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canHandleParticle</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>3276eeb279680a4c75d4b5c0f3df04c1</anchor>
      <arglist>(tcPDPtr particle) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>a44bd62275f099c181430b76ee810cc4</anchor>
      <arglist>(tcPDPtr particle) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual cPDVector</type>
      <name>partons</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>24776a8a75757129f4cb9997397fc99b</anchor>
      <arglist>(tcPDPtr particle) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfl</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>2394a421384771a358f37420560374b9</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double l, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfx</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>e564e19b678b594aec4acf709692b392</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double x, double eps=0.0, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfvl</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>d64b72cfeed8f4fc5af2e97298706f77</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double l, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xfvx</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>1b9bcd7ad3cb8daf429a17cb514f5880</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, Energy2 partonScale, double x, double eps=0.0, Energy2 particleScale=0.0 *GeV2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>flattenL</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>c6d1e7828a4dee2e44756e2337bfb392</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, const PDFCuts &amp;cut, double z, double &amp;jacobian) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy2</type>
      <name>flattenScale</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>6a9e0940a8097a6aaad8d68f2ff6528f</anchor>
      <arglist>(tcPDPtr particle, tcPDPtr parton, const PDFCuts &amp;cut, double l, double z, Energy2 &amp;jacobian) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>5711b554ab985f7f2e750f28345afabd</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>b04e45630135cdceee83df6bd5952640</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1PDFBase.html</anchorfile>
      <anchor>3d0d9208e2df41b43741d121104196b3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PDFCuts</name>
    <filename>classThePEG_1_1PDFCuts.html</filename>
    <member kind="function">
      <type></type>
      <name>PDFCuts</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>e90c8b2014955fa482db1f46ecd7bac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PDFCuts</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>f5332105df2c8faa74783db117455741</anchor>
      <arglist>(const PDFCuts &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PDFCuts</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>c362da774abdc8b4f5859dbc9d92c6b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PDFCuts</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>159f6e6daf73a2f47295dcaae2868819</anchor>
      <arglist>(const Interval&lt; double &gt; &amp;newL, const SInterval &amp;newScale, const Energy2 &amp;newSMax)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PDFCuts</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>5b062c6ec6565ff9444a3e20cfe66e9b</anchor>
      <arglist>(const Cuts &amp;, bool first, const SInterval &amp;S, const SInterval &amp;sHat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PDFCuts</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>12b3a2a7be6fe6a165095c3057f8ae01</anchor>
      <arglist>(const Cuts &amp;, bool first, Energy maxEnergy)</arglist>
    </member>
    <member kind="function">
      <type>PDFCuts &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>42edd923db20f38d4fd3834e9b1b08c9</anchor>
      <arglist>(const PDFCuts &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lMin</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>a4279e1b1e19112145ff774e5fbb8edb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lMax</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>be10fb0850b36a371ff52cc93f664d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xMin</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>99f94ca34dc74e354d9fafac46fae4f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xMax</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>1bf5ba20024319d795554ec1c0b962e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scaleMin</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>5916e66b9734a5fc7451c4f419775bf7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scaleMax</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>c22ed2d72a4ca1e5e53bee74030fed2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scaleMax</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>e0bff22bb2bd58374577a6b1ab6df286</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>scaleMaxL</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>ee07e6d54d0eba3595805b44a84cf210</anchor>
      <arglist>(double l) const </arglist>
    </member>
    <member kind="function">
      <type>Energy2</type>
      <name>sMax</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>787ac3d5f90b43b03bd3122dcaae47b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Interval&lt; double &gt;</type>
      <name>theL</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>20d3ae889cf8ff8d064dd7f1c9adfb0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SInterval</type>
      <name>theScale</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>c64491c7eacc6c4a3c6b5d3259330c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy2</type>
      <name>theSMax</name>
      <anchorfile>classThePEG_1_1PDFCuts.html</anchorfile>
      <anchor>f39297abff1b61bd9e17494269caef6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::RemnantHandler</name>
    <filename>classThePEG_1_1RemnantHandler.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="function">
      <type>bool</type>
      <name>multiCapable</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>40c3f0a87a3d1bb5fa404970d54afbe1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>7a092b7156fe011548cf76859bf285f4</anchor>
      <arglist>(tcPDPtr particle, const cPDVector &amp;partons) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>nDim</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>9c2fede50ed8b660540225efaeb13edf</anchor>
      <arglist>(const PartonBin &amp;pb, bool doScale) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>d7956d0bdebfebaa710bb6c147c06ef4</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, const LorentzMomentum &amp;parent) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>1cfe9d06cd9760daac261b182093d51c</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, Energy2 shat, const LorentzMomentum &amp;parent) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>boostRemnants</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>3be02e2158ccf5dba4e8385c2c01336b</anchor>
      <arglist>(PartonBinInstance &amp;pb) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>recreateRemnants</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>0d8e6f7ef99dce420fe2b0c70df8f875</anchor>
      <arglist>(PartonBinInstance &amp;pb, tPPtr oldp, tPPtr newp, double newl, Energy2 scale, const LorentzMomentum &amp;p, const PVector &amp;prev=PVector()) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>recreateRemnants</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>fd83fbf9d0ed50f696a4ea76fb691e98</anchor>
      <arglist>(PartonBinInstance &amp;pb, tPPtr oldp, tPPtr newp, double newl, Energy2 scale, Energy2 shat, const LorentzMomentum &amp;p, const PVector &amp;prev=PVector()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>9492ce6302fbc1d3d9f57f875d048da7</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>051849e1759bbaeb1fd463a445132f35</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>1e26b24274eb73afc2409e317d920d5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>8f8c75cfbf7be4a5a90f8e484a9247f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>6c104b9ac010aafe78cb916fb31a878f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>0dfaf1a7a579a783cc6bc0c848ac7886</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>b5bfc2aa384360f2d9cd458c806a9200</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>6cfb67a519ea84d867fc09af42fde0c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isMultiCapable</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>2fd907233df8d675cb9bb9a1e8cc9090</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>RemnantHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>32d72691cb4abab8a43197b356eef465</anchor>
      <arglist>(const RemnantHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; RemnantHandler &gt;</type>
      <name>initRemnantHandler</name>
      <anchorfile>classThePEG_1_1RemnantHandler.html</anchorfile>
      <anchor>3ffb90095dffffc098ea32b1d7288826</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SoftRemnantHandler</name>
    <filename>classThePEG_1_1SoftRemnantHandler.html</filename>
    <base>ThePEG::RemnantHandler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>59eb68774b8106e34f866eb7cde6a10c</anchor>
      <arglist>(tcPDPtr particle, const cPDVector &amp;partons) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>10d32d727bbafc46408a80b1c574574f</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, const LorentzMomentum &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Lorentz5Momentum</type>
      <name>generate</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>7a8b1da7242e5c6e91467be3934bdf89</anchor>
      <arglist>(PartonBinInstance &amp;pb, const double *r, Energy2 scale, Energy2 shat, const LorentzMomentum &amp;parent) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>recreateRemnants</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>949fdd4f2d2ea57f05728043a3e59aac</anchor>
      <arglist>(PartonBinInstance &amp;pb, tPPtr oldp, tPPtr newp, double newl, Energy2 scale, const LorentzMomentum &amp;p, const PVector &amp;prev=PVector()) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>recreateRemnants</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>f356159fa7b6e944238e2b32c153b969</anchor>
      <arglist>(PartonBinInstance &amp;pb, tPPtr oldp, tPPtr newp, double newl, Energy2 scale, Energy2 shat, const LorentzMomentum &amp;p, const PVector &amp;prev=PVector()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>dd73601507e37596eafde1c7de00cdf2</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>39dadee55051f80b5610b72d14a74cbe</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>4d778cb66a880d9791f8817140fe7654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>139d7e55f5fc7f27d69df3599c0434f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>d568d05d37131c403d8084ebdcf01c20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>79efe88b7f5f42bcf4148716aa1571ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>6da25ac75fb757c6778c846c9c905a69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>05b6a5f33ec5c2b651b2a8344f1f2df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>7e73425e3d4acc188b73163cc35d577f</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>015d79f3e9f50212a61cce7547de5c69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setDecayer</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>e3f5a098e059d07a09798dfee5ab6403</anchor>
      <arglist>(RemDecPtr rd)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SoftRemnantHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>73003f03c77391aefbe46e713bcce3b4</anchor>
      <arglist>(const SoftRemnantHandler &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RemDecPtr</type>
      <name>remdec</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>7e80244edfb915b59bcb082fd127133f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; SoftRemnantHandler &gt;</type>
      <name>initSoftRemnantHandler</name>
      <anchorfile>classThePEG_1_1SoftRemnantHandler.html</anchorfile>
      <anchor>53883ebaf2c572b9b5c3a2e9dfe6d013</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::BreitWignerMass</name>
    <filename>classThePEG_1_1BreitWignerMass.html</filename>
    <base>ThePEG::MassGenerator</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>01616a26ea4d9bac1cb9f914bf6c226d</anchor>
      <arglist>(const ParticleData &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>mass</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>dd57e7a4f4eb6f9512551b57d52f54ed</anchor>
      <arglist>(const ParticleData &amp;) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>38eee858ea643b1da5aca179af6f2308</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>0a689e281589fd1c8bbe15b6ee322b3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>09b28cd6ec07a594589a3ca10f739804</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>b45edc9256391d72e3354b74d27bc5c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>4619ce17b9451734b639246449ea6b49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>37421a7a63e4b5934092efb0bb15e20f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>507336f5ba7b1a7154261006aa6a32ff</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>170d1fa5cb32ba03ddaa8a6608e75a69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>BreitWignerMass &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>934ad57f9e7c80adb8fdc03ab7759051</anchor>
      <arglist>(const BreitWignerMass &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; BreitWignerMass &gt;</type>
      <name>initBreitWignerMass</name>
      <anchorfile>classThePEG_1_1BreitWignerMass.html</anchorfile>
      <anchor>315be7852a169d2c714b3d69e2b09c7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ColourPairDecayer</name>
    <filename>classThePEG_1_1ColourPairDecayer.html</filename>
    <base>ThePEG::FlatDecayer</base>
    <member kind="function">
      <type>bool</type>
      <name>shower</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>93921813ab3c3d774bf22f37d488bd2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>060a5a485b7296c9a4f445448c197084</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>getChildren</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>6d277027b4537b65c02db3d846644bf1</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;parent) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>dc2fc87390f66ae91dd025641302c578</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>bf14dc7405208eaaff05b3e8e6dbf518</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>9949abeb77e14e1a0253569971eb6bcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>13b87cc07a99d2f3d6068bee08f11d6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>c8966a0283c719beebab2293d3d94088</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>da7293aa2f00269858ca5cac64d71580</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>fc78633e899b9e406987857b782d94e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>bf5d3786a5a290b14bb699d07e62834f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>9d5e7ff7d71d74f2a9d9543540e6ac2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>33386821d21f85f1e75741e29aba9bd8</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>b7b269f7b811e881eed7000695c2d0a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ColourPairDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>9b15117e41541e3b780dbc37b9d7adf1</anchor>
      <arglist>(const ColourPairDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>doShower</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>5693f4fe9ad5726acca3500ca0b594e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; ColourPairDecayer &gt;</type>
      <name>initColourPairDecayer</name>
      <anchorfile>classThePEG_1_1ColourPairDecayer.html</anchorfile>
      <anchor>017a41732a174de9f8b93a340ea7977d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::AndMatcher</name>
    <filename>structThePEG_1_1AndMatcher.html</filename>
    <templarg>T1</templarg>
    <templarg>T2</templarg>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>AndMatcher&lt; typename T1::CC, typename T2::CC &gt;</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1AndMatcher.html</anchorfile>
      <anchor>fe6b9d5e6b6060b802ee4b8f6aac2c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1AndMatcher.html</anchorfile>
      <anchor>eb9c34fa0e27db2d33c2e3cc1ea5d560</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::OrMatcher</name>
    <filename>structThePEG_1_1OrMatcher.html</filename>
    <templarg>T1</templarg>
    <templarg>T2</templarg>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>OrMatcher&lt; typename T1::CC, typename T2::CC &gt;</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1OrMatcher.html</anchorfile>
      <anchor>fbd34dda5d876291b909931cb0e7f852</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1OrMatcher.html</anchorfile>
      <anchor>3b5cfc856c6eb4daa644c97e1d60f5af</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::NotMatcher</name>
    <filename>structThePEG_1_1NotMatcher.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>NotMatcher&lt; typename T::CC &gt;</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1NotMatcher.html</anchorfile>
      <anchor>a7b4f74cf5f4ee691405144b35d3a684</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1NotMatcher.html</anchorfile>
      <anchor>6b6b8cda66e583efc50b7cadda11afa2</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ConstituentParticleData</name>
    <filename>classThePEG_1_1ConstituentParticleData.html</filename>
    <base virtualness="virtual">ThePEG::ParticleData</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>constituentMass</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>15f872433c0192ebc7c527a727e14fe8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>8bec4c0d8913eb97f97ef0da8d44d2fe</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>aa64ab35c31e398b1649aca67985d9c0</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>c558507137cb5f02a526fd829df6b22b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PDPtr</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>55e35030f7fc718d5fc90fac154db4d9</anchor>
      <arglist>(long newId, string newPDGName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PDPair</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>42beb23f047a91360ec39a99f9d5b138</anchor>
      <arglist>(long newId, string newPDGName, string newAntiPDGName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstituentParticleData</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>389e177abe12c92d6f972610f8aee8f4</anchor>
      <arglist>(long newId, string newPDGName)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>readSetup</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>a8827f43ada36b4af58306149959da5c</anchor>
      <arglist>(istream &amp;is)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual PDPtr</type>
      <name>pdclone</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>9e8f59de2ea0afbe3ec1bec2d0afaf52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>b5e4a6b6525e3ef36918e93be35b9477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>53c92d0c69d314cc4745a3c2ec831567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>4b6e4822f71f57b1a2413c3984d89ab9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>b9497de1c5549248658efe283a2dc5ee</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>64a37d6af4ecf94c7fb13745dee7b7e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setConstituentMass</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>5766a28f0b0ac23e1c3a4b9ba99492f3</anchor>
      <arglist>(Energy m)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>defConstituentMass</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>6c175fe6ca3f16a6cb446af2c0d88a32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ConstituentParticleData &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>590e0fb67479e989edadf5c8da8a65a8</anchor>
      <arglist>(const ConstituentParticleData &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theConstituentMass</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>15735507cf7482e575ed1d95dddfc938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theDefaultConstituentMass</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>929c8e379c5e5bc82ebee6e4df682056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; ConstituentParticleData &gt;</type>
      <name>initConstituentParticleData</name>
      <anchorfile>classThePEG_1_1ConstituentParticleData.html</anchorfile>
      <anchor>3aec4a52a8ad922ba1e8a9a3202f0897</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::DalitzDecayer</name>
    <filename>classThePEG_1_1DalitzDecayer.html</filename>
    <base>ThePEG::Decayer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>3a614ea7aba11b1e562bf7afe244e3af</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>0a0becfe3eec459cc3353508bc42e61a</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>cbb3f45e782e4b960eea6352770cf4dc</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>708d9b30449dfdab57362621556fc0e1</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>71bd58c4a157c4f33caa32bb16305427</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>335f4544e0bf3c2de45dbe6f861cc4ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>ee9fc9c78d31c32a778bb8eb33c58b62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>d527284c206faf939b75d0fc4e02cd06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>f22b8f295d632064051586e0ff1f524e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>9ae3a73c1aaa20a30022899ef1307905</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>9cd5c2f811a693dd18379df09c2e2720</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>147da1fa178b4cec9be8b584f3abbc6d</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>c7969b07057e094124832c9f7e6e963f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DalitzDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>88df91198cb45811196897b541ae313d</anchor>
      <arglist>(const DalitzDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDPtr</type>
      <name>rho</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>8053d878319f2ccc1dcea70ae70a8e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; DalitzDecayer &gt;</type>
      <name>initDalitzDecayer</name>
      <anchorfile>classThePEG_1_1DalitzDecayer.html</anchorfile>
      <anchor>84e3b7245a5f6a5d4677aceff6086d44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Decayer</name>
    <filename>classThePEG_1_1Decayer.html</filename>
    <base>ThePEG::HandlerBase</base>
    <member kind="function">
      <type>Ptr&lt; Amplitude &gt;::pointer</type>
      <name>amplitude</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>c6d078c1bd3f48e1c6df3469ffd3bc40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>854091f039e82bac81a9536bdb74f79e</anchor>
      <arglist>(const DecayMode &amp;dm) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>needsFullStep</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>8d79a3facf3fcd6ff7650bfc13858d0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>ee845db72979cebfb843e4d949c9d9ca</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>b8929a0046b35a63aac26814436de5b5</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p, Step &amp;step) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>brat</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>0629ab62a9ac2860b20906d4b4ecf699</anchor>
      <arglist>(const DecayMode &amp;dm, const ParticleData &amp;pd, double oldbrat) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>brat</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>c50036af28fcd60c184aa3d653de7b22</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p, double oldbrat) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>getChildren</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>a2538d464bf854a3d5f5dcbcbaa7ee24</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;parent) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalBoost</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>15b2b132e9f4dd67c4dca4c137f86159</anchor>
      <arglist>(const Particle &amp;parent, const ParticleVector &amp;children) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScales</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>4ae85a28934b30875715b495b0907610</anchor>
      <arglist>(const Particle &amp;parent, const ParticleVector &amp;children) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>fd53c6976a967e4dcfbc84a5c2520f6f</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>fef8a5ed9bdadc68c4e24cced5e2514d</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ParticleVector</type>
      <name>DecayParticle</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>306865e0b03d10a0ea34e2c0f970210f</anchor>
      <arglist>(tPPtr parent, Step &amp;step, long maxtry=1000)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>4241a9b54c2bc42d47ad30ad1ca5a852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Decayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>7d565dbc8bf7a10cc19ee016f08410a8</anchor>
      <arglist>(const Decayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ptr&lt; Amplitude &gt;::pointer</type>
      <name>theAmplitude</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>e6720610f9da88711813e57cd23d5002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; Decayer &gt;</type>
      <name>initDecayer</name>
      <anchorfile>classThePEG_1_1Decayer.html</anchorfile>
      <anchor>ce5de1e2131ff3a348fabbbfbf2f8ded</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::Decayer::DecayFailure</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Decayer::DecayFailure</name>
    <filename>structThePEG_1_1Decayer_1_1DecayFailure.html</filename>
    <base>ThePEG::Exception</base>
  </compound>
  <compound kind="class">
    <name>ThePEG::DecayMode</name>
    <filename>classThePEG_1_1DecayMode.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="typedef">
      <type>vector&lt; tcDMPtr &gt;</type>
      <name>ModeVector</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>535fa8bb0e0ecf8e3d576cc4be936150</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; tPDPair &gt;</type>
      <name>LinkVector</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>7627a3cf99cad99a50c9124d9f37d929</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DMPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>87a5c29e6b7cfc8669cefe08370a2c32</anchor>
      <arglist>(tPDPtr pd) const </arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>tag</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>f1254c5e2059ebdc30b342db4b9c696a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcPDPtr</type>
      <name>parent</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>3c49fe8a80f97fdf804b57457edbd2f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleMSet &amp;</type>
      <name>products</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>89052df2d8e3c296f3e743ffb147b566</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PDVector &amp;</type>
      <name>orderedProducts</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>fbc164e94f4ac72ebee55883e222131c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PVector</type>
      <name>produceProducts</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>506d721c179848706d6d841e4b3b2a2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ModeMSet &amp;</type>
      <name>cascadeProducts</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>3bfd2dfd92df3d5aeb5b15fffa29c067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const MatcherMSet &amp;</type>
      <name>productMatchers</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>18ef1f274542619d7a128e9b0fee5360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPMPtr</type>
      <name>wildProductMatcher</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>3fe4422e8d0913062c86288902ab4665</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleMSet &amp;</type>
      <name>excluded</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>dce73a541a038502e72f294c602c12de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>brat</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>430d69e8089f4f00deb28507f51c970b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>brat</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>e903d015c0ce03dd29708608ee5b1c99</anchor>
      <arglist>(const Particle &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>tDecayerPtr</type>
      <name>decayer</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>b988665ad6d6f8188c0af6887c6a269b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>includes</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>0e90e560461474465cda2ee2a360ba8c</anchor>
      <arglist>(const DecayMode &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>tDMPtr</type>
      <name>CC</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>4322fbc9981fe9439b3bef806c1bd813</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>87db0b17cf833ba878dca178cf31a3f3</anchor>
      <arglist>(const DecayMode &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>const LinkVector &amp;</type>
      <name>links</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>c1df6d44af9ea17483b5612d59156281</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ModeVector &amp;</type>
      <name>overlap</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>64c0026fde36bc1d7fe70a0e5460de07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>synchronize</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>25a205c78493f6b3b2216911682fc53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>82c195bc5872add9db8c2cd66b895189</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>5c0d59933f9b30c3c90110d2c5bd338e</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DMPtr</type>
      <name>constructDecayMode</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>ab414526bf88bcab299dfd8315f5f07a</anchor>
      <arglist>(string &amp;tag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>d7222ec7dc6ec5474cf9013c53a54d35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>parent</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>9a3e6bf5cc09872f1ca414620dc416dc</anchor>
      <arglist>(tPDPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>brat</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>db92ba1a92542ab472404492aed4f7c7</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>switchOn</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>671f0216397547f0314bd59792268609</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>switchOff</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>bb8c9b09d1b165dd57044953f6a869a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>decayer</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>864f9a49c6582796ca673cadc2cbbabf</anchor>
      <arglist>(tDecayerPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addProduct</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>9c8f574c6bcf81c05aeb6bbf079a7300</anchor>
      <arglist>(tPDPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addLink</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>da155982c7732369dc379d566ac18d2c</anchor>
      <arglist>(tPDPtr a, tPDPtr b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCascadeProduct</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>3d55a2b89011c2722929b73aa10aca32</anchor>
      <arglist>(tDMPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addProductMatcher</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>1bb7cdb2f2412231567929bf5d3b9fb1</anchor>
      <arglist>(tPMPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setWildMatcher</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>44b132398fbcaddd191fd5b2be190cb8</anchor>
      <arglist>(tPMPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addExcluded</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>562d290cc2385bb989259346edbcbb9c</anchor>
      <arglist>(tPDPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DecayMode</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>4092d0db4a60ac15661591f67be6293b</anchor>
      <arglist>(tPDPtr newParticle, double newBrat, bool newOn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DMPtr</type>
      <name>dmclone</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>47593362dd062b30e30b6979e33fc11a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>readSetup</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>f5656c7f08b7766e9db8ad10fea7f4c0</anchor>
      <arglist>(istream &amp;is)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ParticleMSet &amp;</type>
      <name>products</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>c07027dec85df04ee8173acd8713db7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ModeMSet &amp;</type>
      <name>cascadeProducts</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>e99ed6f11e3533eb1c77cb8adbed5ce6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>MatcherMSet &amp;</type>
      <name>productMatchers</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>2ad23c805d231321f50802ba2063924f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tPMPtr &amp;</type>
      <name>wildProductMatcher</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>b90d1a3158a222100b29c86c6191849c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ParticleMSet &amp;</type>
      <name>excluded</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>279bae716cba984613c66671206bd2e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>0069deb65014f8f3cd96bb4c5b2b5719</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>cd16d376d8647c0f5bef218c9ba301cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>bae57df27c5546ea23efecabbce977c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>4212671f9eb2ecdb40403f2bed0564f3</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>8fafcf75d9371a8e42de47bb41bf9f7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>b94fa4df33b3fdb1f9681d5401aaa095</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>6c9e8b2ac4b222c0ab907ec28ebb1dc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static DMPtr</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>2bc22f392c3afeff5579013e5dd7cd03</anchor>
      <arglist>(tPDPtr newParent, double newBrat=0.0, bool newOn=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>addOverlap</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>424bae8b7ba174d8fa01dd07495b3646</anchor>
      <arglist>(tcDMPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>resetOverlap</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>42e066051bac15c2586b4625fcfb57ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>compareId</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>451d82ef8721e6ee274e8b8571e80720</anchor>
      <arglist>(const ParticleMSet &amp;, const ParticleMSet &amp;) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>ParticleMSet::const_iterator</type>
      <name>findId</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>d17237159422a24530afb1ff434923bb</anchor>
      <arglist>(const ParticleMSet &amp;, const ParticleData &amp;) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>string</type>
      <name>makeTag</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>da63338aaedd2b06f6282fe6e63ac4a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>resetTag</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>e33e34ad1b740336995b574b373b0750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setOn</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>2e61418fbbd4d7317c0262889eb7f5bd</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>long</type>
      <name>getOn</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>21643bd70d2f69d4fdfa777bc4921a26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setDecayer</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>c723c0b000d0b6af0236bb5591742363</anchor>
      <arglist>(DecayerPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DecayMode &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>20eb1568cf502e165a5a767948d62eff</anchor>
      <arglist>(const DecayMode &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theTag</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>91a6e8d763b82d73ced4e218a7d85e9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theBrat</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>0f8b76b0b5591fe960d3e8d8d0ed54ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isOn</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>63b562411e5459cb385b31cd1c448e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPDPtr</type>
      <name>theParent</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>ce768db2035ad1c29fceb05e29ed2197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleMSet</type>
      <name>theProducts</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>a8c8cb9a5ddd0b221ea4e20c10987ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDVector</type>
      <name>theOrderedProducts</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>da790d739d1ffa937b9907db19e39e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ModeMSet</type>
      <name>theCascadeProducts</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>682cfcebba4821438529bb1120056c2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MatcherMSet</type>
      <name>theMatchers</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>034245286c98585133387eb5f165493c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPMPtr</type>
      <name>theWildMatcher</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>b45ce7e8964a86cb753b0a6de7ca0351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleMSet</type>
      <name>theExcluded</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>c24bce324a2e278f537b9d54be2dd0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ModeVector</type>
      <name>theOverlap</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>3cd8b8d6a1a616455ccc299aecce1475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DecayerPtr</type>
      <name>theDecayer</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>582d30820922101a121ed4f0d3e5f2de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tDMPtr</type>
      <name>theAntiPartner</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>0d4e7ec781de44a0c2f15604dce15406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LinkVector</type>
      <name>theLinks</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>aaefa785674d0758f3f46b9b923cec11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; DecayMode &gt;</type>
      <name>initDecayMode</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>8e3e53ec14db35df25837424101176e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ParticleData</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>0ce2e21b756394460b60f78c44fa1f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>RemnantData</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>ff30465ade60740cb717ffe752b64410</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>EventGenerator</name>
      <anchorfile>classThePEG_1_1DecayMode.html</anchorfile>
      <anchor>dc3d8a76fa140372d28a5a54560e775b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::DummyDecayer</name>
    <filename>classThePEG_1_1DummyDecayer.html</filename>
    <base>ThePEG::Decayer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>19c95070ec4e7159c89b58e49d1bc6cc</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>0aaefe2f89d6c88bfef2fc52af3af230</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>brat</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>49f0345eee487bff3dd4d16107563c58</anchor>
      <arglist>(const DecayMode &amp;, const ParticleData &amp;, double) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>brat</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>8ceec381b75c1dd737f595e60c190832</anchor>
      <arglist>(const DecayMode &amp;, const Particle &amp;, double) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>1ac544f5bd74141859e28e74c6bd2a19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>295ef9e0e4dd2677d4e59cb3ff5b4e73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>7cecbee95a2338c641037ddbb2490c86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>0b8f07c36d1b3ef136276e0252a2f84a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>bb6a9eff9d5d96f3c2572b9b4c4baf7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>88f659a0b3958defe613dbf16d6ba8ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>d3ac9280b718d3ecc7df81dc7cb3b4b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>766e5efe0820c44bff56abdd5277c5b7</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>bbd7669d117ad38a8a915c5f455f70e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DummyDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>4a1fd30cee0fa1c2a7599c080f9ef6be</anchor>
      <arglist>(const DummyDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; DummyDecayer &gt;</type>
      <name>initDummyDecayer</name>
      <anchorfile>classThePEG_1_1DummyDecayer.html</anchorfile>
      <anchor>19c5b6f336f36357b7add824ace394f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::FlatDecayer</name>
    <filename>classThePEG_1_1FlatDecayer.html</filename>
    <base>ThePEG::Decayer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>3b6214f9b67ed2312d9ed558c962cefd</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>e3d7af86c68f09f32914548fddc484ea</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>49b248832b7137524d0f0d8ec2a35a3e</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;parent, const ParticleVector &amp;children) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>bf2a6d28363cfcf08462b95ae86b0cb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>31bf1d7894363690353d8c4eb6c43304</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>543168603480ec9d5065cd3dc681fc37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>73bfd4295ecc61e3d7b72283bfe7a418</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>e35003d2c0d2e264a085675eb2dfd569</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>09803c8f4d743510c1e777b79bc1f78c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>73f9ab9418f455504cf3fa7ce77ca601</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>8f73f0357222cd201f2471768a2aad15</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>541a80e9fba9fcbc45d75af21bccde4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>FlatDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>18b9a0b2cd5d7712a00eae6c0c287ae7</anchor>
      <arglist>(const FlatDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; FlatDecayer &gt;</type>
      <name>initFlatDecayer</name>
      <anchorfile>classThePEG_1_1FlatDecayer.html</anchorfile>
      <anchor>20604df4f0f905c8630e4e85457c543e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MassGenerator</name>
    <filename>classThePEG_1_1MassGenerator.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>4880a5f5bb97fd16c2ba87fdf93d6ba8</anchor>
      <arglist>(const ParticleData &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Energy</type>
      <name>mass</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>a483d35b8ddeaa7dd61daec9ea433101</anchor>
      <arglist>(const ParticleData &amp;) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>0544b79d1b706e4b3dabb7ddc3c656ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>d905d84e36af6f1249542d7e35fe26e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>c33afde26e450e7dad83d71324791c56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>d878677ec8b7d909e36429cc3ce63036</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>c84ec575d248cf601885a5209631982e</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>9181da803cb80e4ff5ae72bf6428bdd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MassGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>ebf615dc69859bb2462639831a24ed0b</anchor>
      <arglist>(const MassGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; MassGenerator &gt;</type>
      <name>initMassGenerator</name>
      <anchorfile>classThePEG_1_1MassGenerator.html</anchorfile>
      <anchor>9405459d6ca98eb07965ad4d2fde6d21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Matcher</name>
    <filename>classThePEG_1_1Matcher.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::MatcherBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual PMPtr</type>
      <name>pmclone</name>
      <anchorfile>classThePEG_1_1Matcher.html</anchorfile>
      <anchor>4e1d4f79b8d41deb118d97044a34a486</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PMPtr</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1Matcher.html</anchorfile>
      <anchor>011e5f981c35e9521a756ff4b5fad72d</anchor>
      <arglist>(const string &amp;newName, string antiName)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1Matcher.html</anchorfile>
      <anchor>60a2d441b0015a02f4832116584e05d3</anchor>
      <arglist>(const ParticleData &amp;pd) const </arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>classThePEG_1_1Matcher.html</anchorfile>
      <anchor>52bf64e4cabf108f4a54fea6df36dcdc</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCC</name>
      <anchorfile>classThePEG_1_1Matcher.html</anchorfile>
      <anchor>06b8eb86fcc4ffdd2c2cc64922ca6d17</anchor>
      <arglist>(tPMPtr, tPMPtr) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Matcher.html</anchorfile>
      <anchor>34c98e604da5f674dceeded674a8c04a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1Matcher.html</anchorfile>
      <anchor>67fbbd06d0df2bf15403358bc4cb319a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; Matcher&lt; T &gt; &gt;</type>
      <name>initMatcher</name>
      <anchorfile>classThePEG_1_1Matcher.html</anchorfile>
      <anchor>c414d6ea512228aa06ac6041e738ea60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::MatcherType</name>
    <filename>structThePEG_1_1MatcherType.html</filename>
  </compound>
  <compound kind="class">
    <name>ThePEG::MatcherBase</name>
    <filename>classThePEG_1_1MatcherBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="typedef">
      <type>set&lt; tPDPtr &gt;</type>
      <name>tPDSet</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>edf780a7f90bafe8cb9608dcd95539c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; tPMPtr &gt;</type>
      <name>tPMSet</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>2614ed0053f7a3097079637705e14fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tPMPtr</type>
      <name>CC</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>9a3336360fd5356bed2657b18feb44e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>2f8a41fc85256e71a0b6de4e8e99be08</anchor>
      <arglist>(const ParticleData &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PMPtr</type>
      <name>pmclone</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>7fee08d1eeadc8aa2ae195fc11daa0a2</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkp</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>d25c10545b01a8d10bdea26d61d1dacf</anchor>
      <arglist>(const Particle &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matches</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>85bbc480ec9bfa40310dd1c4945d0ab8</anchor>
      <arglist>(const ParticleData &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matches</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>373df76f18970495724045f2c5d8a4e6</anchor>
      <arglist>(const Particle &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matches</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>0427bc48562100d9cf9d4d99c1bc8f5f</anchor>
      <arglist>(const MatcherBase &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>const tPDSet &amp;</type>
      <name>particles</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>55f1afc71cbd072f70dd0841ed6f22df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const tPMSet &amp;</type>
      <name>matchers</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>7094e2e4396979265e79fb86519d710d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>minMass</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>6098cc11205ea2f4d800e001709842bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>maxMass</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>bb44c4aeb870266b95b1a3f2f42bb397</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>mass</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>e3c992d5ecbf92a7c062e3c21b524ea2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>width</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>f4a2a4434f847bec838e628375e3f34a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Length</type>
      <name>cTau</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>f86c7c20a70a058c3477119e333f688c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDT::Charge</type>
      <name>iCharge</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>e3cb783eef8b09ac9745980e0fd51ca7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>charged</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>c24daa44e8cfc1e277dada74faccaee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>positive</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>01e5d1471b3c71d534108a16af0dd991</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>negative</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>b9046ef5f6d6165e47d57b7ca16fb357</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDT::Spin</type>
      <name>iSpin</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>7db42c6820e8abd3b56bbb4c81ace2c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDT::Color</type>
      <name>iColor</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>025d25e2e26b3645e0fcfba57263b272</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>colored</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>b5ef0e02e9f6a0e75f6dbcb3a9049216</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stable</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>cd292e754bed50a661030e87dd88033d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>4692e4d799438087f83712189c24e1c7</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>c8c76e1e3a08de165c696f23631ebfa0</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>f0f30f94caf7dd57716bd9a1d3cea675</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addPIfMatch</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>d35915096e79ba0c449485b0ec4acc9a</anchor>
      <arglist>(tPDPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addMIfMatch</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>2fc050f901f9e946ae145996c5757e43</anchor>
      <arglist>(tPMPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addPIfMatch</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>7c54da43d302b6953ff9912601f9e242</anchor>
      <arglist>(Iterator, Iterator)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addPIfMatchFrom</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>aac37783a8236d962830ed1ccbeddce0</anchor>
      <arglist>(const Cont &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addMIfMatch</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>b5c49a4fd0197041cffe9493cea1516b</anchor>
      <arglist>(Iterator, Iterator)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addMIfMatchFrom</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>6f63ded94d27d114136da37f2f7b8185</anchor>
      <arglist>(const Cont &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>f3c9b25ad6b4b6970aad2857c9ece9b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCC</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>3bc2e9c91ca90dc605d5ceb8841d9222</anchor>
      <arglist>(tPMPtr, tPMPtr) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>613e767dfe54e2bfd7cbd3572404df05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>02ba9d51ad676aad77ae7a2aa31b8c93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>ccb49b7b252ea52ec1794924c0371d7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>5fd67c71331c9736221dc080eb914e8f</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MatcherBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>5e6f93a015ef739f13f7b7900b7ac640</anchor>
      <arglist>(const MatcherBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPDSet</type>
      <name>matchingParticles</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>25446572fda4e358802ba43544ce8d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPMSet</type>
      <name>matchingMatchers</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>5695a235872c8916dec528461ac1fe50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMaxMass</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>4eb54807cc62dbec2d52f87b93afc638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMinMass</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>c5f81da77215cbaf6250c97dc66c118c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>commonMass</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>ee1eff27787e748544b04e7ca7fd9319</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>commonWidth</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>8136f8f92debf43fbebc33405b7479c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Length</type>
      <name>commonCTau</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>bf740eb0f5ae3f4ad461dd35cbb48982</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Charge</type>
      <name>commonCharge</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>bb305dcbab624b5050d95646c504995a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Spin</type>
      <name>commonSpin</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>38d8529c763630a0e2249de3549c2275</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Color</type>
      <name>commonColor</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>6ae54f02d558a22ed9fb1b2997683af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>commonStable</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>6f477f3131e0350dff1922526f14fdb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPMPtr</type>
      <name>theAntiPartner</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>23c81e394c46d4ccb771b47878072cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; MatcherBase &gt;</type>
      <name>initMatcherBase</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>ac0a7359af40f8cda7064627117824ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Repository</name>
      <anchorfile>classThePEG_1_1MatcherBase.html</anchorfile>
      <anchor>aeade420d983c3fba7d0098833055006</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::OmegaPhi3PiDecayer</name>
    <filename>classThePEG_1_1OmegaPhi3PiDecayer.html</filename>
    <base>ThePEG::FlatDecayer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>94bcc68d90519936e73ee08b3ca6a4e7</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>521099427505c3c8904970ce4e767423</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;parent, const ParticleVector &amp;children) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>41b25d9b4fca71fc73528fd2ad9f43b7</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>ddaeac2e6b6e4b4f5a0c2f4669f67a13</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>57de3f1c019c58d461b00cecd55317f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>878b1809fd0c3c738c4f936a2bf753d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>0fcbf7ad768bb929e4b03248524a74a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>2653916941c25a7aa6016cf07a365326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>4e2fee4afeaa379d89824db9cdcda5f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>5e99f644a6f57e3d2631ffb34e819a64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>d6acc4f65c4a87d04f1d6aa8aa2de93d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>7b03d18e033f5c5e9c14e6a933ff9e32</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>52566715aa0707c9fa3345e42d0c2065</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>OmegaPhi3PiDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>459b67319a9d47b89a8e9dcf4704ab28</anchor>
      <arglist>(const OmegaPhi3PiDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>margin</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>92dfb1b77d2eea0b7cb2b0750f06e753</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; OmegaPhi3PiDecayer &gt;</type>
      <name>initOmegaPhi3PiDecayer</name>
      <anchorfile>classThePEG_1_1OmegaPhi3PiDecayer.html</anchorfile>
      <anchor>df2e5e13def7b98be9b5d9813160ae34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Onium3GDecayer</name>
    <filename>classThePEG_1_1Onium3GDecayer.html</filename>
    <base>ThePEG::FlatDecayer</base>
    <member kind="function">
      <type>bool</type>
      <name>shower</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>2291a80baf559bba5ca21c105506d687</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>minGGMass</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>425e2606307918628765a3f96f357845</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>6aa4f3a65e46e036173e418913203aef</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>0330be4c04c5060c0dfc61b91de568a9</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>6f427d74b8061a850ae5df8cc41b4a4f</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;parent, const ParticleVector &amp;children) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>0a573e0b617b4cd0eeb12da7f8735fc3</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>cdd401aef470c6ef5bedde13a94a822f</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>1fdbbd85951fda20c223eb8de0748800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>9c587b29e117119b0d853461eb2fc3e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>21386e8922d082c121c85c979faf298a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>37d9df0bf35599ad7e0b8bc9536eaf15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>460175e423c4ed08ec346c0a3d4e6ab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>e99adc89a381728bc7b83a3851de8921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>6508e234aad67480b049ae3630774708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>4054647a957d57e4dcd34ec5d60be609</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>0cab82d84ffb3bb8325a870b5dc7eae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Onium3GDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>d1902fecd791f0aefb3e048c8e7b8e79</anchor>
      <arglist>(const Onium3GDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>doShower</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>dcb81fdde08a98cc872e0ce25629b1c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMinGGMass</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>d6e47cb0f3ccd385468157d1006835d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Onium3GDecayer &gt;</type>
      <name>initOnium3GDecayer</name>
      <anchorfile>classThePEG_1_1Onium3GDecayer.html</anchorfile>
      <anchor>f26f1a5b57e4d84cc7ef11f22154e1af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ParticleData</name>
    <filename>classThePEG_1_1ParticleData.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="typedef">
      <type>Selector&lt; tDMPtr &gt;</type>
      <name>DecaySelector</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>4c8c600ddfc88872065d5f4f64cb1ba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>mass</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>7847fdb00d3ed5ece1d7f118e3fdf9ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>massMax</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>61143904ad0c66c7238b1c93086956f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>massMin</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>a8985bd290cd8ae936e1db2305fbb3f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>constituentMass</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>d55dcc143212e4aa4b3b04c22bcf2bf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>width</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>659afc9d020381caf94bfeb40a01141a</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>width</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>b74622b40c0f49fa5c916221beda0af4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>widthCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>53094f49af884fc3f79751728bab9081</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>widthCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>c3a4eb3b53c5cec4d1a65da80cda925e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>widthUpCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>450a0e6bd5cad8984989f1c7d6557ad5</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>widthUpCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>f8e68cf5f90b89de200dc73356a30f38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>widthLoCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>6515e6292cf35f6084819bcddf084e5b</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>widthLoCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>e7abc0d57cfbd39d87e8667654a91203</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Length</type>
      <name>cTau</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>9bd57fdf66ce5817657fe39d91ada6a3</anchor>
      <arglist>(Length)</arglist>
    </member>
    <member kind="function">
      <type>Length</type>
      <name>cTau</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>952e0a7c37f8b92f2dd3033cef3cbf5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDT::Charge</type>
      <name>iCharge</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>a791b166fd4b9a49854858068353509d</anchor>
      <arglist>(PDT::Charge)</arglist>
    </member>
    <member kind="function">
      <type>Charge</type>
      <name>charge</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>a16862367a918c2b9fe353cc3104a8b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDT::Charge</type>
      <name>iCharge</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>f979176a5f47826b37c040ce9ba0010d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>charged</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>1ea9b0d7339f876eb0e3b8519f58c6f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>positive</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>bcbeea7d9c37af4b4fea1aba8880c674</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>negative</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>d0a8a8be3d084b34ab91f17527372cac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDT::Spin</type>
      <name>iSpin</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>18038628b99f33d6ad08e542affcfaad</anchor>
      <arglist>(PDT::Spin)</arglist>
    </member>
    <member kind="function">
      <type>AngularMomentum</type>
      <name>spin</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>426ec1d68bc432398b692ce16a98f575</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDT::Spin</type>
      <name>iSpin</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>6cd042d891c06bfd98a9192e7b3967b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDT::Color</type>
      <name>iColor</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>9eb14e5ade012fe3ddfba22811cd0a6d</anchor>
      <arglist>(PDT::Color)</arglist>
    </member>
    <member kind="function">
      <type>PDT::Colour</type>
      <name>iColour</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>a11cf51baa7f957f060099a9bed1f160</anchor>
      <arglist>(PDT::Colour)</arglist>
    </member>
    <member kind="function">
      <type>PDT::Color</type>
      <name>iColor</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>88440096ebcf72867bbfe418a9f686fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PDT::Colour</type>
      <name>iColour</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>bdbbb863610f2f53f9ac350d0f1acd79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>colored</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>058bfcd1f183ce43e5c7b984599c24ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>coloured</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>e44a2503cfc605138e25cb6fdcb45406</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColour</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>f0f0c1e8eb01903942e77f5ec031cec3</anchor>
      <arglist>(bool anti=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAntiColour</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>68e1520e46d4f6194b9ef24db613c5fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stable</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>a5b03da6d249e6669997345c5f5f73c1</anchor>
      <arglist>(bool stab)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stable</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>9365ae3f2e6a6c82a479dc9eae0a110d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tPDPtr</type>
      <name>CC</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>3d0c2048736d540154e370a32f9a19e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>synchronized</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>8ecef4a9e67bdc3ee6484790856fe5aa</anchor>
      <arglist>(bool sync)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synchronized</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>e3b2377f1249eb7c32aad831e2114b9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>synchronize</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>08e1a9d2ff1fe3df5255dd811e2bb4bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>massGenerator</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>1309edf89f2a7e4d15530a0cbe87b369</anchor>
      <arglist>(tMassGenPtr)</arglist>
    </member>
    <member kind="function">
      <type>tMassGenPtr</type>
      <name>massGenerator</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>c6707e9ea2f8f48b90e05c99e2511973</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>widthGenerator</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>ba0c17d7b9be07291af587ecea301c32</anchor>
      <arglist>(tWidthGeneratorPtr)</arglist>
    </member>
    <member kind="function">
      <type>tWidthGeneratorPtr</type>
      <name>widthGenerator</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>b0921745006c6f13c25c87a51e110f09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>variableRatio</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>256bdfc5d1f03bbfa5b1e8db06ba4ee8</anchor>
      <arglist>(bool varRatio)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>variableRatio</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>8c1344699c17bb4cb6d85ab82f9a877d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>id</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>8f30a63396d6093cf4954c281aa0d428</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>PDGName</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>79a8826b9755209e77813ffa0fce9320</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>genericName</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>34c4328bf25a64f5e9787f52291dc2f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PPtr</type>
      <name>produceParticle</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>5a00a6588f8ab889d174c3aace6f2643</anchor>
      <arglist>(const Lorentz5Momentum &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>PPtr</type>
      <name>produceParticle</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>c6dba705bd50228891db4aca79d1a623</anchor>
      <arglist>(const LorentzMomentum &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>PPtr</type>
      <name>produceParticle</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>487b29995ad26597e0f2a02a56cc13c4</anchor>
      <arglist>(const LorentzMomentum &amp;, Energy m) const </arglist>
    </member>
    <member kind="function">
      <type>PPtr</type>
      <name>produceParticle</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>16884b9dcb6ec9331eb057b5403623b7</anchor>
      <arglist>(const Momentum3 &amp;pp=Momentum3()) const </arglist>
    </member>
    <member kind="function">
      <type>PPtr</type>
      <name>produceParticle</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>60868669aeee388b4ee6a67002a19ff2</anchor>
      <arglist>(Energy m, const Momentum3 &amp;pp=Momentum3()) const </arglist>
    </member>
    <member kind="function">
      <type>PPtr</type>
      <name>produceParticle</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>18157f1a5adfeb260a84f9ecf33a9691</anchor>
      <arglist>(Energy plus, Energy minus, Energy px, Energy py) const </arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>generateMass</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>84c393057e7f86f52d1f9617be39d4ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>generateWidth</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>d18ee8648d4b7dd2e4227e54aa7a31b4</anchor>
      <arglist>(Energy mass) const </arglist>
    </member>
    <member kind="function">
      <type>Length</type>
      <name>generateLifeTime</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>5eecb00119f8c07d0a2ce2f3c0eef245</anchor>
      <arglist>(Energy mass, Energy width) const </arglist>
    </member>
    <member kind="function">
      <type>const DecaySelector &amp;</type>
      <name>decaySelector</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>fc2c038b39b6cd25afe0d0f22f8d249b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tDMPtr</type>
      <name>selectMode</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>3c56ed291eb28723187fc713be57491a</anchor>
      <arglist>(Particle &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>73ddf1b1f013ee32559919d2ff18f15f</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>fc80d19bb19d9d252d42e2750409cbc6</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>2fffce75df45679427bba786ff977608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PDPtr</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>8a73e9e24c048bf05814a0d92afa5ad6</anchor>
      <arglist>(long newId, string newPDGName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PDPair</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>d551cac9cf15c80d352759ba2ea1b491</anchor>
      <arglist>(long newId, string newPDGName, string newAntiPDGName)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual PDPtr</type>
      <name>pdclone</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>0cc0b7928ce30049e688a338cfdf795a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ParticleData</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>4375cf1466ad9b493dbe89b7910d177b</anchor>
      <arglist>(long newId, string newPDGName)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>readSetup</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>6e02afd24f0f0455e114d2af7c5160ba</anchor>
      <arglist>(istream &amp;is)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDecayMode</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>4a200777bdffeecd45927fef3ac5882d</anchor>
      <arglist>(tDMPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeDecayMode</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>968f69e1080f41b31379ea66fdeb5eb4</anchor>
      <arglist>(tDMPtr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>980fb7516eb16ee765339d03ba633eaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>762412b7121f1f5649b885f94ef73a6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>f89275b3bfd5c34366ae91117977a57e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>968fc233b4f3e3e2c1b32cce46f7dcda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>870dc21defd0294593fffa8f682a6de7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>ad3cab7e1f9be588e4f2851701f2f2b7</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>05becad6abb294c54343ae0a7d3e7058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>antiSetup</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>fdc553ea68c5158e9f014ff25fcdfbc1</anchor>
      <arglist>(const PDPair &amp;pap)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>6a7aed183079198d9ca7c2ac90acb979</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>defMass</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>fe85975f5422ed8a9d1e19fcbb2f8b3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>0938b9c58a58c946fe91d53120b27de1</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>getWidth</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>f30f5345368411fda035cee3616eb1fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>defWidth</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>c7185e29f0856cb7e1a3e0e57eecf70a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>43f25751c19827a21e14795be981a8f5</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>getCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>815e663ecf3628bfd0926a1b23f36e63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>defCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>c026bd7e0f98e3259d79f9bc8fd89f52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setUpCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>8e905a1cf3a3ce58aaaba4f028593b24</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>getUpCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>e99f0101310614f4e2ac720fdf6a1986</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setLoCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>4a59cfb3a736b0d4ef73790ef97c44ca</anchor>
      <arglist>(Energy)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Energy</type>
      <name>getLoCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>95a82669be9fc7ef3cd92799d8b1c34c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setCTau</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>fcd59aa0b74f79e534b841e85358cde0</anchor>
      <arglist>(Length)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Length</type>
      <name>getCTau</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>ede60e8dd177fe385833b6ecbe26d0da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Length</type>
      <name>defCTau</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>4e8b676d34438de237a3027f50116204</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setStable</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>5ef764ccfbba0ffb32f9b983094d8816</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>long</type>
      <name>getStable</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>6579f85898cd7353705e8b0b727c6241</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setSync</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>7af898836d32381e00154d76000235dc</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>long</type>
      <name>getSync</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>4868583fdeea8198bbac42897b8de0d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setVariableRatio</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>5f919025847afffa6aae5c8fb2a00659</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>long</type>
      <name>getVariableRatio</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>d3046890ff0ae6d8215e38975061a90b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>string</type>
      <name>doSync</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>7e0824ee17f71e9c007299f6eca9a1d6</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setMassGenerator</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>aa14710ce44c6f0798173f5509329985</anchor>
      <arglist>(MassGenPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setWidthGenerator</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>b999ed4e98736f6f9542adbce4597d55</anchor>
      <arglist>(WidthGeneratorPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setCharge</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>53961d1fa5be59620907e23a9594f3cb</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>string</type>
      <name>ssetCharge</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>cd9bed96162026a6e9f93e1297db2016</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>getCharge</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>88c90490eefa10558d0c4197be3cb5a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>defCharge</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>016e16be73bb9cf39b09a0bf6aeb67ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setSpin</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>220fd5b48eb0409862038b53539cf6a5</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>getSpin</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>ce2e8d72426f850b0855bbd7a40223d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>defSpin</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>129943f2f2adfd96bd85fcf414174c5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setColour</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>ef16238910c13c4175c8bb95bca76bfe</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>long</type>
      <name>getColour</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>919faffd2ed55ad925a2e3479e02065a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>long</type>
      <name>defColour</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>68f683c6a1df2c25fae775b9e82eb0bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>insDecayModes</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>166d6e12800af70040777f5441385cad</anchor>
      <arglist>(DMPtr dm, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>delDecayModes</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>b6fd5ad8f37624e826733720ef1cf648</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; DMPtr &gt;</type>
      <name>getDecayModes</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>de00af91531bd02b527686cabe8f1aee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theId</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>91e7ee105a4be5e1ec0be65d9c1dad3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>thePDGName</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>25606052f6b0745feebc1ec062edc3d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMass</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>d6cb22f8285bdc05a2c382f553b3ae32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theWidth</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>b4a487d960b4bc21c8d7cad529d7a394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theWidthUpCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>d59e91b8fb693e36340c246278b2f2ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theWidthLoCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>10b077642b79c1b5f5c5643176cde0c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Length</type>
      <name>theCTau</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>35db736aae1dd58bcc88fb4b38e0a0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Charge</type>
      <name>theCharge</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>c7c73fcc45e3724beff857797f6c8a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Spin</type>
      <name>theSpin</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>82dc844487d922229b6cbd28793a867d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Color</type>
      <name>theColor</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>24e980dde82504b991a8e6ca3f642c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MassGenPtr</type>
      <name>theMassGenerator</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>4c426bdf1e09d10604e0bbea732c93d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isStable</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>ffdc77c5528ac15b75274a4f2cb7df1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DecaySelector</type>
      <name>theDecaySelector</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>e944e896b48ab38402024135748c5308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DecaySet</type>
      <name>theDecayModes</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>80b96dfbcb47d82599ae906587c104c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WidthGeneratorPtr</type>
      <name>theWidthGenerator</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>206f45c587f1646269e13c4a0b7c5702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>theVariableRatio</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>e7f0cc14cd67525981e69a5dd70de34b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPDPtr</type>
      <name>theAntiPartner</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>9c5c838f413a7733d80c960d175f1ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>syncAnti</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>3cd8b29d3b934e00699273f26d1964bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theDefMass</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>f170d6cef00a21ae8df72d2b8aa452e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theDefWidth</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>1d3fc4078fb109262934706a5784757f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theDefCut</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>a93dfba1b742e87599bf7e5367b1df0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Length</type>
      <name>theDefCTau</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>26967214c942e45e0ade830a03224278</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Charge</type>
      <name>theDefCharge</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>567dbed9f43b7082cb66f4ec21b25a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Spin</type>
      <name>theDefSpin</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>11f00aca6d329c6d941e4936a4b17064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Colour</type>
      <name>theDefColour</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>e7ee461efbbce0b217919608652064d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; ParticleData &gt;</type>
      <name>initParticleData</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>0735088305b3527ce1616ce8f5fede75</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Repository</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>aeade420d983c3fba7d0098833055006</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>EventGenerator</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>dc3d8a76fa140372d28a5a54560e775b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>DecayMode</name>
      <anchorfile>classThePEG_1_1ParticleData.html</anchorfile>
      <anchor>d80f331a40b2c795abf3b82ae557f639</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PDT</name>
    <filename>classThePEG_1_1PDT.html</filename>
    <member kind="enumeration">
      <name>Spin</name>
      <anchor>167c04cdf864c256ab5fc422d229b895</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SpinNA</name>
      <anchor>167c04cdf864c256ab5fc422d229b8958f388667d74ca06a54268976de45fda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SpinUnknown</name>
      <anchor>167c04cdf864c256ab5fc422d229b895c9b167f8970aa43ced36a21fc97cd015</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SpinUndefined</name>
      <anchor>167c04cdf864c256ab5fc422d229b895b0c2d000cf32dff877aa3432200f3a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spin0</name>
      <anchor>167c04cdf864c256ab5fc422d229b89572697d879107d0e96210cb6c7a2b8566</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spin1Half</name>
      <anchor>167c04cdf864c256ab5fc422d229b89542c825b33d0b7a994bdef0fc97558b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spin1</name>
      <anchor>167c04cdf864c256ab5fc422d229b895de9d3035bdedbff281a8024f0e0b1fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spin3Half</name>
      <anchor>167c04cdf864c256ab5fc422d229b895a0d28c022a756ff2e5bd8bfd3bd16ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spin2</name>
      <anchor>167c04cdf864c256ab5fc422d229b895bc5878539c1ba00f1a9a2ddbe149844e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spin5Half</name>
      <anchor>167c04cdf864c256ab5fc422d229b89594aed50da37628310bed8e4703f348ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spin3</name>
      <anchor>167c04cdf864c256ab5fc422d229b8955d804002344e36505b672df20b026c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spin7Half</name>
      <anchor>167c04cdf864c256ab5fc422d229b8956fc3302dbfb6fdc2641daa7bf9dc84b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spin4</name>
      <anchor>167c04cdf864c256ab5fc422d229b89500a4839d8983e824b63811eaf4fa3079</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Charge</name>
      <anchor>16729c8c392d6e83b8128924577a811f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChargeUnknown</name>
      <anchor>16729c8c392d6e83b8128924577a811fa09f49d58999f1540e8b15ecf518b175</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChargeUndefined</name>
      <anchor>16729c8c392d6e83b8128924577a811fb89776e5ce87d9fab7ccf8e79b14394b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Charged</name>
      <anchor>16729c8c392d6e83b8128924577a811f42cb6dfac0186855f8d5e30eacbd0818</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Positive</name>
      <anchor>16729c8c392d6e83b8128924577a811f7a215a7c9c3b1892bf5e4747feef278b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Negative</name>
      <anchor>16729c8c392d6e83b8128924577a811ffe0699f67dbb99cb7638e6ea18d3d944</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChargeNeutral</name>
      <anchor>16729c8c392d6e83b8128924577a811f97d1a09b760e79b0aaf31f39ae9a0fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Charge0</name>
      <anchor>16729c8c392d6e83b8128924577a811fe780618131fa0e9053b3c4bb5b4e540f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus1Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f8b671b07a063c9aa49c29b3a1f317fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus2Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f48c9b13cc870146fe49e29b36db9c469</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus1</name>
      <anchor>16729c8c392d6e83b8128924577a811f0723fb1a2450190f27f41e920201537f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus1Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f6930f5fe8e2868b51bb0342ac07db4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus2Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f0c014dcf169e5cda65033caab16a1783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus1</name>
      <anchor>16729c8c392d6e83b8128924577a811f677de4412b357e80eca363130b185b24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus4Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f7491f07c33202dff08df39b95121bab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus5Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f31dbca5fb85a2fa8f445e386c5077d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus2</name>
      <anchor>16729c8c392d6e83b8128924577a811f258c0f3c3b0fde17517ed7ac730cef9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus4Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f52620e36d17f95afb4f6d9ab0bf85519</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus5Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f5572e0f261d4080d9eba0fb2ce143eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus2</name>
      <anchor>16729c8c392d6e83b8128924577a811f2f24daae8a1a036f40696a0a2e1edb91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus7Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f71209ae5d08b0120d50ec6c8b09471ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus8Third</name>
      <anchor>16729c8c392d6e83b8128924577a811fb16bbde452e75c7a2770e3b60c46d5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus3</name>
      <anchor>16729c8c392d6e83b8128924577a811fe15234535b8bc9043b194bca9b4e8041</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus7Third</name>
      <anchor>16729c8c392d6e83b8128924577a811fba9480cbe74b4ff483d47c9f5192921f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus8Third</name>
      <anchor>16729c8c392d6e83b8128924577a811f286ed71b2333af8866fcebb0f7047628</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus3</name>
      <anchor>16729c8c392d6e83b8128924577a811f8f0831bf4c67f5e690327db1894a27a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus4</name>
      <anchor>16729c8c392d6e83b8128924577a811fba2a87ce381a931a11e1e19cc524f7eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus5</name>
      <anchor>16729c8c392d6e83b8128924577a811faba73039e6d43ef40611b3abd39da347</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus6</name>
      <anchor>16729c8c392d6e83b8128924577a811f27bd36a25cf3ec21dca3ca52656d42a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus7</name>
      <anchor>16729c8c392d6e83b8128924577a811ff87e1bfc6820c862d3ed5dca82f611d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Plus8</name>
      <anchor>16729c8c392d6e83b8128924577a811f52b5620947027a40e0a4e58163556863</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus4</name>
      <anchor>16729c8c392d6e83b8128924577a811f615c7b1c87511dac359527379e157f1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus5</name>
      <anchor>16729c8c392d6e83b8128924577a811f531e1ee56b8eadd4b53334ef46f02597</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus6</name>
      <anchor>16729c8c392d6e83b8128924577a811f1da88407a37ee44929a091dcea841f16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus7</name>
      <anchor>16729c8c392d6e83b8128924577a811f4ef02be83bc88624b98cdfa714296e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minus8</name>
      <anchor>16729c8c392d6e83b8128924577a811fafff0c824dfed0ee9af25b689fe2e896</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Colour</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColourUnknown</name>
      <anchor>69e9e4e71d7c873010454353bf6a45dfc10ac16e04dafb997c9602fe73b0c533</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColourUndefined</name>
      <anchor>69e9e4e71d7c873010454353bf6a45dfcd0bbdc104b49015bdbdef16403d305f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColourNeutral</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df2305f882b6dbd7ae717d516cabf90b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Colour0</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df7a62405a7815d49a8364579f1a9e7cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Coloured</name>
      <anchor>69e9e4e71d7c873010454353bf6a45dfe67a499e4e535d3dc26dac7c7a2cd7fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Colour3</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df3501cf36f5e5287a7703ab3776b05f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Colour3bar</name>
      <anchor>69e9e4e71d7c873010454353bf6a45dfd8df46e5e2bf70cf31e16f3b37d3701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Colour8</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df5776b2da24c585e4acfb558a0b4d0311</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColorUnknown</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df49f0f706f91ec6daaa2e1b0aadb6f283</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColorUndefined</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df12431d17913f817b52b39dcc65d1b15f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColorNeutral</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df930655181e6512dccb887d8a56d2f114</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Color0</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df146233a9a4c9a4495569b27875654e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Colored</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df1687ad86155a4127540dfb09f5393870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Color3</name>
      <anchor>69e9e4e71d7c873010454353bf6a45dfceaa951abb78dc8c34088c58662c15ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Color3bar</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df080dc02768ba388abd2ea97010531ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Color8</name>
      <anchor>69e9e4e71d7c873010454353bf6a45df20b60378ed0bc6fb7bf1799a5cc3dc68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Colour</type>
      <name>Color</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>4011bf9f440cf6034bba599006756cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>charged</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>86bc36a2e6ccd1c841daf9b880467a51</anchor>
      <arglist>(Charge c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>positive</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>1362b0ffdcc7d0ea89bf015592e59632</anchor>
      <arglist>(Charge c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>negative</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>5950302f0d47de1cee38fe4b98d714e9</anchor>
      <arglist>(Charge c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>colored</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>a54293adb9baf5670e9f8429a20b66ef</anchor>
      <arglist>(Color c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>coloured</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>a216cd5f10b7c538f07ebec10d8ef934</anchor>
      <arglist>(Color c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color</type>
      <name>antiColor</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>633686b3b10606082a7e12c0d355e0b6</anchor>
      <arglist>(Color c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Colour</type>
      <name>antiColour</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>add9493b56e0b1ec6810a4a5e7c53a2e</anchor>
      <arglist>(Color c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; long &gt;</type>
      <name>flavourContent</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>50753445dc5f683ca38e9fecd0dc2fc4</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; long &gt;</type>
      <name>flavourContent</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>fb0265ba78cad30689edc9a10922bb71</anchor>
      <arglist>(tcPDPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; long &gt;</type>
      <name>flavourContent</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>2d97c694e7a35aaf93069ba6dd5bf65c</anchor>
      <arglist>(tcPPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; long &gt;</type>
      <name>flavourContent</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>0065ae3a0424a18ab1f3ede9a7e221ef</anchor>
      <arglist>(const ParticleData &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; long &gt;</type>
      <name>flavourContent</name>
      <anchorfile>classThePEG_1_1PDT.html</anchorfile>
      <anchor>fc3d79236543f778fd33fec5e1d217ab</anchor>
      <arglist>(const Particle &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::QuarksToHadronsDecayer</name>
    <filename>classThePEG_1_1QuarksToHadronsDecayer.html</filename>
    <base>ThePEG::Decayer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getN</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>b62724832db3086452da847d7cdd5180</anchor>
      <arglist>(Energy m0, Energy summq, int Nq) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PVector</type>
      <name>getHadrons</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>184e531d7f876eb826c97886786e1b21</anchor>
      <arglist>(int Nh, tcPDVector quarks) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>distribute</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>4138bfc76578436aa4e71bf63b040255</anchor>
      <arglist>(const Particle &amp;parent, PVector &amp;children) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>e4a21490fc443673bb9db4c83ee43af0</anchor>
      <arglist>(const Particle &amp;parent, const PVector &amp;children) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fixedN</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>f757b0144e4694a96bd0efc4279342b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minN</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>0b2c65735d4e703e2a7fa222efec7576</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>c1</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>ca2d985d4efb9e45b70514417f9b0b9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>c2</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>2ac49b6d6c0a1769a5662a0ff3ca2202</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>c3</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>6a1355d8af179b8e5016616aa7d50bb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcFlavGenPtr</type>
      <name>flavourGenerator</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>78da472925f17380c26bfe79610b315d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>b900630348560aa7855badbe1ffecee1</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>d5902af482136a96c069930ab946f606</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>3893cb9b13c20be27b89cae843c867c3</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>2ffd2eaf333fb33664a2d7dbce3adfc1</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>47828d7a9375b783370b0f3b47ef570a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>6ddab8b734492f1499f20bf6de441c3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>a7b53a7c0b1bab420dc9710ce708875a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>f38372399dc4b0174e721afa5854b90c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>ef551e982026bbd6546729036d13fcae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>b394ef58888096972b8effffe563a7cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>251cac6ca295f2adc89d895ca8d30766</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>58bff0af3dbf3f594a3c765f90e53dd0</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>d445b3ad0ec90ba44814b2e08e174222</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>QuarksToHadronsDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>72e0913c881b3cd46f9271c3726ffcd2</anchor>
      <arglist>(const QuarksToHadronsDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theFixedN</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>d9d8a1cf09c19e47fa09b725445bc9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theMinN</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>900ab78a9ea8559860917e87af44c9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theC1</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>b53d9b2811fe54d12cc9c7a32227053a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theC2</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>f89cc6acd131b5a4a1a6ccd1b49be02d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theC3</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>ceb781234cd7d5fdb12e32c7c57871d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FlavGenPtr</type>
      <name>theFlavourGenerator</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>33810672d789c8ae76398efd128c8480</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; QuarksToHadronsDecayer &gt;</type>
      <name>initQuarksToHadronsDecayer</name>
      <anchorfile>classThePEG_1_1QuarksToHadronsDecayer.html</anchorfile>
      <anchor>b0ce7ea3b56227db174833771b06b275</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::RemnantData</name>
    <filename>classThePEG_1_1RemnantData.html</filename>
    <base>ThePEG::ParticleData</base>
    <member kind="function">
      <type>bool</type>
      <name>extract</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>66d8d8da840d064dc11b1ea5fd77cf8f</anchor>
      <arglist>(tcPDPtr parton)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reextract</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>02dd8732af09adc209402e7ab0b62046</anchor>
      <arglist>(tcPDPtr oldp, tcPDPtr newp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>6b5fbbec267ecdf283bdc3160510edd0</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>4066201e2fe5c8101945dd40de1e2511</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>ccd204fdc7b0605084c711317013efd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>fixColour</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>ed74dc06c3fa7ac2ea176c5efc1ad906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RemnantData</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>1813f373ed7199e0c8ca553e6c959ae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>79132cde7e7efccc5bffb8171188ded7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>9eea7f01fff0402b61533c544ff1969d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RemnantData &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>d35736ecc0b85f4508fe6c86598d5879</anchor>
      <arglist>(const RemnantData &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tcPDPtr</type>
      <name>parentPD</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>738a36baf50855e348c610db15d65922</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RemDecPtr</type>
      <name>decayer</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>a3d8f9b3b9ee4206e4b02bebc9b26d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DMPtr</type>
      <name>decayMode</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>dae111e99d5b8316c9cf6ea21733dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>multiset&lt; tcPDPtr &gt;</type>
      <name>extracted</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>37d717cba795a8474c54e95c2dc59de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; RemnantData &gt;</type>
      <name>initRemnantData</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>f8b40c4487507b1a67cc50b7cd3dfe59</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>ClassTraits&lt; RemnantData &gt;</name>
      <anchorfile>classThePEG_1_1RemnantData.html</anchorfile>
      <anchor>13fc8a20b7cffc864ed0e97a78e4992e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::RemnantDecayer</name>
    <filename>classThePEG_1_1RemnantDecayer.html</filename>
    <base>ThePEG::Decayer</base>
    <member kind="enumeration">
      <name>RecoilOption</name>
      <anchor>29feb056d82ca00c2475ab20d271be39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>boostAll</name>
      <anchor>29feb056d82ca00c2475ab20d271be39bcad5ead275c505e0c482e23927edbd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>boostFinal</name>
      <anchor>29feb056d82ca00c2475ab20d271be3999556b5a92aac0ae91e415d1cc782870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>copyFinal</name>
      <anchor>29feb056d82ca00c2475ab20d271be39752e2a6a879c41ecf0a5fdc6c95331ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PtGenerator &gt;::pointer</type>
      <name>PtGPtr</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>71ab0d776955ab19e422b45775484254</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>bcc32e72e2d8233da0f2d245191d0423</anchor>
      <arglist>(tcPDPtr parent, tcPDPtr extracted) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>multiCapable</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>e9aae26391308af4d5ef985ea569e172</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RecoilOption</type>
      <name>recoilOption</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>fa7e4feb233ec39ff69ee16fd290427f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>respectDISKinematics</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>b39c972746f6b6321e09bb3692f7d8da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PtGPtr</type>
      <name>pTGenerator</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>22d589b9c15ee2358354d18301733bd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>1176df25210ca2278f91ad41672335e8</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>needsFullStep</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>01fa213dc3f24799a1c290861bc815fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>d569977694a42211174adbebaa390d9d</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p, Step &amp;step) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>dc2f80444feb168be6db91f200558c61</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>c6874a14d34e6cca0b46228869752de1</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>9c1176dcfd8b3ff099029c27e5f17ad6</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tPVector</type>
      <name>decayRemnants</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>8285b2485c9013f2abb74969df203b8a</anchor>
      <arglist>(const tPVector &amp;particles, Step &amp;step)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>c4990c04f250de64524e104ec3295ec8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tRemPDPtr</type>
      <name>data</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>c15cbe77442018eebbaff5460577ee48</anchor>
      <arglist>(tcRemPPtr remnant) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tcPPtr</type>
      <name>parent</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>40f467297c680ae3bf513e1a959b2005</anchor>
      <arglist>(tcRemPPtr remnant) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const PVector &amp;</type>
      <name>extracted</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>e7d1328393e126af99abd4b3b0ba822d</anchor>
      <arglist>(tcRemPPtr remnant) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>fillSubSystem</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>c18c5c15a6f3094f793b4fa0ad476b70</anchor>
      <arglist>(tPPtr p, set&lt; tPPtr &gt; &amp;sub) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tPVector</type>
      <name>getSubSystem</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>9c44e0e6944307f9ea344da941a04181</anchor>
      <arglist>(tcPPtr parent, tPPtr parton) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>0f89c3b5b2b804b9c9a3dc7fdd37ebf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>preInitialize</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>5925f620b51c911e3955221360a4c70e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static LorentzRotation</type>
      <name>getZBoost</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>8f0a4676e2443a7e778d2b9c3c92055e</anchor>
      <arglist>(const LorentzMomentum &amp;p0, const LorentzMomentum &amp;p)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>respectDIS</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>7a9e5c95bf940d38ead7499b3bb31deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>RemnantDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>c2846f787218c4a537beccade9faff03</anchor>
      <arglist>(const RemnantDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RecoilOption</type>
      <name>theRecoilOption</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>7c85a7415499732feec9249c64463ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PtGPtr</type>
      <name>thePTGenerator</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>f521cc8719c1163ccdd22691dddb9829</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; RemnantDecayer &gt;</type>
      <name>initRemnantDecayer</name>
      <anchorfile>classThePEG_1_1RemnantDecayer.html</anchorfile>
      <anchor>16e331ae109884e6a21a973a1d24b9e3</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::RemnantDecayer::SubSystemFail</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::RemnantDecayer::SubSystemFail</name>
    <filename>structThePEG_1_1RemnantDecayer_1_1SubSystemFail.html</filename>
    <base>ThePEG::Exception</base>
  </compound>
  <compound kind="class">
    <name>ThePEG::SimpleBaryonRemnantDecayer</name>
    <filename>classThePEG_1_1SimpleBaryonRemnantDecayer.html</filename>
    <base>ThePEG::RemnantDecayer</base>
    <member kind="typedef">
      <type>Ptr&lt; ZGenerator &gt;::pointer</type>
      <name>ZGPtr</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>17b510b7dc07116a096e61666ff42a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; FlavourGenerator &gt;::pointer</type>
      <name>FlGPtr</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>a0016cc7c79e4b3968d6677166023c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>bacea4636b3c4defb5b8db61a7aaa555</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>e7dc2547783dc3f6da212875482946cf</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p, Step &amp;step) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHandle</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>42bc1eaf70eecb798ee67d5d583e0423</anchor>
      <arglist>(tcPDPtr parent, tcPDPtr extracted) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>a116931022c840f1d279b97189cbc8b6</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>3fcaed16603812c4dd6b0d611663131a</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>4316f47a845ba2ced98a346579b28940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ZGenerator &amp;</type>
      <name>zGenerator</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>30b7a313685072d531af667f73e29439</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>FlavourGenerator &amp;</type>
      <name>flavourGenerator</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>393ed9715eb3be13efd9fddf2b64f69c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Energy</type>
      <name>margin</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>b4a866b07e7fe91fb12743aa71bb0710</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>specialValence</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>b3fc17d81721f068840f4959a3a2f966</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const BaryonContent &amp;</type>
      <name>getBaryonInfo</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>64142b375a9ce8f08598cb879e457041</anchor>
      <arglist>(tcPDPtr baryon) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>e184cb2abeb86cf88ad34adfd213cb87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>preInitialize</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>953f17b715750aab594f23a3d5170c46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>40d2e5736f4b102c32ce3a194322e1b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>389afd26c13771645e54ba34da2690e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SimpleBaryonRemnantDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>bb4ca8ebdbdc8d89e40736c28036b469</anchor>
      <arglist>(const SimpleBaryonRemnantDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ZGPtr</type>
      <name>theZGenerator</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>405995d20e7656c6e853966e52803ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FlGPtr</type>
      <name>theFlavourGenerator</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>240da247304b5a64abdc3453c8492711</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theMargin</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>7690cf07a2e17cf059b07fe4a60b1c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useSpecialValence</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>9b917cab98a8be4d68c228376c2d7851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>map&lt; tcPDPtr, BaryonContent &gt;</type>
      <name>baryonmap</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>4a4f8b508f27a32c95d7829015cd6f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; SimpleBaryonRemnantDecayer &gt;</type>
      <name>initSimpleBaryonRemnantDecayer</name>
      <anchorfile>classThePEG_1_1SimpleBaryonRemnantDecayer.html</anchorfile>
      <anchor>f3e493d69096119856acefa00d36d2b4</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::SimpleBaryonRemnantDecayer::BaryonContent</class>
    <class kind="struct">ThePEG::SimpleBaryonRemnantDecayer::DecayFailed</class>
    <class kind="struct">ThePEG::SimpleBaryonRemnantDecayer::NoDISRespect</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::SimpleBaryonRemnantDecayer::BaryonContent</name>
    <filename>structThePEG_1_1SimpleBaryonRemnantDecayer_1_1BaryonContent.html</filename>
    <member kind="variable">
      <type>vector&lt; int &gt;</type>
      <name>flav</name>
      <anchorfile>structThePEG_1_1SimpleBaryonRemnantDecayer_1_1BaryonContent.html</anchorfile>
      <anchor>9062197d8ea46c0d8472c32d5a9acf9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VSelector&lt; pair&lt; int, int &gt; &gt;</type>
      <name>flavsel</name>
      <anchorfile>structThePEG_1_1SimpleBaryonRemnantDecayer_1_1BaryonContent.html</anchorfile>
      <anchor>e73646c64595b25f52ff6f9a40481639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sign</name>
      <anchorfile>structThePEG_1_1SimpleBaryonRemnantDecayer_1_1BaryonContent.html</anchorfile>
      <anchor>ab63d85b6e59300cab6b172929b1b178</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::SimpleBaryonRemnantDecayer::DecayFailed</name>
    <filename>structThePEG_1_1SimpleBaryonRemnantDecayer_1_1DecayFailed.html</filename>
    <base>ThePEG::Exception</base>
  </compound>
  <compound kind="struct">
    <name>ThePEG::SimpleBaryonRemnantDecayer::NoDISRespect</name>
    <filename>structThePEG_1_1SimpleBaryonRemnantDecayer_1_1NoDISRespect.html</filename>
    <base>ThePEG::Exception</base>
  </compound>
  <compound kind="struct">
    <name>ThePEG::AnyMatcher</name>
    <filename>structThePEG_1_1AnyMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>AnyMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1AnyMatcher.html</anchorfile>
      <anchor>a17f7e5f6046f44d0b50b543b23d765d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1AnyMatcher.html</anchorfile>
      <anchor>bcf24375f850616388f7dc1631753ed5</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1AnyMatcher.html</anchorfile>
      <anchor>50cd82e4f8a78cc7d06af281ca1e71b1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::ChargedMatcher</name>
    <filename>structThePEG_1_1ChargedMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>ChargedMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1ChargedMatcher.html</anchorfile>
      <anchor>6a6065390108d3af065edcca88661dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1ChargedMatcher.html</anchorfile>
      <anchor>6f21b6d6cc773b7c307a10026692dd05</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1ChargedMatcher.html</anchorfile>
      <anchor>d3792925288a4f8138037b0acdc96759</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::PositiveMatcher</name>
    <filename>structThePEG_1_1PositiveMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>NegativeMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1PositiveMatcher.html</anchorfile>
      <anchor>d7f8ef28986941c0ea92c31ac929ad1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1PositiveMatcher.html</anchorfile>
      <anchor>09aedbc190cbf2f773cc6225c9c42dcd</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1PositiveMatcher.html</anchorfile>
      <anchor>bb34c4abaf80db8709b024b00f0d4950</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::NeutralMatcher</name>
    <filename>structThePEG_1_1NeutralMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>NeutralMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1NeutralMatcher.html</anchorfile>
      <anchor>fd84d76d997e9ab9c21ea7f0b7c5cc56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1NeutralMatcher.html</anchorfile>
      <anchor>f72115cb24b931e5466831eae92d82c3</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1NeutralMatcher.html</anchorfile>
      <anchor>3eb5ec6f9d84efb8f4681e570af9ffcf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::NegativeMatcher</name>
    <filename>structThePEG_1_1NegativeMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>PositiveMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1NegativeMatcher.html</anchorfile>
      <anchor>cd7bab58df48d3817a096698fc3c9ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1NegativeMatcher.html</anchorfile>
      <anchor>9f453d7f0dd494fd135d21fb9f38bed3</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1NegativeMatcher.html</anchorfile>
      <anchor>05f4ac58a85dcb00af695c90524d60bf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::BaryonMatcher</name>
    <filename>structThePEG_1_1BaryonMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>BaryonMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1BaryonMatcher.html</anchorfile>
      <anchor>88d4c28023372cc10ccc9af6b89f8cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1BaryonMatcher.html</anchorfile>
      <anchor>f25b295beeb4e6b292ce176b23f938e0</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1BaryonMatcher.html</anchorfile>
      <anchor>b6abff8906fa099cc43bca72ab489191</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1BaryonMatcher.html</anchorfile>
      <anchor>f86b918ab8b5d65e791dfc7eb81aaff5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::MesonMatcher</name>
    <filename>structThePEG_1_1MesonMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>MesonMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1MesonMatcher.html</anchorfile>
      <anchor>0293834881de8e6f4048793828da989f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1MesonMatcher.html</anchorfile>
      <anchor>7f8a5d64da98ef9fe4ecb05f63b8f1db</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1MesonMatcher.html</anchorfile>
      <anchor>ed78644c96c673962ee6ed3275dcd97e</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1MesonMatcher.html</anchorfile>
      <anchor>287176c322a21acd0838f28666abb186</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::DiquarkMatcher</name>
    <filename>structThePEG_1_1DiquarkMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>DiquarkMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1DiquarkMatcher.html</anchorfile>
      <anchor>e364cb2a9acc52a62510e7df8a106862</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1DiquarkMatcher.html</anchorfile>
      <anchor>3f56986d450ac6473263f71c96494c85</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1DiquarkMatcher.html</anchorfile>
      <anchor>6ee66b7a986f06fe0cab22f14485f947</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1DiquarkMatcher.html</anchorfile>
      <anchor>927e1a14d814ba7deb8511a37cf6c760</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::QuarkMatcher</name>
    <filename>structThePEG_1_1QuarkMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>QuarkMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1QuarkMatcher.html</anchorfile>
      <anchor>2167438c2ca624aaa375e23220abbc17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1QuarkMatcher.html</anchorfile>
      <anchor>44fb6e8efbd71258337691ae8ddd70fc</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1QuarkMatcher.html</anchorfile>
      <anchor>1be56b7729b015c1ff5ebef148156b8c</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1QuarkMatcher.html</anchorfile>
      <anchor>9ca14ee6e5b2f914cfb676f4b20f656d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::LeptonMatcher</name>
    <filename>structThePEG_1_1LeptonMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>LeptonMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1LeptonMatcher.html</anchorfile>
      <anchor>3adb741e3fa41e496f6b03dcf6283197</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1LeptonMatcher.html</anchorfile>
      <anchor>9e78570d25f38032287c1a7386b13faa</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1LeptonMatcher.html</anchorfile>
      <anchor>ff01c291926bd38b81f1bc0630538aaa</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1LeptonMatcher.html</anchorfile>
      <anchor>fb03939c3de87bb028f64027b4158c6f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::LightQuarkMatcher</name>
    <filename>structThePEG_1_1LightQuarkMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>LightAntiQuarkMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1LightQuarkMatcher.html</anchorfile>
      <anchor>437fb8ef8756cd402f98d16db790ca83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1LightQuarkMatcher.html</anchorfile>
      <anchor>07fa09b220a6db7172e565354730f8ff</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1LightQuarkMatcher.html</anchorfile>
      <anchor>2c4063b1f97e98d60663b33e668e577a</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1LightQuarkMatcher.html</anchorfile>
      <anchor>763fe4e04493ca1e86d5eeb9c9344689</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::LightAntiQuarkMatcher</name>
    <filename>structThePEG_1_1LightAntiQuarkMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>LightQuarkMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1LightAntiQuarkMatcher.html</anchorfile>
      <anchor>6df6e4253cb15d76f3ea6d191b7375a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1LightAntiQuarkMatcher.html</anchorfile>
      <anchor>955d52dec68cf160de5fff712908daca</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1LightAntiQuarkMatcher.html</anchorfile>
      <anchor>e1d0874c2ebe0b94d4d13a449e643f7f</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1LightAntiQuarkMatcher.html</anchorfile>
      <anchor>93d6637be64de5db0ff8428e8f3b8aaa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::StandardQCDPartonMatcher</name>
    <filename>structThePEG_1_1StandardQCDPartonMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>StandardQCDPartonMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1StandardQCDPartonMatcher.html</anchorfile>
      <anchor>f1a280536a4135b45c4a613c4445ab0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1StandardQCDPartonMatcher.html</anchorfile>
      <anchor>318a81815a6be97d504c9bafb994d720</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1StandardQCDPartonMatcher.html</anchorfile>
      <anchor>3864d0c074cdeacd856eeac564fa6265</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1StandardQCDPartonMatcher.html</anchorfile>
      <anchor>26118e6eb940ea40faf9b99ad60fb852</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::PseudoScalarMesonMatcher</name>
    <filename>structThePEG_1_1PseudoScalarMesonMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>PseudoScalarMesonMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1PseudoScalarMesonMatcher.html</anchorfile>
      <anchor>8986b3549202732af1d705ad46b366b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1PseudoScalarMesonMatcher.html</anchorfile>
      <anchor>3e42f570cd958341b54cb07468e1132b</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1PseudoScalarMesonMatcher.html</anchorfile>
      <anchor>17bd95b45fdbfd06fc5ce1a589659e02</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1PseudoScalarMesonMatcher.html</anchorfile>
      <anchor>c6e753630c12cf6123532ab4bb927be5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::VectorMesonMatcher</name>
    <filename>structThePEG_1_1VectorMesonMatcher.html</filename>
    <base>ThePEG::MatcherType</base>
    <member kind="typedef">
      <type>VectorMesonMatcher</type>
      <name>CC</name>
      <anchorfile>structThePEG_1_1VectorMesonMatcher.html</anchorfile>
      <anchor>69810413f07f0c85552ca4fc2733a593</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1VectorMesonMatcher.html</anchorfile>
      <anchor>ae0ab091423634b3dc118e3ad057ad6d</anchor>
      <arglist>(const ParticleData &amp;pd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Check</name>
      <anchorfile>structThePEG_1_1VectorMesonMatcher.html</anchorfile>
      <anchor>a26cf621489ad6e2dfde63203eb57e01</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1VectorMesonMatcher.html</anchorfile>
      <anchor>e0ad2ac593d32891c572c91b87f79bd0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Tau2HadronsDecayer</name>
    <filename>classThePEG_1_1Tau2HadronsDecayer.html</filename>
    <base>ThePEG::FlatDecayer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>4ea3c0cd407d90dfb545c66d992d3ed3</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>352fb3f2e444804bed45cf72427f0bde</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;parent, const ParticleVector &amp;children) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>81a40a100f5d1e918980f0e84c13c0e0</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>1498d7b9b761f34305f36eb038f36236</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>90bf6fccfcd0cdf9ee9a2c4d6dc83308</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>7b8be56e943e3c2f4183983df0970639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>f30860b70ab6ad8bedf527b4b4eba7e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>d64b1a0a4f00cc094b7050cccd687267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>19ef0778372b2f1b3d36c97d92f8fea4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>38c60e7083c04983606a8fbf06f019f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>290bcb6e97691504ad8a1d1026966b21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>a3bd68941933148ad2037e08b693e17b</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>2f5b47153cf5a7503ce5d7ee37e8a010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Tau2HadronsDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>3383e315f87480d313c5552c6a0fef49</anchor>
      <arglist>(const Tau2HadronsDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Tau2HadronsDecayer &gt;</type>
      <name>initTau2HadronsDecayer</name>
      <anchorfile>classThePEG_1_1Tau2HadronsDecayer.html</anchorfile>
      <anchor>243d19328733ba2381b0dc6efc7fbbe1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::V2PPDecayer</name>
    <filename>classThePEG_1_1V2PPDecayer.html</filename>
    <base>ThePEG::FlatDecayer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>8c9bca221090d870ca5bad3f0aade988</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParticleVector</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>4e309ee139bbd1ef548838939fb3307c</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>5c72c34956e73ebf1112d237e5be27c3</anchor>
      <arglist>(const DecayMode &amp;dm, const Particle &amp;parent, const ParticleVector &amp;children) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>aade62547631dbad56dc3977f255ef52</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>07348d076d3cdf20a0c2dffba25166f3</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>c4988959cc8df76830cf3d8d207d4004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>1dd5b8ddf40c2823e2a033cd38bd98ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>7b37362ff028a01a387c5e285ea8eb80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>87316559eb4c56f7eb29fedc465dfa2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>5a4be95ae02d8fbf81d27531a9855d94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>ea482ec591386d1a7b7fa66640d9d4d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>8590207be8d2991fb9c515ab34e0b516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>ee6e536a0ed525418d9cbdae27a336cc</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>01b6864a041db3744607d9cf77aa5017</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>V2PPDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>5a56b49c611ca7e1df582f7c88136541</anchor>
      <arglist>(const V2PPDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPPtr</type>
      <name>grandParent</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>3a3c4f5a4268f851bb5ba6850ab1d03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tPPtr</type>
      <name>sibling</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>3d2f97ffccf9f28295f5dfc8af367ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; V2PPDecayer &gt;</type>
      <name>initV2PPDecayer</name>
      <anchorfile>classThePEG_1_1V2PPDecayer.html</anchorfile>
      <anchor>279c5dd58afe8dee93525b655be0d706</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::WeakToHadronsDecayer</name>
    <filename>classThePEG_1_1WeakToHadronsDecayer.html</filename>
    <base>ThePEG::QuarksToHadronsDecayer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>138098837e3b08afea3b6c93744205c5</anchor>
      <arglist>(const DecayMode &amp;dm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>786bd8942981b4d2525c815608908cd4</anchor>
      <arglist>(const Particle &amp;parent, const PVector &amp;children) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PVector</type>
      <name>getHadrons</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>5614eb0fb698521d3aeed8620f857a12</anchor>
      <arglist>(int Nh, tcPDVector quarks) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>41542ec6396ca9ce0d9a2b82a4d5524d</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>a54278f975e60e49b87c60775939098d</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>3d0e5a4f9fb37b9b86407e69f6ca78f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>9b8ce2ff56bd3a4c3272c65fe611b004</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>064e0d4d832082bddeae8bd8c0360390</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>f7ff8471a0025b4837499e5b5eddd6ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>45ef49db6ecae89f01f3c7a0e4611f94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>393920efaf6d6926b146ef424ff332ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>c33c285586c45bd468745e55fe0831d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>bc7acacf7e88bf38912930ae44801c4b</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>74dbdec67c9337409d055fb07b737517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>WeakToHadronsDecayer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>3463a9057984e87988d9732a3527d17e</anchor>
      <arglist>(const WeakToHadronsDecayer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; WeakToHadronsDecayer &gt;</type>
      <name>initWeakToHadronsDecayer</name>
      <anchorfile>classThePEG_1_1WeakToHadronsDecayer.html</anchorfile>
      <anchor>571587a1bdda1a3fe8ed8f3a2029d80e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::WidthGenerator</name>
    <filename>classThePEG_1_1WidthGenerator.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="typedef">
      <type>Selector&lt; tDMPtr &gt;</type>
      <name>DecayMap</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>e93a76b95d87fcf996c1bc7398528176</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>96b51fd90e32438da4f697e9c1821b2c</anchor>
      <arglist>(const ParticleData &amp;) const =0</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>width</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>5a099d2783468a22e239ed31ecd11122</anchor>
      <arglist>(const Particle &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Energy</type>
      <name>width</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>d535afed03a7e6911a76a843d182ca31</anchor>
      <arglist>(const ParticleData &amp;, Energy m) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Length</type>
      <name>lifeTime</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>6ab0199e2a3e50ac07e67d5d74108622</anchor>
      <arglist>(const ParticleData &amp;, Energy m, Energy w) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DecayMap</type>
      <name>rate</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>9ce9f2af5dd6c11df745d52656600812</anchor>
      <arglist>(const ParticleData &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DecayMap</type>
      <name>rate</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>aabfc59c2b7672bb4d7f164e75d3038a</anchor>
      <arglist>(const Particle &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>1f6926edef2af69593bd3f7e9207d729</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>WidthGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>bb7ff53519c9b27a74ce97507c40d8d5</anchor>
      <arglist>(const WidthGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; WidthGenerator &gt;</type>
      <name>initWidthGenerator</name>
      <anchorfile>classThePEG_1_1WidthGenerator.html</anchorfile>
      <anchor>cd79916540fba493d3c91fe8e73dfe77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::InputDescription</name>
    <filename>classThePEG_1_1InputDescription.html</filename>
    <base>ThePEG::Named</base>
    <member kind="typedef">
      <type>vector&lt; const InputDescription * &gt;</type>
      <name>DescriptionVector</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>b7ae3abc35501a24db7ef979fd30a3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::pointer</type>
      <name>BPtr</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>d9b53c9bc03244eaed956bcf13d0913d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::const_pointer</type>
      <name>cBPtr</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>54d6b7e10a98c15e9f4146e0ee58b3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::transient_pointer</type>
      <name>tBPtr</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>a1595ec678c0cb4dbb752f7ee96217a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::transient_const_pointer</type>
      <name>tcBPtr</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>56ff90e16fa71f3292c750e13f14ad98</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputDescription</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>7e088628c7b94a90fa5d9970dc77a450</anchor>
      <arglist>(string newName, int version)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>2aceefcd3112fbdfcbbf900cd1264527</anchor>
      <arglist>(const ClassDescriptionBase *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBaseClass</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>fc23c607719b6ad91ffbf4ffa41516f7</anchor>
      <arglist>(const InputDescription *)</arglist>
    </member>
    <member kind="function">
      <type>const DescriptionVector &amp;</type>
      <name>descriptions</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>565d230f4f09851b525ba50e184d9e7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BPtr</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>f059727b988e3d93a7aa3f7970c7327a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>27b40d5d210bc1518a364a612b0072f2</anchor>
      <arglist>(tBPtr b, PersistentIStream &amp;is) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DescriptionVector</type>
      <name>theBaseClasses</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>e25aa5b983aba4b6cb18a8221b4ab0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const ClassDescriptionBase *</type>
      <name>theDescription</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>857c980af7bbeab8f2cc6460655364f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theVersion</name>
      <anchorfile>classThePEG_1_1InputDescription.html</anchorfile>
      <anchor>9c192c88994b022bf16b4deb3ede917d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PersistentIStream</name>
    <filename>classThePEG_1_1PersistentIStream.html</filename>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::pointer</type>
      <name>BPtr</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>8e06e75e8393254583f473feb1bda1d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::const_pointer</type>
      <name>cBPtr</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>32b6a9681fa90fc6106bfdbb62bd4f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::transient_pointer</type>
      <name>tBPtr</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>def9ffed61ab2312f90f2af7a14503d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::transient_const_pointer</type>
      <name>tcBPtr</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>0753e8a1ecf0c69a63871ce868e3bd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; BPtr &gt;</type>
      <name>ObjectVector</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>46f9ec15c3cb52619a604505121e901e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>InputDescription::DescriptionVector</type>
      <name>DescriptionVector</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>834280034cad7ff322a6de4f3ec1320a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PersistentIStream</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>4954227043e56e357aacfa54c4022530</anchor>
      <arglist>(istream &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PersistentIStream</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>f9cd37742905157d4b8980de02595c0b</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PersistentIStream</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>41da380660f8cf78395374e64901ac98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>fe3d8df38941ec9b6a9d701311bda4d1</anchor>
      <arglist>(RCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>8885fa4a0177564f7ec7ea48f675f434</anchor>
      <arglist>(ConstRCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>fcd51ccc06916273c03a6e6c85bb5cac</anchor>
      <arglist>(TransientRCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>1dfc4a27396f172632b53a0025a2fef0</anchor>
      <arglist>(TransientConstRCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getContainer</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>f5bc37124bb7e2bf9f018e0ebd0468f6</anchor>
      <arglist>(Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>BPtr</type>
      <name>getObject</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>5bade63086db7da5aac965b7ecb11bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getObjectPart</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>7a25ab40523150fe4d74e8faba9ca321</anchor>
      <arglist>(tBPtr obj, const InputDescription *pid)</arglist>
    </member>
    <member kind="function">
      <type>const InputDescription *</type>
      <name>getClass</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>1c44c0dc400b1ba903e54be99f5ab84b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>setPedantic</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>171cb2576c20bd3337a0d1cd74128c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>setTolerant</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>3683b41cecbb4eaf1921bf13240276f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>good</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>0332587f45e97f053f3da595f4e75028</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>ea4c52e639a9941eaf441b3852c46aac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>b3c22f6497a330a7bbb04ebeb7aee943</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pedantic</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>6e14fc0bf157b20cca0017dbdc06568e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>51a3be009454f05c50dc8d26ad8b8fef</anchor>
      <arglist>(string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>99a17657740ddcd4a846b934e801f43b</anchor>
      <arglist>(char &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>81d2d841cac1eb0df84f800eeb9f4f9f</anchor>
      <arglist>(signed char &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>f3f506da1755bea3e1c8de723dad7bc4</anchor>
      <arglist>(unsigned char &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>d31996fc4106cdd6b11246f56bbb87e2</anchor>
      <arglist>(int &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>744a4a054fe9103b5eeaa2dbe690ecf7</anchor>
      <arglist>(unsigned int &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>cc2e305f6714e5b8e1efa42eb3a240c0</anchor>
      <arglist>(long &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>2b20772620d9fe7e7efb70ed06668392</anchor>
      <arglist>(unsigned long &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>940ee488f9775b1935037fc30ecb440e</anchor>
      <arglist>(short &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>91cefded80121ada28598d6e61bcde77</anchor>
      <arglist>(unsigned short &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>e41dd5f39b5b1d30a0c88a8f995f2628</anchor>
      <arglist>(double &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>a6766886f39294e04b0d00b8a6dcd0cb</anchor>
      <arglist>(float &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>e427d77dc376681f909efa9e5bd7b6f4</anchor>
      <arglist>(bool &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PersistentIStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>06669e728094992f1c9afa202ee38fb3</anchor>
      <arglist>(Complex &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>init</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>97d39316c6820cf8260edc948031a980</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>char</type>
      <name>get</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>570db25e82431c3cd77ac558b1abf085</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>char</type>
      <name>escaped</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>1b942da28c719bf687c162cae4a0a17f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setBadState</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>e5d79dbefff5710ee8d8bab902c14836</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getSep</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>9d7489b435c100366ade6be6206675ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>skipField</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>909ace245e5312f3630ce9b0e937e9ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>beginObject</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>665ac37a85096529d91c57df2624cba9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>endObject</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>1ad4876df42fe1e98e9ee2c3e3be9877</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>endBase</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>f97030261c557facef6288c3e7bda2c6</anchor>
      <arglist>(string classname)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>istream &amp;</type>
      <name>is</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>34d32d2eb897f84b9f44888f4f96f28c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const istream &amp;</type>
      <name>is</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>d452b470c96c35fc55bac127203338e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>PersistentIStream</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>7af904b12a233ef24cfd0734b5d9968a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>PersistentIStream</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>f22c62818febe59af5d1fcb970b56374</anchor>
      <arglist>(const PersistentIStream &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>PersistentIStream &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>a5bc899d2a079316f1ad4cf0dbb61200</anchor>
      <arglist>(const PersistentIStream &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ObjectVector</type>
      <name>readObjects</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>c31710556fe94f9543ac9346be1a6e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DescriptionVector</type>
      <name>readClasses</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>f2111bfd6f7be469ecac3337cd52b02f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>istream *</type>
      <name>theIStream</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>909be558b07f3b60cff03251da3887fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isPedantic</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>4459623b9d51edd494f78556d5573fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>allocStream</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>5b6575f755668b2ff3160f2b1c92150e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>badState</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>e74ad04caab0ab3d9eaff36fb3f068f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>version</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>20ccbf614ca4f4f570fbdc49827f0b47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>subVersion</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>77c2cb575b8d2cb87cb8f6ccdaede9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tBegin</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>f4be08715dd3f8b34f92158dd03c1bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tEnd</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>c1f7cc7f98436bd7967b51a7013f1245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tNext</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>7ccf1cf987e10ecc528597d7870c0a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tNull</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>7f287dae93ab8a8226c6797107f94c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tSep</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>017e4e4516e30169f94288cbf7bcf758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tNoSep</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>3010ddd54ea388570311b9ff7a73a757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tYes</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>ba238f244508ea3019fd775ebefbdfb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tNo</name>
      <anchorfile>classThePEG_1_1PersistentIStream.html</anchorfile>
      <anchor>70ee61e1d19de3f11da90ff0b5f5f334</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::PersistentOStream</name>
    <filename>classThePEG_1_1PersistentOStream.html</filename>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::pointer</type>
      <name>BPtr</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>f0da49dc858721de5dd973600f24357b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::const_pointer</type>
      <name>cBPtr</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>c1bb54d0a4dbbae2f24e3bb59a3ebd37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::transient_pointer</type>
      <name>tBPtr</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>e939114298343e0e172173b5b880e8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; PersistentBase &gt;::transient_const_pointer</type>
      <name>tcBPtr</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>877b1cbbac38d42b4350bd993b0ce857</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; cBPtr, int, less&lt; cBPtr &gt;, Allocator&lt; std::pair&lt; cBPtr const, int &gt; &gt; &gt;</type>
      <name>ObjectMap</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>c422de7a188aa70c91ec614e26bc0ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; const ClassDescriptionBase *, int, less&lt; const ClassDescriptionBase * &gt;, Allocator&lt; std::pair&lt; const ClassDescriptionBase *const, int &gt; &gt; &gt;</type>
      <name>ClassMap</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>a4fa0535be058c3662eaccfb3294b4a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ClassDescriptionBase::DescriptionVector</type>
      <name>DescriptionVector</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>0872c7057671e10653e69d31691ddf12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PersistentOStream</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>faab98f8a083ae8ed68494ed062de7aa</anchor>
      <arglist>(ostream &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PersistentOStream</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>7686c49365a21c70ca939ffb0f972e3b</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PersistentOStream</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>0aa4f9a25676b7e1d93b182b82e62e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>d160771901c56ceb9673e3c7d6b5cb26</anchor>
      <arglist>(const RCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>39b9208bc9c0ed7a01244606034b8582</anchor>
      <arglist>(const ConstRCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>d6f4b85bc01ab8fc8a3047ac765752c7</anchor>
      <arglist>(const TransientRCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>8ea4f53a7099f6cd6bf77901527d333e</anchor>
      <arglist>(const TransientConstRCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putContainer</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>b849ccaebf3701d0633e7985081be052</anchor>
      <arglist>(const Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>outputPointer</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>7709f765702099485fb93b279951532b</anchor>
      <arglist>(tcBPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putObjectPart</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>72fefd9dde6581a849eb35a3c042953c</anchor>
      <arglist>(tcBPtr obj, const ClassDescriptionBase *cd)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>flush</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>0cab920b7990da17f5578eda42bfb9f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>push</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>2a2896ad9d86ea86d5bffa9c031a0c6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>pop</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>c19d93d15e3b69565da031a60e69f0a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>good</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>ccd44ec237acb5660401f295d31d87a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>48f367b7566996df55a4b585a30acbc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>3a07a18822a84b4e62343c1348fd1da0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>840d64ed9422ef7327f5f1ceb87406ee</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>7e4780205246f51ff2dd08f38d0ee239</anchor>
      <arglist>(char)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>e2750f138e31c2c795918814d3ff75e1</anchor>
      <arglist>(signed char)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>768d17bd26c6ade863cdb4234fe86559</anchor>
      <arglist>(unsigned char)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>c9aacc0e1654c75474ecd3c43635cd48</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>15f0fd8565b7d499b2ce0c1ee38ef32a</anchor>
      <arglist>(unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>40d9851410b3dcfa565eaf3b53214568</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>a5d56c1ce49fbb3b200c6cf0c5cf6fdb</anchor>
      <arglist>(unsigned long)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>e73cc1c5723fec3717c0a9e15a8d6222</anchor>
      <arglist>(short)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>558677f1241a2b0e0873ecad0169106e</anchor>
      <arglist>(unsigned short)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>bf3e15f98aebdad0071becf0ffd01f02</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>525865f597b9d84b3f8018ff04d5dd70</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>40ec3b6f8b82e055cd8a97f9ce6f0acb</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>PersistentOStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>0d70be96812e714191f14ad3aeda9384</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isToken</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>fd20c47b9a290d60f454a9eba9e05f21</anchor>
      <arglist>(char c) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setBadState</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>6b25fb176d609ecc239920579dcf2f17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>checkState</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>9ee73036e055c310731e10772eee3437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const ClassDescriptionBase *</type>
      <name>writeClassId</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>1b3113104f47ee3748c84dca193d02a5</anchor>
      <arglist>(tcBPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>writeClassDescription</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>8fe0fb0fd05605a4e58fdb859bff4baf</anchor>
      <arglist>(const ClassDescriptionBase *)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>beginObject</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>e0ac1de145592dc22f158aae680db760</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>endObject</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>153575eb601ca50e7a1644e8a19c5182</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>endBase</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>99906bff2082630506de2467f65f283e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>put</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>b4dc0280870b32b56e3c62d735857ef2</anchor>
      <arglist>(char)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>escape</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>20fbdbfeaf2745654b4804a6711f3e47</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ostream &amp;</type>
      <name>os</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>b9226e89c7807dfc96c137bdafcd58c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const ostream &amp;</type>
      <name>os</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>02c28d758d62bb9fff1296783791ebfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>init</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>188c2bafbf7f2fb0e43642a6fc283be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>PersistentOStream</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>c64e6e28d314cf4e0da202c08990812e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>PersistentOStream</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>408b5c6ad0fc522032ebf4d1a0cf76a9</anchor>
      <arglist>(const PersistentOStream &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>PersistentOStream &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>1d8b52f4d0465d92a8fd796bf66208a7</anchor>
      <arglist>(const PersistentOStream &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ObjectMap</type>
      <name>writtenObjects</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>53e7d7f558b092fa67a3df346643e0f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>stack&lt; int &gt;</type>
      <name>lastSavedObject</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>69b6d5cd1ec9769bd17debd49a45a4f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ClassMap</type>
      <name>writtenClasses</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>894847a17eee35d28ad7b6712cc2cfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ostream *</type>
      <name>theOStream</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>d1f7d77023dd4a9aee853a7d6714f00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>badState</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>18ea22920225d02cf64f68acfe6ead6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>allocStream</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>4740320e767a5647977bcaf51832cdd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const int</type>
      <name>version</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>592d9eff125a77a34c3244d133cf6650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const int</type>
      <name>subVersion</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>b34c52f68708c94f2353fd1b93d8fcd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tBegin</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>a92ac796a3a914dfb60555377ed32dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tEnd</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>caa01d6ee2801474b5109fa88dfee477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tNext</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>9caaa1ceac6aa8d207c12d41edea5b41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tNull</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>d07f1de2f2f51fc4246fa197a21084eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tSep</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>43b1e8ac9bcc5b64478c6e939ddf0844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tNoSep</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>34b75a7b4ab923322906cd7d964dc677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tYes</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>920293e4cd5a4ab4f2dd8f004c4c5d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const char</type>
      <name>tNo</name>
      <anchorfile>classThePEG_1_1PersistentOStream.html</anchorfile>
      <anchor>f542bda49a881b5e85c4e803254bb50b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::BaseRepository</name>
    <filename>classThePEG_1_1BaseRepository.html</filename>
    <member kind="typedef">
      <type>StringSet</type>
      <name>DirectorySet</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>766f410b87d990b8ff8e29f6552eab50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>a3de2d2ddff708c2c90a14547ef656d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>set&lt; const InterfaceBase * &gt;</type>
      <name>InterfaceSet</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>dc3481013eb10a26032d0ae1d61d3264</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; const ClassDescriptionBase *, InterfaceSet &gt;</type>
      <name>TypeInterfaceMap</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>9e889305bb880f35cf3e5ac565116074</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; const ClassDescriptionBase *, const ClassDocumentationBase * &gt;</type>
      <name>TypeDocumentationMap</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>f0565493c72f55c1bee216c478bca4db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>exec</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>3e3c90c39c371624449058e63ef4b670</anchor>
      <arglist>(string cmd, ostream &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Register</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>f21b5af23d2d53d7132e3447ba9eaf21</anchor>
      <arglist>(const InterfaceBase &amp;, const type_info &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Register</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>af9b8927fdeeb1472860e5cd2344810f</anchor>
      <arglist>(const ClassDocumentationBase &amp;, const type_info &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Register</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>84e88db9a433141e708d730697b4b10e</anchor>
      <arglist>(IBPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Register</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>2a7376660fb11180fe280113693513d8</anchor>
      <arglist>(IBPtr, string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remove</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>08cf6e87489f7c1cb2a81141919e3f31</anchor>
      <arglist>(tIBPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>remove</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>0376c5ce3e51360dbc9c7544b97cc037</anchor>
      <arglist>(const ObjectSet &amp;rmset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rename</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>ece9fd59a666c4224c043a5db4c73042</anchor>
      <arglist>(tIBPtr object, string newName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CreateDirectory</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>9d403e75dd0a94c72ce65a925d1be96a</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CheckObjectDirectory</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>90b6f7cd2e25d31011fd7ef3ed0196c5</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CheckDirectory</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>2352f8062e0ffca683c949c60ef86308</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DirectoryAppend</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>920bd24a0586743a46dba894fbd80336</anchor>
      <arglist>(string &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ChangeDirectory</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>aae26fc84b9830c1f93051c37d39f81b</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PushDirectory</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>9a68b48168c8292bcc2e1c03ef795168</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PopDirectory</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>8c2d4531b979678344268bee3456dbcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr&lt; T &gt;::pointer</type>
      <name>GetPtr</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>98da99d466fde84c1381d25a15d34470</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PtrType</type>
      <name>GetPtr</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>35106837426594f652b848edc784422f</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PtrType</type>
      <name>GetObject</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>9f25280f2e48719c351830031ea9a3e8</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IBPtr</type>
      <name>GetPointer</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>e48a858ad85c8f21ad0da681cae971a8</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IVector</type>
      <name>SearchDirectory</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>b27f9fd05e0e655e5a4084bd1367d120</anchor>
      <arglist>(string name, string className=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IBPtr</type>
      <name>TraceObject</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>afee00abf497037cd056da6d763f7a15</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>GetInterfacedBaseClasses</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>7071b45f4c100b3cf9de316bc5987ac1</anchor>
      <arglist>(const ClassDescriptionBase *cdb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IBPtr</type>
      <name>getObjectFromNoun</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>e25db612a1b96637bb6b08b8ad0b6d2f</anchor>
      <arglist>(string noun)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IVector</type>
      <name>GetObjectsReferringTo</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>59a2750e6c417a9333fc79334a882ade</anchor>
      <arglist>(IBPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IVector</type>
      <name>DirectReferences</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>53a31234c54a6e3ef5d3cf595e280b4b</anchor>
      <arglist>(IBPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addReferences</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>9ac2e40ee8f05e2c5c67a5d19cab3c5b</anchor>
      <arglist>(tIBPtr obj, ObjectSet &amp;refs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InterfaceMap</type>
      <name>getInterfaces</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>5267be5f1fa02d796a78883cc7d33e22</anchor>
      <arglist>(const type_info &amp;ti, bool all=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const InterfaceBase *</type>
      <name>FindInterface</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>07d1665e6cf9401ce19206ed59dcc32c</anchor>
      <arglist>(IBPtr object, string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>getInterfaceFromNoun</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>6e3c9a1faeb696b5a5e3c146edb2500a</anchor>
      <arglist>(string noun)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>getPosArgFromNoun</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>9af01da93081e741a23c127b014647ce</anchor>
      <arglist>(string noun)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>update</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>410c9f2bb0a798ecd26f4dbdee6283e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clearAll</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>065bfaa78eb318e09a298e920b960f05</anchor>
      <arglist>(const Cont &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resetAll</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>92cb98b4e9c572697f06d5a4bc936a02</anchor>
      <arglist>(const Cont &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readSetup</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>a4520ef244144eb10507c7e61afcce4d</anchor>
      <arglist>(tIBPtr ip, istream &amp;is)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lock</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>db6c09a7744437148fe0cb660ea34fc9</anchor>
      <arglist>(tIBPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unlock</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>b6f7384fb1814e4b78fb6ee4a61acdd8</anchor>
      <arglist>(tIBPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ClassDocumentationBase *</type>
      <name>getDocumentation</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>5e061d28b5ede3ef2935b39d02922b19</anchor>
      <arglist>(tcIBPtr ip)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>getModelDescription</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>8e46b9d6c13348b2abdaadb326c99f72</anchor>
      <arglist>(tcIBPtr ip)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>getModelReferences</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>f8497c888a3a7e767e1e9e768df978f6</anchor>
      <arglist>(tcIBPtr ip)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cout</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>a779b41de80f319dbae81c6bf3a702a6</anchor>
      <arglist>(ostream &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ostream &amp;</type>
      <name>cout</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>4e0d9f505ec9fe177439df3e0e35a209</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cerr</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>717fa9a5b72d328e03376f60a41ab06e</anchor>
      <arglist>(ostream &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ostream &amp;</type>
      <name>cerr</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>f23f830402ac9779ba29f98c9524294e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clog</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>aac687d85cfa7846e861abc17f2fda45</anchor>
      <arglist>(ostream &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ostream &amp;</type>
      <name>clog</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>c20e3e7601333fef48f1aa395c604dee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>addInterfaces</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>e53a42c55c558d3aa7d60bf5481dd896</anchor>
      <arglist>(const ClassDescriptionBase &amp;, InterfaceMap &amp;, bool all=true)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Ptr&lt; T &gt;::pointer</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>54ef637fb9b2ebf21bc8ea31c50b90cf</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Ptr&lt; T &gt;::pointer</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>ed1db0bea52590952f34d02bc75613de</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>7448232a9eb341585959a836c27605c5</anchor>
      <arglist>(InterfacedBase &amp;obj, const TranslationMap &amp;trans, const IVector &amp;defaults)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ObjectMap &amp;</type>
      <name>objects</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>805ccd16b6b2a5f1b72b34e42f880516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ObjectSet &amp;</type>
      <name>allObjects</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>661f551b0e818b1c609c3818546f8c4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static TypeInterfaceMap &amp;</type>
      <name>interfaces</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>5e2e6cf4ebe11a44baa63a30656f4b46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static TypeDocumentationMap &amp;</type>
      <name>documentations</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>6def91b79de4c041bc36d580a6a025aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static DirectorySet &amp;</type>
      <name>directories</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>e30308a42e02aff86fe4f666d1d8a3f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static StringVector &amp;</type>
      <name>directoryStack</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>28c48b27c64f86f61c9e74004843c9db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool &amp;</type>
      <name>updating</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>52457e593e552aba05d28f7d13222827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ostream *&amp;</type>
      <name>coutp</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>6bf4a9f6a7a5c810b8fe4a045b9a065d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ostream *&amp;</type>
      <name>cerrp</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>d3408de0bc3000757bd0029b98b94fc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ostream *&amp;</type>
      <name>clogp</name>
      <anchorfile>classThePEG_1_1BaseRepository.html</anchorfile>
      <anchor>998d45eeb50eadf6d1fa8969f9d68e70</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::CurrentGenerator</name>
    <filename>classThePEG_1_1CurrentGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>CurrentGenerator</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>b4b1b39f77f79e65e54512c3b20e79d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CurrentGenerator</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>a06135791be73379dc1fb77088e7a7f4</anchor>
      <arglist>(const CurrentGenerator &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CurrentGenerator</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>d282846896d456260d084ca00cbeafe7</anchor>
      <arglist>(const EGPtr &amp;eg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CurrentGenerator</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>6054e255f7adbe88b4b32f7a2405dcba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isVoid</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>6a67bdaa4844dc1cb2ccdfe9310e3705</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EventGenerator &amp;</type>
      <name>current</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>07e9ea0b75486191e42d15a3765c4150</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tSMPtr</type>
      <name>standardModel</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>6b53fd4d5f02575eae1424d86061107b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tStrategyPtr</type>
      <name>strategy</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>3ac4c96c482f9774fd4ef4353b902547</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ostream &amp;</type>
      <name>out</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>380832d63e61651c96b9995641ea9ddb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ostream &amp;</type>
      <name>log</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>ad4573c00064bd51e7de33c7e182d54d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ostream &amp;</type>
      <name>ref</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>9d3ad11fdf32afc6a8dcc27a34049e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr&lt; T &gt;::pointer</type>
      <name>getPtr</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>84e68e8ced29264c8c96496bc457b6e5</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IBPtr</type>
      <name>getPointer</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>10f3110f2ad92c2195b016bcc125c26a</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr&lt; T &gt;::pointer</type>
      <name>getObject</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>b8a0a4db6fdaf8511b51fd9b95ab2cd8</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr&lt; T &gt;::pointer</type>
      <name>getDefault</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>3667ef63e1ed171d81e2c8c8ab399cfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CurrentGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>ede138f99aa6fa785ee9fccef79e98c7</anchor>
      <arglist>(const CurrentGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>generatorPushed</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>20d2da9691a427a8e9e77097a5c4f444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static vector&lt; EGPtr &gt;</type>
      <name>theGeneratorStack</name>
      <anchorfile>classThePEG_1_1CurrentGenerator.html</anchorfile>
      <anchor>16390c97376cda6d3a992bbc0f89a081</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::EventGenerator</name>
    <filename>classThePEG_1_1EventGenerator.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function">
      <type>bool</type>
      <name>preinitRegister</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>d0b98f7768d53900670e80edce9d74ee</anchor>
      <arglist>(IPtr obj, string fullname)</arglist>
    </member>
    <member kind="function">
      <type>IPtr</type>
      <name>preinitCreate</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>99e0f4bab06af7637aa96a1e4d557a64</anchor>
      <arglist>(string classname, string fullname, string libraries=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>preinitInterface</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>505d5377b0dc74350b70cc2a15a2297b</anchor>
      <arglist>(string fullname, string ifcname, string cmd, string value)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>preinitInterface</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>5914482aa3650195dbe22ac674a65945</anchor>
      <arglist>(string fullname, string ifcname, int index, string cmd, string value)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>preinitInterface</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>effc3d162f103a7d5498ee41ad525763</anchor>
      <arglist>(IPtr obj, string ifcname, string cmd, string value)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>preinitInterface</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>63afb39bc48733085faeb5f464f11ff5</anchor>
      <arglist>(IPtr obj, string ifcname, int index, string cmd, string value)</arglist>
    </member>
    <member kind="function">
      <type>tDMPtr</type>
      <name>findDecayMode</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>89145bef35aa59e11780012fe06038e1</anchor>
      <arglist>(string tag) const </arglist>
    </member>
    <member kind="function">
      <type>tDMPtr</type>
      <name>preinitCreateDecayMode</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>38eb453a6ed39c26ef72795bce364ae7</anchor>
      <arglist>(string tag)</arglist>
    </member>
    <member kind="function">
      <type>tPDPtr</type>
      <name>findParticle</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>830d25d5b5a0f92245eb0be0bd87d7b9</anchor>
      <arglist>(string pdgname) const </arglist>
    </member>
    <member kind="function">
      <type>tPMPtr</type>
      <name>findMatcher</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>b8bd7f9ed3b87d5fdd4b3625a8c8e48b</anchor>
      <arglist>(string name) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>DMPtr</type>
      <name>constructDecayMode</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>30cd3eff0bc6cbef48691c1b27d6bcff</anchor>
      <arglist>(string &amp;tag)</arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; const type_info *, int &gt;</type>
      <name>ExceptionMap</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>132e1c50531903d8f8559d15ce18855c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tSMPtr</type>
      <name>standardModel</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>a431f037476aa25a2c091197a4cbf180</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tStrategyPtr</type>
      <name>strategy</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>67a9a9c904e69e4fd0843bf6d21ac8b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tEHPtr</type>
      <name>currentEventHandler</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>1fc3888367ded8edc2c046cdb0b8e006</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentEventHandler</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>5b0aa8a648dc2d71fc321b17cb6ce84e</anchor>
      <arglist>(tEHPtr)</arglist>
    </member>
    <member kind="function">
      <type>tStepHdlPtr</type>
      <name>currentStepHandler</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>329b751cbc3a53fcafb6abfe391f07ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentStepHandler</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>215bd9d42f36b48635b7f03cae037e35</anchor>
      <arglist>(tStepHdlPtr)</arglist>
    </member>
    <member kind="function">
      <type>tEHPtr</type>
      <name>eventHandler</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>6188b9bee8802bda0fac3a69c36e1a66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AnalysisVector &amp;</type>
      <name>analysisHandlers</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>4c4140a693336a299a64d29778298a3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tHistFacPtr</type>
      <name>histogramFactory</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>fe9936385cd42a9092e14b6f8a73c84d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tEvtManipPtr</type>
      <name>manipulator</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>66194c716b138768ea8488e655c601ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>801018cbf7db373eb4250cbbb5523af9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>go</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>4225f97d6835fa58287ba3c8586725da</anchor>
      <arglist>(long next=1, long maxevent=-1, bool tics=false)</arglist>
    </member>
    <member kind="function">
      <type>EventPtr</type>
      <name>shoot</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>20da6cdb64935d4cdf9a881ee6b2ae6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventPtr</type>
      <name>generateEvent</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>e7cd472f7b3d94c27b9d7ad42e7d1494</anchor>
      <arglist>(Event &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>EventPtr</type>
      <name>generateEvent</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>8722a35c6225cd54e40e7315255c8cd3</anchor>
      <arglist>(Step &amp;step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>38b1cb8c38731730eb9748ffe4a8a166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadMain</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>b33dab20f76caecdba0159aef08f10c5</anchor>
      <arglist>(string file)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Energy</type>
      <name>maximumCMEnergy</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>bb6b87920ce3ef5511b266a5b8ace0de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>currentEventNumber</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>ccceb2cf9c78440652dfec4affbddba1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tcEventPtr</type>
      <name>currentEvent</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>f0836fdeda9edb114367fec9a133f232</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dump</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>47ad4be4fe782e8354f5aacf5dc7e795</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>use</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>b0ae3092122ca3a674cee47095ce27f6</anchor>
      <arglist>(const Interfaced &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>538df446bf4cc90349009c37eba0521f</anchor>
      <arglist>(long seed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logWarning</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>ed1b6b9ac12086b0f2a713ba4e871a5e</anchor>
      <arglist>(const Exception &amp;)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>N</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>05cf7112fd9748c92e6e9e5f9d27f0a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CrossSection</type>
      <name>histogramScale</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>7b5a8a380de86d398ca8c7e646f7e4b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CrossSection</type>
      <name>integratedXSec</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>cf31efe2169c2105d3fa2899741a8d6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumWeights</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>565699c5b992931f14d22181317df96a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>filename</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>3efafce8dca3cd06906649fa8e57ab2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>runName</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>1dcdc1c27f1b22a25bae4e79ee0a5aac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>path</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>f999454f91ec42ce605ee2c76965c76b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openOutputFiles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>119e1403aa00b00928eac51cc20dcb61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeOutputFiles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>ed6bc55823b8623ea4e5bc8253d36610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ofstream &amp;</type>
      <name>outfile</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>458523f97bd81842e8a19fd82cfff775</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ofstream &amp;</type>
      <name>logfile</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>b4bec69d834a03084b09de8e63821c9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ofstream &amp;</type>
      <name>reffile</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>8af2410e09c71cf02882caa791a63779</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>out</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>a9216d01e4cf98903a984b03513c421f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>log</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>8419d6ff1889f423fe1b065b1492d7b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>ref</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>569a7b443b6a661e9c001347116849a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ObjectSet &amp;</type>
      <name>objects</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>1705d1fc92e10ae033c37a72e5ef8085</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ObjectMap &amp;</type>
      <name>objectMap</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>136e0203335871a56f61a13de721c620</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;::pointer</type>
      <name>getPtr</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>32de1b9d039b92bea974ec1c1c2c3840</anchor>
      <arglist>(const T &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>IBPtr</type>
      <name>getPointer</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>c419c02539429a296bc94d5c92e2551a</anchor>
      <arglist>(string name) const </arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;::pointer</type>
      <name>getObject</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>a0b36130a2119f7f13d9fc4fac30b626</anchor>
      <arglist>(string name) const </arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;::pointer</type>
      <name>getDefault</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>a3e2b1dcc64887b791dd72af196d8a26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PPtr</type>
      <name>getParticle</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>f00929980128b101335999c00672876b</anchor>
      <arglist>(long id) const </arglist>
    </member>
    <member kind="function">
      <type>PDPtr</type>
      <name>getParticleData</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>110e6e0e5696c8a40bd84d21c16c7d9f</anchor>
      <arglist>(long id) const </arglist>
    </member>
    <member kind="function">
      <type>const MatcherSet &amp;</type>
      <name>matchers</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>e845418080c89d77e0f1342e4e326799</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParticleMap &amp;</type>
      <name>particles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>4126b3a2dfad0b6747312ed730b16491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ObjectSet &amp;</type>
      <name>used</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>23290c5d1419fd93dcf10398690ddc7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>2ddc910c55f553346f1ba6d39347b4ca</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>05f7eddaa7e13cfc09a8d708aae924d0</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>bd40a906f2eff54a1b1fa76d7eba88ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkSignalState</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>d7a485e52c5db1d7e198000766487ee1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>RandomGenerator &amp;</type>
      <name>random</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>b81888fa306432ea5d4bc2dd77fa0042</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>e95dc1652b19a67975d597af122c3c16</anchor>
      <arglist>(string newRunName, ObjectSet &amp;newObjects, ParticleMap &amp;newParticles, MatcherSet &amp;newMatchers)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printException</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>d58b1a60c32ec84fe560c94d1489bd35</anchor>
      <arglist>(const Exception &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>logException</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>5068b93fa34951ccc40e09ab286a0495</anchor>
      <arglist>(const Exception &amp;, tcEventPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>N</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>dd41fc2f5622b3d3d0133dffa74d6409</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runName</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>053c0996eeef46cf1e6c43a8b98efba9</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ObjectSet &amp;</type>
      <name>objects</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>0eddb8c8128efd88b405e85d827e87f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ObjectMap &amp;</type>
      <name>objectMap</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>4092f7be35ca75e2d23ba7a8d16ff4a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateReferences</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>1336c641509a3a1c1bcd175b22dee45f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>count</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>c518e7cfe98cf3593754a89a9c2c0f83</anchor>
      <arglist>(const Exception &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doGo</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>3f71a7c0fbe1f3da55dd1f06bc0ad234</anchor>
      <arglist>(long next, long maxevent, bool tics)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doInitialize</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>d4d7d7550ebbb71cf6cd837b68d47c48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EventPtr</type>
      <name>doShoot</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>e74410f5ff67d04c85b790a0f36c9548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>tic</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>ee834f28a661884779d0e7bcdb9b3b3a</anchor>
      <arglist>(long currev=0, long totev=0) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EventPtr</type>
      <name>doGenerateEvent</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>30be536865866ca427a9f97ce36bf7b4</anchor>
      <arglist>(tEventPtr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EventPtr</type>
      <name>doGenerateEvent</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>aba7aadb8bee80fc231af238b95054db</anchor>
      <arglist>(tStepPtr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>0bd8a885486b621fdfdd10bb94982958</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>beb9ecac6f5095052d059fefcd0ad5db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>0ad14a474b207146ab2a939e35224e8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>be6c2e2687708d0c7e459310da53c445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>53a7f33462ad3b6e9696cced7e9e4653</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>70ad6d39de0cccf2e23287fcdf5ff76e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>ieve</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>ef6eccdc2c1dfd0f9b5ca465625effad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>weightSum</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>aa4447200111cd91dc2dfdb3e4f2c9cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>theDebugLevel</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>0c15d958820c766c9b080b8d7b8bdcb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>const vector&lt; IPtr &gt; &amp;</type>
      <name>defaultObjects</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>61268c71376c2d4a3b85fa8a4b3415f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ParticleMap &amp;</type>
      <name>localParticles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>f3ac4d6fe29448e145f8e560a59832a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const ParticleMap &amp;</type>
      <name>localParticles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>f7d58a488ce8c8197751bc4d3cd71e96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>path</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>492af6df1c53c33db790cc33d19dc7c2</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>strategy</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>a5f748be8f473d0dc0b39aaee8796dec</anchor>
      <arglist>(StrategyPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>string</type>
      <name>doSaveRun</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>2401ae8199148ee405345ef466bfcc5b</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>string</type>
      <name>doMakeRun</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>db24fe2919fead3cd0521129a0a66c30</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setLocalParticles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>4bd0996b235f898fc7b5b50ec349e8a7</anchor>
      <arglist>(PDPtr pd, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>insLocalParticles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>9b13398637ebd85a676007e3b2820063</anchor>
      <arglist>(PDPtr pd, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>delLocalParticles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>59ddad7842314e1f3bf385fe0cf34e30</anchor>
      <arglist>(int place)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; PDPtr &gt;</type>
      <name>getLocalParticles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>44cf255cfad3cc601d5e02bf630d50f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setPath</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>e9d77019323894c1769cc18af201358d</anchor>
      <arglist>(string newPath)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>string</type>
      <name>defPath</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>4755138bcd9f68cfb6409a0413c2bd46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>EventGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>c1ef3adda8144d051b05d5e6e3fc27a8</anchor>
      <arglist>(const EventGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; IPtr &gt;</type>
      <name>theDefaultObjects</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>20606955238a112b823b461dda2b6d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleMap</type>
      <name>theLocalParticles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>d24b412fba53d2ea590ab54fffab2c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SMPtr</type>
      <name>theStandardModel</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>08a8e4ba0db97ae152848eab99645bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StrategyPtr</type>
      <name>theStrategy</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>f3b3eebe561f936db93bb88e0ec9eb9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RanGenPtr</type>
      <name>theRandom</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>fd8c786ed5377b58632fcc986f4dbea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EHPtr</type>
      <name>theEventHandler</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>137c7b5793479aead78afd7909c7b83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AnalysisVector</type>
      <name>theAnalysisHandlers</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>ae7f96e38508ac7cc44b188585ceb6b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HistFacPtr</type>
      <name>theHistogramFactory</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>62a8818e377a933665f90de36fb5c153</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EvtManipPtr</type>
      <name>theEventManipulator</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>271df3a0e38d37f7fa897fe79cc620fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>thePath</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>c08d2c443686fee5b7d15f7d508d913f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theRunName</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>0cd553764fd800445f70cec9ccf87093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ofstream</type>
      <name>theOutfile</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>f2c7a9aa599ebe519f94d8f688ce90d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ofstream</type>
      <name>theLogfile</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>1dcd962c40fedc99e46b20e52911ceaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ofstream</type>
      <name>theReffile</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>21d9782721e92caa54c675c037a020bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theNumberOfEvents</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>3e8b106844fff4cd6178c2aca8d95803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ObjectSet</type>
      <name>theObjects</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>99dfa2da6df6f90bef6641e4a3b27007</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ObjectMap</type>
      <name>theObjectMap</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>446e2f0fb9cacc5e223e3efc388782ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleMap</type>
      <name>theParticles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>2d0cb9be4a776a171cbb0d1da462edff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDVector</type>
      <name>theQuickParticles</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>d7700e74104dafc8420e75b3f02d027a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theQuickSize</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>10f27c808a273d9879aebc8d6ab8655c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>preinitializing</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>c24d513ee51fac57ca91ae285d89c555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MatcherSet</type>
      <name>theMatchers</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>0a05e675565188f092e78fbd83aedea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ObjectSet</type>
      <name>usedObjects</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>36a058867e03b7e5ace98f5711fd2fb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>printEvent</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>e68b34f1853b97a753a3fb528e7e1018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>dumpPeriod</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>ef0d39ccd0e3924a5d7139453894ea5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>debugEvent</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>cd61cbaa244aab0258cae8da3febbb4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxWarnings</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>60219f2e813e8cd88d7b858a5d90c4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxErrors</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>659a1ff943d43e792b8677c6ea0e096c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ExceptionMap</type>
      <name>theExceptions</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>4d02e67ca9feec79f39184fc39e8968f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UseRandom *</type>
      <name>theCurrentRandom</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>1b9b1c8bf4c6e66f43a88610a0f5a7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CurrentGenerator *</type>
      <name>theCurrentGenerator</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>de5d16f7ff982a2a79bdbeabe71344c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tEHPtr</type>
      <name>theCurrentEventHandler</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>ca00542b8cd6e6c9a07d7b8d74eec048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tStepHdlPtr</type>
      <name>theCurrentStepHandler</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>33e0a2ca33e6642c2fe1954d6700c378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; EventGenerator &gt;</type>
      <name>initEventGenerator</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>0e05485e7f146497d968b9455bdd46fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Repository</name>
      <anchorfile>classThePEG_1_1EventGenerator.html</anchorfile>
      <anchor>aeade420d983c3fba7d0098833055006</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Main</name>
    <filename>classThePEG_1_1Main.html</filename>
    <base>ThePEG::Base</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>eventGenerator</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>a6ed5c01bd061555aa943c38766db913</anchor>
      <arglist>(tEGPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tEGPtr</type>
      <name>eventGenerator</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>e15d8f1c698ffe481a13e0060cac4ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>N</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>4b4322a56ae171d2b29acf9f6791664e</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>N</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>c3c6377d0588340dd55cc95321e59d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>arguments</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>0a4e0ef3864499e391da4e89f22a2709</anchor>
      <arglist>(const vector&lt; string &gt; &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const vector&lt; string &gt; &amp;</type>
      <name>arguments</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>208b7fde1d2576ced8cbf90c2af8a09d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>18f3b11c542d45831daf131d426ae8a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Main &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>57eebe92ac85eb104f3c3f71975b702a</anchor>
      <arglist>(const Main &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static EGPtr</type>
      <name>theEventGenerator</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>44b9d8c8bdf47ccbf6ff58f5c79a7718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static long</type>
      <name>theN</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>9b618c142cc4227bb28901138e1783e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static vector&lt; string &gt;</type>
      <name>theArguments</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>f0c09705f661e6686819b6a74aa0dca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; Main &gt;</type>
      <name>initMain</name>
      <anchorfile>classThePEG_1_1Main.html</anchorfile>
      <anchor>47965e59eb99e2bfb614500bcbb003ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MultiEventGenerator</name>
    <filename>classThePEG_1_1MultiEventGenerator.html</filename>
    <base>ThePEG::EventGenerator</base>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>95dadc95fc127faf41d6c9cdd8724cfb</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>7fa3c5a7be60a84353b69d10b8a0b757</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>2517ede8bef400e8539ca73a5e112eb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doGo</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>c6dea3ea1531cb5f680fa4374c9a7e08</anchor>
      <arglist>(long next, long maxevent, bool tics)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>string</type>
      <name>addInterface</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>719ae9b81e04a0d52ffe69b0756c2442</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>string</type>
      <name>removeInterface</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>afafd2d6523fb71dd0c33eb592b368b3</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>d2897c17136cd20aa9caa0b1fda55b2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>32a9aed799d2e3f9d71bfbfa95b0c44d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>2c2e5a5036267cde1de241a8a77a2a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>a31d404a4aa25417313a887d7c0d13e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinitrun</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>79b61d7a95751777dc369cb8700658f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>82c9e2f68eeec64e38d0b7e55b8d5bd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>3b53793aed484c282a107b01a09d748e</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>2612fab03edbdaff9fcd98f560ca011c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>vector&lt; string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>b4058943ac251143d9df1a31340e7f08</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>MultiEventGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>96b1470282203cfe832fedb19ce1e222</anchor>
      <arglist>(const MultiEventGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IVector</type>
      <name>theObjects</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>ba39d15f5496ed0e6bc983caae5e73f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StringVector</type>
      <name>theInterfaces</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>a00aa6c26b597100007ca6dc8566b0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StringVector</type>
      <name>thePosArgs</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>3727b9376565050778481d8f79938ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; StringVector &gt;</type>
      <name>theValues</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>bd3e1b7a8e0ab43fe010c1ebd65856db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; MultiEventGenerator &gt;</type>
      <name>initMultiEventGenerator</name>
      <anchorfile>classThePEG_1_1MultiEventGenerator.html</anchorfile>
      <anchor>64a6193dfd9afdb66e1c23d88684cc14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::RandomGenerator</name>
    <filename>classThePEG_1_1RandomGenerator.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="typedef">
      <type>vector&lt; double &gt;</type>
      <name>RndVector</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>ddd926051dba31bc8e9c429fda049f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RndVector::size_type</type>
      <name>size_type</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>6491c4313e0d3bd3d04aadbf61c128c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RandomEngine &amp;</type>
      <name>randomGenerator</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>7a0ea7e7065112637c24a8b814fba10a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>74fb827d1406c1107f82fe4a34f369b3</anchor>
      <arglist>(long seed)=0</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rnd</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>1c302df1d4d7a026c505a68523ec73c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RndVector</type>
      <name>rndvec</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>396e38735ef82f50576d4345b61e8465</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>07c8f02d679ce154b5aa6ba9f84aa502</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>05b5676e0b4eb00afdefb08bda9f47b6</anchor>
      <arglist>(long N)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rndbool</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>8252a72a472711aa5354d7c468b89ad1</anchor>
      <arglist>(double p=0.5)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rndbool</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>6bedd1817c394e37f77d460d9dbe227e</anchor>
      <arglist>(double p1, double p2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rndsign</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>28e212a7def42555c4c4ef91db22bcfd</anchor>
      <arglist>(double p1, double p2, double p3)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rnd2</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>8d374a6b879ae7f095d86bbf0277f2aa</anchor>
      <arglist>(double p0, double p1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rnd3</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>5e9fcdf9c1a8b8243cbcbc7a991387bf</anchor>
      <arglist>(double p0, double p1, double p2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rnd4</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>57f10a420bc09b9e35aef3b5cb864a1b</anchor>
      <arglist>(double p0, double p1, double p2, double p3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>08251fa6c13f85c45bb3e3052957c8d4</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>b6fc3da206fd6d9584fa54e1fdca317f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>d0c9f4b3f8ca6ad3e9184240830cda5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rnd</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>528b1cf7f0d9027b2b03db5050e289cf</anchor>
      <arglist>(OutputIterator, size_type n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>7cf9b9b6b3eed5317fcbdb15e2139b98</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>10086fc7032687d0086cf555ff3f3226</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>3d4c09df7a7c9c7869b865972d1abc19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>ad5e4a2418badd990ab13a58e12c6086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>7b1193179b533de6c8d59ef64e4ace15</anchor>
      <arglist>(size_type newSize)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>getFlatNumbers</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>98d59eaf696a612fbc2a9bb724f4625e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RandomGenerator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>1cff96afcb68c32309ce74e05d608b59</anchor>
      <arglist>(const RandomGenerator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RndVector</type>
      <name>theNumbers</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>1bf39e127b629c47db77ddcdbfe9f94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RndVector::iterator</type>
      <name>nextNumber</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>997b58540c9dd1c16f0be070b98cd7eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>theSize</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>e6ffb2b261bc0ac90219dc9177e0c867</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theSeed</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>6162f3df18be519d9ac6dbe32345bf06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; RandomGenerator &gt;</type>
      <name>initRandomGenerator</name>
      <anchorfile>classThePEG_1_1RandomGenerator.html</anchorfile>
      <anchor>dbe18ba8008b7b0d5db70e80870b221a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Repository</name>
    <filename>classThePEG_1_1Repository.html</filename>
    <base>ThePEG::BaseRepository</base>
    <member kind="function" static="yes">
      <type>static int &amp;</type>
      <name>exitOnError</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>90def9df44395c3b78f86980473e5914</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ParticleMap &amp;</type>
      <name>defaultParticles</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>8ccf5ed064c2d4fcd8c2063678827665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ParticleDataSet &amp;</type>
      <name>particles</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>9643620d461a8a7713b30e4d118e7254</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static MatcherSet &amp;</type>
      <name>matchers</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>7cf2d1a05f0f64645783eb6b4bf9fa25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static DecayModeSet &amp;</type>
      <name>decayModes</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>05d7c0feb86154273e8cf7e9e2138d22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static GeneratorMap &amp;</type>
      <name>generators</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>49104333eb6c64b2b37374f2da5189ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static string &amp;</type>
      <name>currentFileName</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>128fe7f6a26a9b31e8d9229ca5deb21b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; string, EGPtr &gt;</type>
      <name>GeneratorMap</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>64bd22d85a75487b41af706491eef6f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Register</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>a04846464e5ef3671e2e488b0fca08fd</anchor>
      <arglist>(IBPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Register</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>fcb8d844ca2e6ae7f1f6a9b351ab3aaf</anchor>
      <arglist>(IBPtr, string newName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>defaultParticle</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>7cbb6f8176ded16542b821a86f1231d3</anchor>
      <arglist>(tPDPtr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PDPtr</type>
      <name>defaultParticle</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>d42a55d373a595c7e237ebefc022c709</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tPDPtr</type>
      <name>findParticle</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>414823db0ea646a1da971ba9abb8b7a4</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ParticleDataSet &amp;</type>
      <name>allParticles</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>9b4fd113c820d2ddfad5d966cc03a5cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const MatcherSet &amp;</type>
      <name>allMatchers</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>8735a3a8a5d50c3f43309843bd822edc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tPMPtr</type>
      <name>findMatcher</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>b47d2b7f79226373c059b6e0abd15d65</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tDMPtr</type>
      <name>findDecayMode</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>3f51b341f3e3825949501a6fbb7d7ff0</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>copyParticle</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>b3a8f0f3c317f47a9d11dda0d8fe2d87</anchor>
      <arglist>(tPDPtr, string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EGPtr</type>
      <name>makeRun</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>bd6a29aeac7a4ac3cc519a48377dd3e6</anchor>
      <arglist>(tEGPtr eg, string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>saveRun</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>6fab63bee2902c4a45dbdc3e8c159c44</anchor>
      <arglist>(string EGname, string name, string filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>load</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>22e991f26a36376a11533742e5994cd0</anchor>
      <arglist>(string filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>save</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>97c7be18376d3ebe3725c583b31be5e4</anchor>
      <arglist>(string filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>save</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>780a1aacdc4f74afa6fffebe909a2971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stats</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>7028df50caa0919f04338dd939f36ea4</anchor>
      <arglist>(ostream &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>read</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>f9d1c202ae25fb1ba8649c365193bf98</anchor>
      <arglist>(istream &amp;is, ostream &amp;os, string prompt=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>exec</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>ccf5f0bf1c07a9175709621cbff6f977</anchor>
      <arglist>(string cmd, ostream &amp;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>registerParticle</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>5c781171b0ca36ad2732930ab1d2a5e0</anchor>
      <arglist>(tPDPtr)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>registerMatcher</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>204c21c7eba60958a3b03bb5f503ebc5</anchor>
      <arglist>(tPMPtr)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>registerDecayMode</name>
      <anchorfile>classThePEG_1_1Repository.html</anchorfile>
      <anchor>ddb4c6f5afc972c615eeae6143198d25</anchor>
      <arglist>(tDMPtr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::StandardRandom</name>
    <filename>classThePEG_1_1StandardRandom.html</filename>
    <base>ThePEG::RandomGenerator</base>
    <member kind="function" virtualness="virtual">
      <type>virtual RandomEngine &amp;</type>
      <name>randomGenerator</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>def942d2085b28b9f564cc445db3d95d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>6e78aae345d8559eea714be6feab846d</anchor>
      <arglist>(long seed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>b568c2c42ebcc2cac89bfcfa736960bd</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>913ba298a6990d769e7961a714d8e8c5</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>f2b0c6b50ce645eb293bd2be5c0293d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>5055cf10f0746383fad99c62f792e3a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>b841ce3c980d9b6afc71a378dc69ffb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>c5908749389f85eb8ed55c6c03de0439</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>da2c0244ef67012acf50ebb481df5a40</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>fa921e81957d5038029e553f4f372b2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>4b03c79b921ebacd5722be5b216afa2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>89ebc9c25b0cdca1168690bca3cac692</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>StandardRandom &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>da658ab5a3bcc71f4783a0451b8238c1</anchor>
      <arglist>(const StandardRandom &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>JamesRandom</type>
      <name>theRandomGenerator</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>fa7b6bdf0954d91241b7cd9afdac6249</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; StandardRandom &gt;</type>
      <name>initStandardRandom</name>
      <anchorfile>classThePEG_1_1StandardRandom.html</anchorfile>
      <anchor>515808b2ccebc387478eb080ef13b772</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Strategy</name>
    <filename>classThePEG_1_1Strategy.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function">
      <type>const ParticleMap &amp;</type>
      <name>particles</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>828849812d0ba6f8b61290ba60acf19e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector&lt; IPtr &gt; &amp;</type>
      <name>defaultObjects</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>942749a8e215a1f5e810ced9de843f29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>52184c359df27fec031eb9350340435f</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>f78ce5dd65843201fb8633ca0f02f845</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>e61ed862fbed8c1425b77ce3060006cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>e84f04395c221ddecc05c530257e7443</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>fed66403c8bcaaedcec61281846f3e4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>e99ff97af47109621153bb205d193ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>e6814e3bd84d97ab6a1d73dd13d6769f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>c8bcc478663b16812fddaa7ad4f979ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ParticleMap &amp;</type>
      <name>particles</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>48be6c9c924cdebe53e6f92e72be15ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setLocalParticles</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>c345aeed4597ca1a7fb72151847c68f1</anchor>
      <arglist>(PDPtr pd, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>insLocalParticles</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>1f0ad28882c7e29ee2aa319985d4d12b</anchor>
      <arglist>(PDPtr pd, int)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>delLocalParticles</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>e7d48457fadc31490c61e9826a607530</anchor>
      <arglist>(int place)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>vector&lt; PDPtr &gt;</type>
      <name>getLocalParticles</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>17a948d9e208c4c2295f8750c3b92bf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Strategy &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>eb82dda1283a440149cec9b6823fd559</anchor>
      <arglist>(const Strategy &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParticleMap</type>
      <name>theParticles</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>b630fa72853f2d8b9eed00a6cdbe7e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; IPtr &gt;</type>
      <name>theDefaultObjects</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>a5652d9760113fa19260203faaefd4a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; Strategy &gt;</type>
      <name>initStrategy</name>
      <anchorfile>classThePEG_1_1Strategy.html</anchorfile>
      <anchor>c9560442a552b9b4aafa6c7d9be1f026</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ThePEGStrategy</name>
    <filename>classThePEG_1_1ThePEGStrategy.html</filename>
    <base>ThePEG::Strategy</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>c03f64382d670ddff7098a1c084fe89f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>1b58e7b4913fcadaad6f041cb36ddf6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>87d21401317ccc656dc4e1f787575b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>1ae68d0839a16ddc9bafed6247fbaee4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>7e98dea86f0bbaa17d5b6cfca5767a39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>f555ead8a0f48f758e5b74bff264662f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>32dd7df835ca9436384b59d24dc1c29b</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>14831615727ffa6a24eb6983c9702d1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ThePEGStrategy &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>7fa628e9fa2d29d5ea18ba72eb4686d8</anchor>
      <arglist>(const ThePEGStrategy &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; ThePEGStrategy &gt;</type>
      <name>initThePEGStrategy</name>
      <anchorfile>classThePEG_1_1ThePEGStrategy.html</anchorfile>
      <anchor>18aa95ad737a27bfccb63fdbb270e8e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::UseRandom</name>
    <filename>classThePEG_1_1UseRandom.html</filename>
    <member kind="function">
      <type></type>
      <name>UseRandom</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>0aac418701b9b30606c0ad8cae161ee9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UseRandom</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>886c2225bcd7a8f8ca3dceda53f9b2bd</anchor>
      <arglist>(const UseRandom &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UseRandom</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>b35c4c89e6124989604d3973c269e79d</anchor>
      <arglist>(const RanGenPtr &amp;r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UseRandom</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>2eaf277f8fdb814dc3849070795caa22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RandomGenerator &amp;</type>
      <name>current</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>50aded1462ddf4f64f786a528647f185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RandomEngine *</type>
      <name>currentEngine</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>08a474ccb68eb736c5f2fdc84df38013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>rnd</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>e0ed3664134f5775e8355e1692fe2340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RandomGenerator::RndVector</type>
      <name>rndvec</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>a00cde43561e026224cf69670859f162</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>rnd</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>48a09c6c62669f3753e7331dd51e883a</anchor>
      <arglist>(double xu)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>rnd</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>ab4eb72073c98b8c4240872c7e8d682c</anchor>
      <arglist>(double xl, double xu)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>rndbool</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>86b6d2aa830679d44b348d93c80bb8d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>rndbool</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>35272d103207b738c6983291f48f0e62</anchor>
      <arglist>(double p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>rndbool</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>1fce1eebe5bca6817eb5fc14545e9fe3</anchor>
      <arglist>(double p1, double p2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>rndsign</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>c3e44d01584a086892425ebc2f63197b</anchor>
      <arglist>(double p1, double p2, double p2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>rnd2</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>cbc007e0640f5a8eb01b02416a995896</anchor>
      <arglist>(double p0, double p1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>rnd3</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>8789eb018cb92453915f36e6fe871c0a</anchor>
      <arglist>(double p0, double p1, double p2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>rnd4</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>417f657f40c005649beec6332d3f0917</anchor>
      <arglist>(double p0, double p1, double p2, double p3)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>irnd</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>7fdd9253f1af70966f323a261aa565fe</anchor>
      <arglist>(long xu=2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>irnd</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>b31fda51a5f68df0a5117e648511717b</anchor>
      <arglist>(long xl, long xu)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>UseRandom &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>21ce3bc1e7a5ada3e6016e6db111c34c</anchor>
      <arglist>(const UseRandom &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>randomPushed</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>7f8cc457e198105408f40429dcee329a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static vector&lt; RanGenPtr &gt;</type>
      <name>theRandomStack</name>
      <anchorfile>classThePEG_1_1UseRandom.html</anchorfile>
      <anchor>c146f91cbb7999a7e2a9e5f1c5b50ed9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::TestLHAPDF</name>
    <filename>classThePEG_1_1TestLHAPDF.html</filename>
    <base>ThePEG::Main</base>
    <member kind="function">
      <type></type>
      <name>TestLHAPDF</name>
      <anchorfile>classThePEG_1_1TestLHAPDF.html</anchorfile>
      <anchor>2b2f2b95aa97c0b0dbb09496914560cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TestLHAPDF</name>
      <anchorfile>classThePEG_1_1TestLHAPDF.html</anchorfile>
      <anchor>5c6c9d8f34f8783a45d768791b40ff1f</anchor>
      <arglist>(const TestLHAPDF &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TestLHAPDF</name>
      <anchorfile>classThePEG_1_1TestLHAPDF.html</anchorfile>
      <anchor>5268d2b2af3f7d5bbc785a6fd5f3e4ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1TestLHAPDF.html</anchorfile>
      <anchor>869f7ab1bec266b3ea34298c4ecfee91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>TestLHAPDF &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1TestLHAPDF.html</anchorfile>
      <anchor>c51c38db5068822298c805c846fb4dfb</anchor>
      <arglist>(const TestLHAPDF &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; TestLHAPDF &gt;</type>
      <name>initTestLHAPDF</name>
      <anchorfile>classThePEG_1_1TestLHAPDF.html</anchorfile>
      <anchor>ffc5b0a545adb42fee950495e7c68fc8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::AlphaEMBase</name>
    <filename>classThePEG_1_1AlphaEMBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>value</name>
      <anchorfile>classThePEG_1_1AlphaEMBase.html</anchorfile>
      <anchor>32c9f5918aace2a40d7938035ae57a9b</anchor>
      <arglist>(Energy2 scale, const StandardModelBase &amp;sm) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1AlphaEMBase.html</anchorfile>
      <anchor>e361195985c037d18cc157dc69a5d9a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>AlphaEMBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1AlphaEMBase.html</anchorfile>
      <anchor>2b05a78db412fa2d849256d44dea4d5a</anchor>
      <arglist>(const AlphaEMBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; AlphaEMBase &gt;</type>
      <name>initAlphaEMBase</name>
      <anchorfile>classThePEG_1_1AlphaEMBase.html</anchorfile>
      <anchor>b51ff771362b80824a5027cdc8d7c3c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::AlphaSBase</name>
    <filename>classThePEG_1_1AlphaSBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>value</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>9daa7c601a8736e7bf3e8a55738ea326</anchor>
      <arglist>(Energy2 scale, const StandardModelBase &amp;sm) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual vector&lt; Energy2 &gt;</type>
      <name>flavourThresholds</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>68971871078517f7880104f0398cfcc0</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual vector&lt; Energy &gt;</type>
      <name>LambdaQCDs</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>fbf2ca2d4b766656c4d11fb459042481</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Nf</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>98088a7c129b153e14e171502b50402d</anchor>
      <arglist>(Energy2 scale) const </arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>LambdaQCD</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>a9839f0fbbd2122fc9994322eefdf9b1</anchor>
      <arglist>(unsigned int nflav) const </arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>LambdaQCD</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>864b59fe825477a446fb255df438ff6e</anchor>
      <arglist>(Energy2 scale) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>42e7359cd7b3295e77a49d5046e7d8e6</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>af8f7d8b7801125791fa5dd3e95a365c</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>8e13bf65aefed71b9a5c3840a77c83d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>9a8594959334d0df97a8921044706384</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>cf0233fa47fc373b711617dd83f56f5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>511adeb87ca334fc7dc1bc0a2a9d24fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>AlphaSBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>bf9370bca94068e3123af806bac031e0</anchor>
      <arglist>(const AlphaSBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; Energy2 &gt;</type>
      <name>theFlavourThresholds</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>df31dc22fea3b153f6322c82dd92ba19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; Energy &gt;</type>
      <name>theLambdaQCDs</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>cb4985ce14e1f2e732066e6ce789295a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractClassDescription&lt; AlphaSBase &gt;</type>
      <name>initAlphaSBase</name>
      <anchorfile>classThePEG_1_1AlphaSBase.html</anchorfile>
      <anchor>d0285058087863bd7b7675ec4131dba0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::CKMBase</name>
    <filename>classThePEG_1_1CKMBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function" virtualness="pure">
      <type>virtual vector&lt; vector&lt; double &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classThePEG_1_1CKMBase.html</anchorfile>
      <anchor>31d7127a5fe7d311abe69755036af82f</anchor>
      <arglist>(unsigned int nf) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1CKMBase.html</anchorfile>
      <anchor>3cff4f9e8244f8825610af6ffa669cce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CKMBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1CKMBase.html</anchorfile>
      <anchor>6273a517d3c3d8cbd8c2cf868b10c29d</anchor>
      <arglist>(const CKMBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; CKMBase &gt;</type>
      <name>initCKMBase</name>
      <anchorfile>classThePEG_1_1CKMBase.html</anchorfile>
      <anchor>c0ae3501fedfce8d6bcdef535855f0e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::O1AlphaS</name>
    <filename>classThePEG_1_1O1AlphaS.html</filename>
    <base>ThePEG::AlphaSBase</base>
    <member kind="function">
      <type>unsigned int</type>
      <name>getMaxFlav</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>eb1d69b82dfa758e874ebbae944e6f4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>value</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>a9c65fcf4ceb61a1638f2964aa9f3e67</anchor>
      <arglist>(Energy2 scale, const StandardModelBase &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector&lt; Energy2 &gt;</type>
      <name>flavourThresholds</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>964e4642edf28f38a0db0e3c91315991</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector&lt; Energy &gt;</type>
      <name>LambdaQCDs</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>400d6b5e1d8d70e284d37066ba393827</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>b2a2ae88d103953be692732847c97724</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>4093d36c07d9b0c5ed85d672ab8e0e0c</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>56c6431ef304d624518e63763f8cc985</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>afb5331515fe8955c5b8af7234bb044a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>34d4a47ee3a40772cdbc328f3620feb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>cf811d74ba16dd6ed820698a6c73b6da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>8513fb1d5173155132ee82f327f62ff5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>a31b6be770b8a413a9b9b65448d1f94b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>0812349fb6c1f81fe1687b92e9140a1e</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>448f05555e4d345524d0a469ff0a3ace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>O1AlphaS &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>ba862ce85dd75f7201014eaeafa2ac45</anchor>
      <arglist>(const O1AlphaS &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>theLambdaQCD</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>32a0a0e41d6d77ae290ae0cc842994e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>theLambdaFlavour</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>8e14580d45a35ab4dabb6230e04997dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>theMaxFlav</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>9a61548a2c467ba17a93b6cd8fba1a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Energy</type>
      <name>Q0</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>67712ce1796cca9445b3e5dfce842b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; O1AlphaS &gt;</type>
      <name>initO1AlphaS</name>
      <anchorfile>classThePEG_1_1O1AlphaS.html</anchorfile>
      <anchor>ff29c6f43d0353fdd9ea01caf637c106</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SimpleAlphaEM</name>
    <filename>classThePEG_1_1SimpleAlphaEM.html</filename>
    <base>ThePEG::AlphaEMBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>value</name>
      <anchorfile>classThePEG_1_1SimpleAlphaEM.html</anchorfile>
      <anchor>508280c3fc0335078ccff9b7075c31dc</anchor>
      <arglist>(Energy2 scale, const StandardModelBase &amp;) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1SimpleAlphaEM.html</anchorfile>
      <anchor>d885218c7ee52d5fda0fd4c79509046b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1SimpleAlphaEM.html</anchorfile>
      <anchor>01f9799e45b2944c0e3e4d5bdbed93f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1SimpleAlphaEM.html</anchorfile>
      <anchor>b0eaad218bbd23c123917b851246a861</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1SimpleAlphaEM.html</anchorfile>
      <anchor>17d36b61af48443a5abab0617131845c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1SimpleAlphaEM.html</anchorfile>
      <anchor>c09a23b740e06a86bf2fc1c721bb94db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1SimpleAlphaEM.html</anchorfile>
      <anchor>4aec51efc8ef35b06c74065cc93890ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SimpleAlphaEM &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1SimpleAlphaEM.html</anchorfile>
      <anchor>1e20fd19163a27e3f0ab4ab29a34c2e2</anchor>
      <arglist>(const SimpleAlphaEM &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; SimpleAlphaEM &gt;</type>
      <name>initSimpleAlphaEM</name>
      <anchorfile>classThePEG_1_1SimpleAlphaEM.html</anchorfile>
      <anchor>f405d72109c486efd808652de4317fae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::StandardCKM</name>
    <filename>classThePEG_1_1StandardCKM.html</filename>
    <base>ThePEG::CKMBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual vector&lt; vector&lt; double &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>7c7d4ee24030866520e6e089d34f0cf5</anchor>
      <arglist>(unsigned int nFamilies) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>e84bf1d01a1fc57c401cff2a190787df</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>5967790d71329c9c95bce59fa40ac8de</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>d901c489fd8da0c00cb7fe1377d23353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>c3f3087b8d5c9e73c93745f6e7451418</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>b4b1cf268f4b4c8cef3c156cdc9fae61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>181306a64e2c5dda5e9e6bc5fa178a00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>bcf30c6ae2455409393417f2dac466b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>c173290837f1bc6b6ce85a289c0d3e71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>c2f46d086ccc43ad5ffb949e215630bb</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>730a87cc4c5223f3d5932b45d45d9661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>StandardCKM &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>3cfd140b3df8756835b840abbd28cc71</anchor>
      <arglist>(const StandardCKM &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theta12</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>7de27f7bbfdff9ab25b4b8321c0ef2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theta13</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>73b0c5d30264ba7b18a7154b6c355183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theta23</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>302b090655596e891b5b9b5b9d75ad8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>delta</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>beeab47a76ef36bd60e71b0264dab00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; StandardCKM &gt;</type>
      <name>initStandardCKM</name>
      <anchorfile>classThePEG_1_1StandardCKM.html</anchorfile>
      <anchor>f5bbadff6a919a377caa7961c704b7db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::StandardModelBase</name>
    <filename>classThePEG_1_1StandardModelBase.html</filename>
    <base>ThePEG::Interfaced</base>
    <member kind="function">
      <type>unsigned int</type>
      <name>families</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>5884a2ea45031cddb6a71a27f4d29948</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>alphaEM</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>06314aa3eef53f804521a56485c21224</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>alphaEM</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>757ff6fb473a18a28564cb9b41c03a12</anchor>
      <arglist>(Energy2 scale) const </arglist>
    </member>
    <member kind="function">
      <type>tAEMPtr</type>
      <name>alphaEMPtr</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>b8b42c9d00b8b1c47ba9da1f6d2811ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sin2ThetaW</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>02f8d580ccba1d627406d4c1211a0627</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>enu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>2fc4c57eaa66deb23e014dd6ddd66d59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ee</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>601abe2121324b390738a4ed17f3830e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>eb0e66ba9e374a7b44c27459ae132292</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ed</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>5feb6005d3e6aa07bf3c581e69dc413c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vnu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>0890c8de8d58ab6c94e53b728d3d3b67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ve</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>288e5e3d8d1f128d5e6d0887afd4cd10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>6c8a58756e73d4bd21336e375fff094c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vd</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>dfabb80e98fd6f2ce125d9baba7366e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>anu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>da941d9490848d29b78eac595038e29c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ae</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>0608bbe97d10ccd3a696e680351a166d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>au</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>c0f086e2744d176340d9efc33314de44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ad</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>f0f02570d9c7f6756e17745aed8bb2c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tCKMPtr</type>
      <name>CKM</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>245df27901294006eb393e0539ebcafb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>CKM</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>8f993d7bab3d57eb37859f8ce2478fc3</anchor>
      <arglist>(unsigned int uf, unsigned int df) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>CKM</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>0c2e5d854e08f445e3068bc948312d9e</anchor>
      <arglist>(const ParticleData &amp;uType, const ParticleData &amp;dType) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Nc</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>a863317cc346a1e2d6e90bf31319c7f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Nf</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>73a64b8cd4c3f3ee08ff3bef6805c8be</anchor>
      <arglist>(Energy2 scale) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>alphaS</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>cbc16f5b61dfb931fe71d7eebdbeebcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>alphaS</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>0ddc1504e31fad28e0dc0a14f07ac36b</anchor>
      <arglist>(Energy2 scale) const </arglist>
    </member>
    <member kind="function">
      <type>tASPtr</type>
      <name>alphaSPtr</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>c0f259c21db8addb528aa98f00a10c9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>LambdaQCD</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>6a38ed87bbd7ebda3412eb2523c984b4</anchor>
      <arglist>(unsigned int nflav) const </arglist>
    </member>
    <member kind="function">
      <type>Energy</type>
      <name>LambdaQCD</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>d33875437e0c367db60c0d5c3e7bb9f5</anchor>
      <arglist>(Energy2 scale) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentOutput</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>424338b123a4033ad0f31d9ddef14811</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistentInput</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>56b7e5623d21b53d0f1f1191634267ee</anchor>
      <arglist>(PersistentIStream &amp;is, int version)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>015f8f21dcda4be8a574588ac3d2472c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>b41e380edd0149a75bf6bd4dd4768085</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IBPtr</type>
      <name>fullclone</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>c0326b098ace3a2ba11ea6d705a08e66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doupdate</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>6bfe3c7a0a67d7c8e6da0df471885e69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doinit</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>f4a9eaf8b23f89508394e13a7ec1b09f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dofinish</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>576b2a01a521fb04c98077a0bd72e6f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>fa8696d4cbe15f8591708df94925acee</anchor>
      <arglist>(const TranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IVector</type>
      <name>getReferences</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>dfaa3192e7e8d88d9d92bb5657a57e94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Ptr&lt; AlphaEMBase &gt;::pointer</type>
      <name>AEMPtr</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>d54837f27affe0c342ac6f8dbbe91eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Ptr&lt; AlphaSBase &gt;::pointer</type>
      <name>ASPtr</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>8e8a2abdf288bb08b402f4bcf90eb683</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Ptr&lt; CKMBase &gt;::pointer</type>
      <name>CKMPtr</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>a347bd2c65fa6653c191c8f8ce81839f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Ptr&lt; AlphaEMBase &gt;::transient_pointer</type>
      <name>tAEMPtr</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>744ce756da71e4a20147d00176410464</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Ptr&lt; AlphaSBase &gt;::transient_pointer</type>
      <name>tASPtr</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>25b3b864f427f281e8d3bc82bf3f08ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Ptr&lt; CKMBase &gt;::transient_pointer</type>
      <name>tCKMPtr</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>b710d935ac797dd813e53b16a0c893a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>StandardModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>8b57909e83c678669ee1dcb6151b39c3</anchor>
      <arglist>(const StandardModelBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>theFamilies</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>87151caa1d2c220539581838f4960e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theAlphaEM</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>bd7194ead8cbaabbc6b537adf18bc36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AEMPtr</type>
      <name>theRunningAlphaEM</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>eb88a9d1863b328719a25e8ef8be80e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theSin2ThetaW</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>d22b11cb9cf059139c0c0f3491e21872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEnu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>467382bac6e401963eccad5c6159a5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEe</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>d5f37ab90f66ccb6021f02bc7ad60c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>fcb07ffc819513fa5fb482639b2ecd66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theEd</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>5f6a4c1e87651726dd3e00c677deacd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theVnu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>642e0dce08938635ce7a9c1dc0a30d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theVe</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>218b0a43832bbd9b1d0a6df79b3bbfa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theVu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>5c2c2ede9f231d4c549828c089aeca16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theVd</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>f2d3510812bbaa00add5304d6ba44ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theAnu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>2985e1116c9d15f10bcec4513a17b1ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theAe</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>a05812b5056283cf381f33e81e342bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theAu</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>6e688531ea9a308952a3dd14702b11b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theAd</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>beb5195f8c4e27f8185ee4caacf180b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>recalculateEW</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>05b19e273eb5a0014d6b0a5a2fa3ae9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CKMPtr</type>
      <name>theCKM</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>e312adbfc705f525ef7f0cad6cad0a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; vector&lt; double &gt; &gt;</type>
      <name>theCKM2Matrix</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>7ed913c0e51bb5e5fbe6d19c8ec4ac9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>theNc</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>3fb6d70fd018ffd22475990aaa0bf845</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theAlphaS</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>0c0bddd8eaa520a13b5a8e59f1698d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ASPtr</type>
      <name>theRunningAlphaS</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>da7ea49ef2d2debd2247cadf6f084753</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ClassDescription&lt; StandardModelBase &gt;</type>
      <name>initStandardModelBase</name>
      <anchorfile>classThePEG_1_1StandardModelBase.html</anchorfile>
      <anchor>fadd108fd0825a86d7e3d4891f00d7a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::CFileLineReader</name>
    <filename>classThePEG_1_1CFileLineReader.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>readline</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>7341b5befc870ea5ff2f538966d42bd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetline</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>d3814b5202dddc26a6f370af8cddb97a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getline</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>badad1bcfe27ec007b02918f5ae1a026</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>cfile</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>9f3b0dd3e1263a661881b1ba9a6830cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator void *</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>ae00d20ae010548830f4c2951066003f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>b8cd2441bf4835c2a3983237eafa386e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>skip</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>7b95967fb07ba690e73d636124079b3e</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>find</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>c5fb6eff44b88df2827c1688fbae4104</anchor>
      <arglist>(string str) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>acacf73cea5182842f584b430743b52b</anchor>
      <arglist>(FILE *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>ec02eec922ec07d3e562c6d114602610</anchor>
      <arglist>(string filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>35885c16f23602d0290d85940474f6e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getc</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>1155a1fc12841af8f32852c335e113ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CFileLineReader &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>0c7f2f27fa16faf3a3fe2a4aea5a9904</anchor>
      <arglist>(long &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>CFileLineReader &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>f2c92a693ad08d608ec1f4c2340aeef0</anchor>
      <arglist>(int &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>CFileLineReader &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>cc26b4d9bc78dc8b4262ce7698bf5a02</anchor>
      <arglist>(unsigned long &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>CFileLineReader &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>00688b6c7175f65dec7b26c68426710b</anchor>
      <arglist>(unsigned int &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>CFileLineReader &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>40a418b0848f22bcb7e68bbab3695e5b</anchor>
      <arglist>(double &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>CFileLineReader &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>6ea38eff8ada1cd1f5fb42125f9af950</anchor>
      <arglist>(float &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>CFileLineReader &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>fd1b0a8d6bd4d1b6b0f01dc2a6a725d1</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="enumeration">
      <name>StreamType</name>
      <anchor>fe35e096f6bcd759b2a9bb4314932fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>unknown</name>
      <anchor>fe35e096f6bcd759b2a9bb4314932fc469985fc98e09629a38933d15c621ff32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>plainfile</name>
      <anchor>fe35e096f6bcd759b2a9bb4314932fc48507f460fcd2f6f3697c68dc253ebfe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pipe</name>
      <anchor>fe35e096f6bcd759b2a9bb4314932fc47c323bf7d953fbfa7bdd9a52854250d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CFileLineReader</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>6e437196a62d418676e9f65a2bc1aa18</anchor>
      <arglist>(const CFileLineReader &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CFileLineReader &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>fb753087bb1a2c347e21d4626bf3cf2d</anchor>
      <arglist>(const CFileLineReader &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FILE *</type>
      <name>file</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>6d4d54a697375e6af8e6794d40d4428d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>bufflen</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>3109fea92e08ed31a09193b0dd46c6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>buff</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>3a415be71c06df9b9d695834d7031dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>pos</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>9581ba1ab7bd3bffae75daa1597ca3e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bad</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>ab598b9b65131db80eaea33c4b477892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StreamType</type>
      <name>type</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>ad144a58752e2615e457c17ae284aa2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const int</type>
      <name>defsize</name>
      <anchorfile>classThePEG_1_1CFileLineReader.html</anchorfile>
      <anchor>8b70eb794cd364a66153b54577388b50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ClassDescriptionBase</name>
    <filename>classThePEG_1_1ClassDescriptionBase.html</filename>
    <base>ThePEG::Named</base>
    <member kind="typedef">
      <type>vector&lt; const ClassDescriptionBase * &gt;</type>
      <name>DescriptionVector</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>8f0efa092685c98ccfacc0f017a6499f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassDescriptionBase</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>f93aaeb13b062236efb8d311a353c901</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const type_info &amp;</type>
      <name>info</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>5babfbb10b6a5b3af2216209349aa9ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>aa2006ec36a1f7dfeed052091b8127a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>library</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>3a55fd1a6bb0edb1e0063c42cce42710</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>dbae5808dc7ced36138723e7a4096b5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const DescriptionVector &amp;</type>
      <name>descriptions</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>fcd8e9a69c6c0666515f3c5a2a01023a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>6c239e1b43d7ba8c8c94162d8108aab7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual BPtr</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>9cda483a674640dbc8143aa1e5ec4080</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>cb13259d005478fd33b877fa3c41e713</anchor>
      <arglist>(tcBPtr b, PersistentOStream &amp;os) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>c59fe45295bef514c892e00040423957</anchor>
      <arglist>(tBPtr b, PersistentIStream &amp;is, int oldVersion) const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isA</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>7591b55a3450d57f3a2ceed02f53d2fa</anchor>
      <arglist>(const ClassDescriptionBase &amp;base) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>abstract</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>32e1ae02080b7cc28076f72410e301f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ClassDescriptionBase</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>02e559fe275af6a2f0633a41e87962f4</anchor>
      <arglist>(string newName, const type_info &amp;newInfo, int newVersion, string newLibrary, bool abst)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>baseClasses</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>aad87a4b4264f2da0ca369a5b292d264</anchor>
      <arglist>(DescriptionVector::iterator first, DescriptionVector::iterator last)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>theVersion</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>8c0ead5ce2977eda8c1ea79adfda36e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theLibrary</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>2608977d655e0b076d1bc29b9caa161a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const type_info &amp;</type>
      <name>theInfo</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>22e2c2b694f7f602a4ea8f3b8e4ba195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DescriptionVector</type>
      <name>theBaseClasses</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>7873551ea13049760c4aa437b0ebb5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isAbstract</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>a7fdeda35b36873beed6dc70b98c3ff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>done</name>
      <anchorfile>classThePEG_1_1ClassDescriptionBase.html</anchorfile>
      <anchor>311f24c529c0797ff9c24d859f717940</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ClassDescriptionTBase</name>
    <filename>classThePEG_1_1ClassDescriptionTBase.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::ClassDescriptionBase</base>
    <member kind="typedef">
      <type>ClassTraits&lt; T &gt;</type>
      <name>Traits</name>
      <anchorfile>classThePEG_1_1ClassDescriptionTBase.html</anchorfile>
      <anchor>51258f4d3a2536ddc7eace78105a231a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassDescriptionTBase</name>
      <anchorfile>classThePEG_1_1ClassDescriptionTBase.html</anchorfile>
      <anchor>50c6f100c0d4d5c53f06ce0466ee02f9</anchor>
      <arglist>(bool abst)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassDescriptionTBase</name>
      <anchorfile>classThePEG_1_1ClassDescriptionTBase.html</anchorfile>
      <anchor>36699436db43b1ca58f6f0ee363c3036</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classThePEG_1_1ClassDescriptionTBase.html</anchorfile>
      <anchor>28fbf54fc622922fae91a09841c91984</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::AbstractClassDescription</name>
    <filename>classThePEG_1_1AbstractClassDescription.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::ClassDescriptionTBase</base>
    <member kind="typedef">
      <type>ClassTraits&lt; T &gt;</type>
      <name>Traits</name>
      <anchorfile>classThePEG_1_1AbstractClassDescription.html</anchorfile>
      <anchor>50f1b0a88ea0667f871e90a67e68007e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractClassDescription</name>
      <anchorfile>classThePEG_1_1AbstractClassDescription.html</anchorfile>
      <anchor>f72b8d13970a84f40801bb10942e672f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BPtr</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1AbstractClassDescription.html</anchorfile>
      <anchor>3b79dd808e4a492a9cc8dcb9e554c5b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1AbstractClassDescription.html</anchorfile>
      <anchor>62b561d3ad3d7863640bd1752d2515f2</anchor>
      <arglist>(tcBPtr b, PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1AbstractClassDescription.html</anchorfile>
      <anchor>5651d7690f44e717cb376712dff9a1fe</anchor>
      <arglist>(tBPtr b, PersistentIStream &amp;is, int oldVersion) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ClassDescription</name>
    <filename>classThePEG_1_1ClassDescription.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::ClassDescriptionTBase</base>
    <member kind="typedef">
      <type>ClassTraits&lt; T &gt;</type>
      <name>Traits</name>
      <anchorfile>classThePEG_1_1ClassDescription.html</anchorfile>
      <anchor>def0d9c85ab88bfdd499adfc4fc0730d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassDescription</name>
      <anchorfile>classThePEG_1_1ClassDescription.html</anchorfile>
      <anchor>7268cb6ef0430ec422de304a458dcbe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BPtr</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1ClassDescription.html</anchorfile>
      <anchor>56cb4212e1ca89440459824353c7cbdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1ClassDescription.html</anchorfile>
      <anchor>5af07712161852bfa5d3882564a57505</anchor>
      <arglist>(tcBPtr b, PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1ClassDescription.html</anchorfile>
      <anchor>d6e1ca339d75c1c87bb3267a9ecf9650</anchor>
      <arglist>(tBPtr b, PersistentIStream &amp;is, int oldVersion) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::NoPIOClassDescription</name>
    <filename>classThePEG_1_1NoPIOClassDescription.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::ClassDescriptionTBase</base>
    <member kind="typedef">
      <type>ClassTraits&lt; T &gt;</type>
      <name>Traits</name>
      <anchorfile>classThePEG_1_1NoPIOClassDescription.html</anchorfile>
      <anchor>a8805b81229084d7163c82d9e6e1bf55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NoPIOClassDescription</name>
      <anchorfile>classThePEG_1_1NoPIOClassDescription.html</anchorfile>
      <anchor>acc45ca1f53b91f32df88dbeca74e7fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BPtr</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1NoPIOClassDescription.html</anchorfile>
      <anchor>cc037e89ba7de25af337f8f95573a619</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1NoPIOClassDescription.html</anchorfile>
      <anchor>45159d11c83dedaa96ea22a0a583cc57</anchor>
      <arglist>(tcBPtr, PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1NoPIOClassDescription.html</anchorfile>
      <anchor>533e5c732781366dbfee0a48147853c8</anchor>
      <arglist>(tBPtr, PersistentIStream &amp;, int) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::AbstractNoPIOClassDescription</name>
    <filename>classThePEG_1_1AbstractNoPIOClassDescription.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::ClassDescriptionTBase</base>
    <member kind="typedef">
      <type>ClassTraits&lt; T &gt;</type>
      <name>Traits</name>
      <anchorfile>classThePEG_1_1AbstractNoPIOClassDescription.html</anchorfile>
      <anchor>77472a1cfc84ce4422bb0df4cec772b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractNoPIOClassDescription</name>
      <anchorfile>classThePEG_1_1AbstractNoPIOClassDescription.html</anchorfile>
      <anchor>9fe2c572d20118e8ba47a48435add88e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BPtr</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1AbstractNoPIOClassDescription.html</anchorfile>
      <anchor>49273a28a4bfe7be49d2ba4320f22cbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1AbstractNoPIOClassDescription.html</anchorfile>
      <anchor>fda7ad4884df36777ea26af30d66fcc4</anchor>
      <arglist>(tcBPtr, PersistentOStream &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1AbstractNoPIOClassDescription.html</anchorfile>
      <anchor>d2a2a8983ce54579230a915bc586a2d8</anchor>
      <arglist>(tBPtr, PersistentIStream &amp;, int) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::ClassDescriptionHelper</name>
    <filename>structThePEG_1_1ClassDescriptionHelper.html</filename>
    <templarg>T</templarg>
    <templarg>IBase</templarg>
    <templarg>B</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addBases</name>
      <anchorfile>structThePEG_1_1ClassDescriptionHelper.html</anchorfile>
      <anchor>e7d4e965a31d609c7f03ad7c0b515793</anchor>
      <arglist>(vector&lt; const ClassDescriptionBase * &gt; &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::ClassTraitsType</name>
    <filename>structThePEG_1_1ClassTraitsType.html</filename>
    <base>ThePEG::TraitsType</base>
  </compound>
  <compound kind="struct">
    <name>ThePEG::ClassTraitsBase</name>
    <filename>structThePEG_1_1ClassTraitsBase.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::ClassTraitsType</base>
    <member kind="typedef">
      <type>Ptr&lt; T &gt;::pointer</type>
      <name>TPtr</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>329ace45b8ec8bd5c0a4b722febf4c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; T &gt;::const_pointer</type>
      <name>cTPtr</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>e3fd05d8417296d8e22b6569c60781a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; T &gt;::transient_pointer</type>
      <name>tTPtr</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>d223b749b7ff289b03eb3d4b34dda893</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; T &gt;::transient_const_pointer</type>
      <name>tcTPtr</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>0eeb51e73ee40396d16fe2b73b277410</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::pointer</type>
      <name>BPtr</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>8187475a7afe002e46283d8d6d4555a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::const_pointer</type>
      <name>cBPtr</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>0259e08a42ec362d3833cac501f9f9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::transient_pointer</type>
      <name>tBPtr</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>bdc31a12461b392ebf58bab57eff82ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; Base &gt;::transient_const_pointer</type>
      <name>tcBPtr</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>496c3a2f3678b4e594f93e45e16f448a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TPtr</type>
      <name>create</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>0aa91d1e95b7391205c6648c82ba735f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>className</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>06b2d771a917a7ccfa7013d4b7bfd02f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>version</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>c14049777b1cba1b31e816ba1a7019b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>library</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>16932015a4921318eb2dc8116a095fa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>output</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>fd186a2620cd96d0976d77ba9ade59ba</anchor>
      <arglist>(tcTPtr t, PersistentOStream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>input</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>2202d1ef41460c16e04a89210ffd65d4</anchor>
      <arglist>(tTPtr t, PersistentIStream &amp;is, int oldVersion)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TPtr</type>
      <name>cast</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>020c08e4d4b10b5dc70c660f93413695</anchor>
      <arglist>(BPtr b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static cTPtr</type>
      <name>cast</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>ed51ebb9474d1e57db46af6025493ce5</anchor>
      <arglist>(cBPtr b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tTPtr</type>
      <name>cast</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>c25ae6e090379a196b61c36b9a7c36a9</anchor>
      <arglist>(tBPtr b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tcTPtr</type>
      <name>cast</name>
      <anchorfile>structThePEG_1_1ClassTraitsBase.html</anchorfile>
      <anchor>a388bb87167172459a4db664052ed422</anchor>
      <arglist>(tcBPtr b)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::ClassTraits</name>
    <filename>structThePEG_1_1ClassTraits.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::ClassTraitsBase</base>
  </compound>
  <compound kind="struct">
    <name>ThePEG::BaseClassTrait</name>
    <filename>structThePEG_1_1BaseClassTrait.html</filename>
    <templarg>Derived</templarg>
    <templarg>BaseN</templarg>
    <base>ThePEG::ClassTraitsType</base>
    <member kind="typedef">
      <type>int</type>
      <name>NthBase</name>
      <anchorfile>structThePEG_1_1BaseClassTrait.html</anchorfile>
      <anchor>193555fd5911e27f9d0407084b7eaf9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::CompSelector</name>
    <filename>classThePEG_1_1CompSelector.html</filename>
    <templarg>T</templarg>
    <templarg>WeightType</templarg>
    <member kind="function">
      <type></type>
      <name>CompSelector</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>e37476034ee6a214041634d699f5b89b</anchor>
      <arglist>(double newMargin=1.1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompSelector</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>9caa3e621431e7107d7e3a92e5343b13</anchor>
      <arglist>(const CompSelector &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompSelector</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>687f790e5407e00ee3df5dfaf4f8036d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompSelector &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>b38cdd72dc7e6a290c717f254a228e8d</anchor>
      <arglist>(const CompSelector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>insert</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>754ef927ef7260cbb3acc2185baa8c3c</anchor>
      <arglist>(WeightType, const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>defbe0913cd2502659d53982b82bc18d</anchor>
      <arglist>(RNDGEN &amp;rnd)</arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>07640b36ce03bd9f757861ccd97d6ec3</anchor>
      <arglist>(double &amp;weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>0d49978989d0ba56338fb0f1d23ed017</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>cc16e0c45ef4fe42a41852e143034318</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>margin</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>0421a7f8ad4246c3692c2c5567a9717b</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compensating</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>9100e95791836fc4e60de82a2eb5833f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>compleft</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>9c2e59df488d82f4c3b53fbff728b1cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>sum</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>4539e918b61e46c2139257428b85cb70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>margin</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>d021a74ce9d8198c16b42349569cbda5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>10abae075351654b5d1b33fd89bbf47d</anchor>
      <arglist>(OStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>c2a1b663d6556a0f0f52ded5cda54c3a</anchor>
      <arglist>(IStream &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Selector&lt; T, WeightType &gt;</type>
      <name>selector</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>3c42279a77ce18b358b25633a33086b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>N</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>bf1372841a3fac63ef5e659630d0710c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>last</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>875f8d3a19690e5008de8340c8cc9b59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theMargin</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>fe4c0d63063060d1ec34d91f62879636</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; Level &gt;</type>
      <name>levels</name>
      <anchorfile>classThePEG_1_1CompSelector.html</anchorfile>
      <anchor>afeed80c47d3af7d3419e8a5d4cf8562</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::CompSelector::Level</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::CompSelector::Level</name>
    <filename>structThePEG_1_1CompSelector_1_1Level.html</filename>
    <member kind="variable">
      <type>long</type>
      <name>lastN</name>
      <anchorfile>structThePEG_1_1CompSelector_1_1Level.html</anchorfile>
      <anchor>0d2fad6dc1ddb7380626c5062499514b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>weight</name>
      <anchorfile>structThePEG_1_1CompSelector_1_1Level.html</anchorfile>
      <anchor>e4d83fb9688ec6d04f629fa8afb2cfd8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Debug</name>
    <filename>classThePEG_1_1Debug.html</filename>
    <member kind="enumeration">
      <name>Levels</name>
      <anchor>2d623ed347d943a2a07f8f3a3bedef8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noDebug</name>
      <anchor>2d623ed347d943a2a07f8f3a3bedef8cebf08292b6db1f86cfc9787c0164a749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>printSomeEvents</name>
      <anchor>2d623ed347d943a2a07f8f3a3bedef8c0e8ecc3022f0ed168f9512999f793135</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>printEveryEvent</name>
      <anchor>2d623ed347d943a2a07f8f3a3bedef8c0dfa0ad2e7e7b8e710a03da97a2f295f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>full</name>
      <anchor>2d623ed347d943a2a07f8f3a3bedef8c96bb08572535f87ac095eb79d8abdf80</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>debugItem</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>57bf810c0d492f7fa5db2815ca075ab8</anchor>
      <arglist>(int item, bool on)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDebug</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>8860601255baf86d9eec7802ee43ef16</anchor>
      <arglist>(int ilev)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>debugItem</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>42f6342361f2968be2672f2a025eaea7</anchor>
      <arglist>(int item)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unmaskFpuErrors</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>58406b1c282db656622877be225b1283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unmaskFpuOverflow</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>2a7f3ef1c5fdf248f6c17cd67c2c8925</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unmaskFpuUnderflow</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>c8bf06aad76cb616d8b8dc81d3956935</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unmaskFpuDivZero</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>6b09609344e66dbd70a19d166f593191</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unmaskFpuDenorm</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>1a30c690f557a26c9f3151ea55818065</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unmaskFpuInvalid</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>b77680d23f27c9fbb78e35baa293b51e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>maskFpuErrors</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>350a6371366e0c1c1bb05bed02016c67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>maskFpuOverflow</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>88bb48d4b7cab280e5faddab52a38e92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>maskFpuUnderflow</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>2612d713dbd20c793547d4d375d1e5c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>maskFpuDivZero</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>72192ed033b3dd63c1f82344a525d46e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>maskFpuDenorm</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>b6294055f0ffe06e45ab9c68ca3327c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>maskFpuInvalid</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>32684b5dfe1d584a103a3a6cb6bf5889</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>level</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>f88d9d17d9c5b956d8943a4ac552b48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::vector&lt; bool &gt;</type>
      <name>debugItems</name>
      <anchorfile>classThePEG_1_1Debug.html</anchorfile>
      <anchor>aeb18601bdcda58981f3288efea9af8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::DescriptionList</name>
    <filename>classThePEG_1_1DescriptionList.html</filename>
    <member kind="typedef">
      <type>map&lt; const type_info *, ClassDescriptionBase * &gt;</type>
      <name>DescriptionMap</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>8abff3f404ddf954fc22c743ba8b0413</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; string, ClassDescriptionBase * &gt;</type>
      <name>StringMap</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>41cb4385eaf731abd941eeae383b1709</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Register</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>c341f9d09416fdec2f5ae5549a2682f8</anchor>
      <arglist>(ClassDescriptionBase &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ClassDescriptionBase *</type>
      <name>find</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>a1f2b95fc8ad365615993d4a843e62e8</anchor>
      <arglist>(const type_info &amp;ti)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ClassDescriptionBase *</type>
      <name>find</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>936f236ce087b4076e7672c785f11294</anchor>
      <arglist>(const string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const DescriptionMap &amp;</type>
      <name>all</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>fd2178253da68971e70de53f497e70a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printHierarchies</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>bdee3438c75dc77dc020f6ba82f19a35</anchor>
      <arglist>(ostream &amp;os)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>hookup</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>1e32f7078aba8a9968428f0b30232e0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>insert</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>0d6fd057901b5d7378b1e6f80b06cceb</anchor>
      <arglist>(ClassDescriptionBase &amp;pb)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static DescriptionMap &amp;</type>
      <name>descriptionMap</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>bb8e8868f49f5a69fc380b6033ce0d40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static StringMap &amp;</type>
      <name>stringMap</name>
      <anchorfile>classThePEG_1_1DescriptionList.html</anchorfile>
      <anchor>96c8c0c323ea9b1060ff4a85211591e3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Direction</name>
    <filename>classThePEG_1_1Direction.html</filename>
    <templarg>I</templarg>
    <member kind="enumeration">
      <name>Dir</name>
      <anchor>6fa0be3935358097e1a3de15d0f9df18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Neg</name>
      <anchor>6fa0be3935358097e1a3de15d0f9df18393f6ae4edfa8fa50f459a2449c7ece3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Negative</name>
      <anchor>6fa0be3935358097e1a3de15d0f9df180968c4ffe95471b7ff2575c1bcd1bea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Undefined</name>
      <anchor>6fa0be3935358097e1a3de15d0f9df18076cfd5f2d1c7ccbc1f17cadafef925e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pos</name>
      <anchor>6fa0be3935358097e1a3de15d0f9df1894a2da307c386b07d7be9eaa2d2db67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Positive</name>
      <anchor>6fa0be3935358097e1a3de15d0f9df18e72439bb4702dab6129a1ceafae88f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Direction</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>5d9133ce5020e32a98ce393b74df8e65</anchor>
      <arglist>(Dir newDirection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Direction</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>c75826ca54589a2beac4db3c0a2ca0cb</anchor>
      <arglist>(double rnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Direction</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>05d881abfc573a52f521a23731499653</anchor>
      <arglist>(bool p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Direction</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>9fb65be97ec6c0a1b8347d3110504082</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>0ad0b76b7115cab00f49aa393307cd5f</anchor>
      <arglist>(Dir newDirection)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reverse</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>a2ad608f98fc2215d815749dde3a9aa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>pos</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>5a482d670bae44d32ed37ef359c19bc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>neg</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>0479b04b210e51acb63154b0d908ae7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Dir</type>
      <name>dir</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>2310be2562e44f1b88be23101f8f37b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Direction</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>068050ac54cb872db0d56b0b26b9897d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Direction</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>14cacb3d1eb510aca06d7637b4e49692</anchor>
      <arglist>(const Direction &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Direction &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>4f79919621c0b57838e9456d44a33528</anchor>
      <arglist>(const Direction &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Dir</type>
      <name>theDirection</name>
      <anchorfile>classThePEG_1_1Direction.html</anchorfile>
      <anchor>f4f959e32bc2e19058a8891e1a5eda23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::DIterator</name>
    <filename>classThePEG_1_1DIterator.html</filename>
    <templarg>BaseIterator</templarg>
    <member kind="typedef">
      <type>std::iterator_traits&lt; BaseIterator &gt;</type>
      <name>Traits</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>16da1b3d1b125167f449b9bf4cc68ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Traits::iterator_category</type>
      <name>iterator_category</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>226cc3480514ac76c5e10e61cc473f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Traits::difference_type</type>
      <name>difference_type</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>ac111c94c76b757fd4e0f414d2fcc828</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Traits::value_type</type>
      <name>PtrType</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>5fbdce90d3cfbd4f92de8d93eba4b7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::iterator_traits&lt; PtrType &gt;</type>
      <name>PtrTraits</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>f55963b2a2919bf599c7661f365f40ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PtrTraits::value_type</type>
      <name>value_type</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>76515341607543b14877e502aa2299d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PtrTraits::pointer</type>
      <name>pointer</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>7c98d13544ad8ea56a9baa50c2095b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PtrTraits::reference</type>
      <name>reference</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>ba238ac8e12ae437fa172a2744b88b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DIterator</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>d2d352450d2ab0284d1a6aa59ab108ad</anchor>
      <arglist>(const BaseIterator &amp;in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DIterator</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>d79dc78aaca420860f8bc3423805c1de</anchor>
      <arglist>(const DIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>ec367196009d9137cdf50511ba2cbd12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>438622cf5aee0d21c7aa321fcd19bf6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>0f4a5b961a42680d2771ffae2bf577e6</anchor>
      <arglist>(const DIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>DIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>c13d0bd3f57d4b50b93fba4066b50bff</anchor>
      <arglist>(const BaseIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>6b152c248bc8c4568f55db071c5d532f</anchor>
      <arglist>(difference_type n)</arglist>
    </member>
    <member kind="function">
      <type>difference_type</type>
      <name>operator-</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>3494f28ccf73f3db34aad2d7659814cc</anchor>
      <arglist>(const DIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>DIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>0a45894d7c8191e93e375bec45fe35f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DIterator</type>
      <name>operator++</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>17bb497ce259f89df8e8bd1703dfced6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>DIterator &amp;</type>
      <name>operator--</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>7bcadb8ea9782377b87fe1a98c1d4c95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DIterator</type>
      <name>operator--</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>08442a93d8e3f4cd2da2d9db42258c19</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>DIterator &amp;</type>
      <name>operator+=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>e7e33f44e997b34a7c928e481faab19f</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>DIterator</type>
      <name>operator+</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>b46bbfedcda7c871191202e67bede726</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>DIterator &amp;</type>
      <name>operator-=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>175e1b96d5bb6ce02163a3334ad27a42</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>DIterator</type>
      <name>operator-</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>f7354ca13df0df25c23ceb37680888ff</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>61b32e866201b5ce06f732e3863ea0ef</anchor>
      <arglist>(const DIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>24ac9ee92aca22eaef3aa0f9b53e185f</anchor>
      <arglist>(const DIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>e1ad0284e68b20ee9a594bdad348cbad</anchor>
      <arglist>(const DIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>a59a2e2cd1da6dc9626f4e9d749a1055</anchor>
      <arglist>(const DIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>f49313fbb535c927c358cad75d7d008e</anchor>
      <arglist>(const DIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>213b43d74939417238a3b60d578c3059</anchor>
      <arglist>(const DIterator &amp;pi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>565c808c8285b023060fedf2097c8258</anchor>
      <arglist>(const BaseIterator &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>42bb624e81ba186df0bbcdf1fc77a1d0</anchor>
      <arglist>(const BaseIterator &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>6dd3e4947b7706c9b876366f3e3fc132</anchor>
      <arglist>(const BaseIterator &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>c115e993fbf82c8f4afa7c27b298ecc4</anchor>
      <arglist>(const BaseIterator &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>b8505f88ebe1b3ced67eae2c44ef9d40</anchor>
      <arglist>(const BaseIterator &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>9202aa1a37b61427bfa280dab2584a60</anchor>
      <arglist>(const BaseIterator &amp;bi)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>DIterator</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>eaccccb8857ee7f042fe47a0b789f81a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BaseIterator</type>
      <name>i</name>
      <anchorfile>classThePEG_1_1DIterator.html</anchorfile>
      <anchor>cd741084d1ed70997cb5262a8baa5de7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::DynamicLoader</name>
    <filename>classThePEG_1_1DynamicLoader.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>loadcmd</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>a6a0dbd57b97416c6c074421720f5a4a</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>load</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>3ff1e906bafbf85df6fc4f47c6cdbe9a</anchor>
      <arglist>(string file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>appendPath</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>370910f34d0453cbc79b2ac10f7fa9b4</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>prependPath</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>b91898cde6289c0f09b02b8f234bdbc6</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>dlname</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>c53e88e2e130c9f6d0f6b9d74e56b7a6</anchor>
      <arglist>(string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>dlnameversion</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>605ff76ed2b110b408ce78b8add50ec0</anchor>
      <arglist>(string libs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const vector&lt; string &gt; &amp;</type>
      <name>allPaths</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>f7f3bd02b14fed7cdf9eed432d2febbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const vector&lt; string &gt; &amp;</type>
      <name>appendedPaths</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>b5ed912239b465a060fd4431f3072da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const vector&lt; string &gt; &amp;</type>
      <name>prependedPaths</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>1836290f593d47f5a4fc5d3ad9c2c206</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static string</type>
      <name>lastErrorMessage</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>49dab6ddf71f1794e586c0f5efbf89a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static vector&lt; string &gt;</type>
      <name>defaultPaths</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>c6a0adb7ecb6f3a32b447a7f1fc975a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static vector&lt; string &gt;</type>
      <name>paths</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>d8812a1a3922f813df6cfe060f9ab74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static vector&lt; string &gt;</type>
      <name>prepaths</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>1f375b65ca8b80093c584102f6b0940b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static vector&lt; string &gt;</type>
      <name>apppaths</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>1c161cd36a4d48d898e48980787199e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static map&lt; string, string &gt;</type>
      <name>versionMap</name>
      <anchorfile>classThePEG_1_1DynamicLoader.html</anchorfile>
      <anchor>7b076e582e29c9113ab69213fbe5a9d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::OEnum</name>
    <filename>structThePEG_1_1OEnum.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>OEnum</name>
      <anchorfile>structThePEG_1_1OEnum.html</anchorfile>
      <anchor>c4ed36c16167ddc20736b3a24ceba5a3</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OEnum</name>
      <anchorfile>structThePEG_1_1OEnum.html</anchorfile>
      <anchor>338055511e15ae887f6492c92bb0dbcc</anchor>
      <arglist>(const OEnum &amp;oe)</arglist>
    </member>
    <member kind="variable">
      <type>const T &amp;</type>
      <name>theT</name>
      <anchorfile>structThePEG_1_1OEnum.html</anchorfile>
      <anchor>9388442c507af3f47a69008832609e3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::IEnum</name>
    <filename>structThePEG_1_1IEnum.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>IEnum</name>
      <anchorfile>structThePEG_1_1IEnum.html</anchorfile>
      <anchor>8ed40703bc92accc6c4bf639a023cde4</anchor>
      <arglist>(T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IEnum</name>
      <anchorfile>structThePEG_1_1IEnum.html</anchorfile>
      <anchor>c3677c6d1bf40b37e088d55b247cc0cf</anchor>
      <arglist>(const IEnum &amp;ie)</arglist>
    </member>
    <member kind="variable">
      <type>T &amp;</type>
      <name>theT</name>
      <anchorfile>structThePEG_1_1IEnum.html</anchorfile>
      <anchor>a10984edbfa572f804969eaa00389482</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Exception</name>
    <filename>classThePEG_1_1Exception.html</filename>
    <member kind="enumeration">
      <name>Severity</name>
      <anchor>a279ad2b016e2ebf960ae6f974df7424</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>unknown</name>
      <anchor>a279ad2b016e2ebf960ae6f974df7424832b957ac15826c05ae185d281023db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>info</name>
      <anchor>a279ad2b016e2ebf960ae6f974df7424725fdcdd0b3c5694edbdcb10c6cc3f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>warning</name>
      <anchor>a279ad2b016e2ebf960ae6f974df7424362c76dad3fd3313d89b53e9f71adcc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eventerror</name>
      <anchor>a279ad2b016e2ebf960ae6f974df742446cbc654927a56c02c508979b15fa42a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>runerror</name>
      <anchor>a279ad2b016e2ebf960ae6f974df7424a7b1ea39e15f760d2191b399bdae3aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maybeabort</name>
      <anchor>a279ad2b016e2ebf960ae6f974df742455f8975dd1ae403799bd34fad3af344a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>abortnow</name>
      <anchor>a279ad2b016e2ebf960ae6f974df742495b7e630ba20f279407d73dbf3a6637a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>eb57a1ec263095652c073ffa4c2a8d0b</anchor>
      <arglist>(const string &amp;str, Severity sev)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>902bef22685485d331ab8337389e977a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>3c3499c1657d7e0cd836a6bc8b1312d2</anchor>
      <arglist>(const Exception &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Exception</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>ca095e3c75bed990774dccb6bcb9fa0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Exception &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>8dc582347aca3855aed8b55f28c85349</anchor>
      <arglist>(const Exception &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>2a2d160e5a782ccc032534b774a2d22a</anchor>
      <arglist>(const Exception &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>fae969ccf945dcf3b2e09b195a1e7a66</anchor>
      <arglist>(const Exception &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>c913e2808f5f028fce58f8ee7650a452</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>message</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>6d8ff4e5419a7ed8a74ea3d7471e63c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeMessage</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>feb49f2e278a169dc1736e7bd6498d01</anchor>
      <arglist>(ostream &amp;os=*errstream) const </arglist>
    </member>
    <member kind="function">
      <type>Severity</type>
      <name>severity</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>4f1adbbe99209b23c70e2ca4d4aba076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>9aa1bcb7e0dd5502fb91969877112fab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Exception &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>a955187eaf7e21ad50c95c0911be947f</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Exception &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>626f4fffeac65c6489967abeca06b53d</anchor>
      <arglist>(Severity sev)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>severity</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>42f9763893e507d7034e8f4e676dcd7c</anchor>
      <arglist>(Severity)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ostringstream</type>
      <name>theMessage</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>34b721939be1b502f6879547b6278e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>handled</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>f9175234f75c6eddd11d8ba01011f446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Severity</type>
      <name>theSeverity</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>2a7f165dde9c641960652c21f431e439</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ostream *</type>
      <name>errstream</name>
      <anchorfile>classThePEG_1_1Exception.html</anchorfile>
      <anchor>615f1b409e6cc3fc11be23c7c420d3f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::FixedSizeAllocator</name>
    <filename>classThePEG_1_1FixedSizeAllocator.html</filename>
    <templarg>Size</templarg>
    <templarg>ChunkSize</templarg>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>allocate</name>
      <anchorfile>classThePEG_1_1FixedSizeAllocator.html</anchorfile>
      <anchor>953d65b0473c681e7bd491084a850fc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deallocate</name>
      <anchorfile>classThePEG_1_1FixedSizeAllocator.html</anchorfile>
      <anchor>1a371127824c63aca1264c8d2cb10808</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::vector&lt; void * &gt;</type>
      <name>FreeStack</name>
      <anchorfile>classThePEG_1_1FixedSizeAllocator.html</anchorfile>
      <anchor>6cf04aff4d39ba7dd839a546ca4dbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>grow</name>
      <anchorfile>classThePEG_1_1FixedSizeAllocator.html</anchorfile>
      <anchor>37f0abbe82357ab72256d6fe9ce461f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void *</type>
      <name>newallocate</name>
      <anchorfile>classThePEG_1_1FixedSizeAllocator.html</anchorfile>
      <anchor>298b85a40980703ac622579f66956b34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ChunkStack</type>
      <name>chunkstack</name>
      <anchorfile>classThePEG_1_1FixedSizeAllocator.html</anchorfile>
      <anchor>5cf9616d4f2d368b4981354030ae6763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static FreeStack</type>
      <name>freestack</name>
      <anchorfile>classThePEG_1_1FixedSizeAllocator.html</anchorfile>
      <anchor>0f5b9172ca636f138c72adaefd848d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static size_t</type>
      <name>last</name>
      <anchorfile>classThePEG_1_1FixedSizeAllocator.html</anchorfile>
      <anchor>f19a705a605c61aca0b6b2e2b1b73cc7</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::FixedSizeAllocator::ChunkStack</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::FixedSizeAllocator::ChunkStack</name>
    <filename>structThePEG_1_1FixedSizeAllocator_1_1ChunkStack.html</filename>
    <member kind="typedef">
      <type>vector&lt; char * &gt;</type>
      <name>Stack</name>
      <anchorfile>structThePEG_1_1FixedSizeAllocator_1_1ChunkStack.html</anchorfile>
      <anchor>8a1d83e9f4385af2901c910305f3b03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChunkStack</name>
      <anchorfile>structThePEG_1_1FixedSizeAllocator_1_1ChunkStack.html</anchorfile>
      <anchor>22e3b0dca1940b4c12ed94a6049aa2e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Stack</type>
      <name>s</name>
      <anchorfile>structThePEG_1_1FixedSizeAllocator_1_1ChunkStack.html</anchorfile>
      <anchor>1c0b41df0cd93ed13f54052c606fb2a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::SizeOf8</name>
    <filename>structThePEG_1_1SizeOf8.html</filename>
    <templarg>T</templarg>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>size</name>
      <anchorfile>structThePEG_1_1SizeOf8.html</anchorfile>
      <anchor>fea0a5aa0adc7437c78785874b998e15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::FixedAllocator</name>
    <filename>structThePEG_1_1FixedAllocator.html</filename>
    <templarg>T</templarg>
    <templarg>ChunkSize</templarg>
    <base>ThePEG::FixedSizeAllocator</base>
    <member kind="typedef">
      <type>FixedSizeAllocator&lt; SizeOf8&lt; T &gt;::size, ChunkSize &gt;</type>
      <name>BaseType</name>
      <anchorfile>structThePEG_1_1FixedAllocator.html</anchorfile>
      <anchor>d84e8f01590f97b755931b01738b3fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>allocate</name>
      <anchorfile>structThePEG_1_1FixedAllocator.html</anchorfile>
      <anchor>2f59461a03b9545108c7bfcf0ae4d839</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Allocator</name>
    <filename>classThePEG_1_1Allocator.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>std::allocator&lt; T &gt;</type>
      <name>BaseAllocator</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>dccd38f521d3ed80b11d0d71e14a68af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseAllocator::size_type</type>
      <name>size_type</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>6c8e57969ced4d85a72e2144f3654d11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseAllocator::difference_type</type>
      <name>difference_type</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>0cd88c0dc55e85100a8aa05aa33afa7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseAllocator::pointer</type>
      <name>pointer</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>81eba051a2d83d17d188d8ea4cfe29ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseAllocator::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>98fa53d8e48a475f7a8144603e3b8dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseAllocator::reference</type>
      <name>reference</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>5522f1297c5e58bd9239fdb2603de136</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseAllocator::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>76b179bb034b1123ee1288887166b0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseAllocator::value_type</type>
      <name>value_type</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>3dc56880be5883f651218304996414f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Allocator</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>cc65e9d0ae14a9ce4d6f0aa890b36f94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Allocator</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>fcc0cde2d742bdff25fe364075f4333d</anchor>
      <arglist>(const Allocator &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Allocator</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>cdbb283dbd813c4e3864211b4400b62f</anchor>
      <arglist>(const Allocator&lt; T1 &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Allocator</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>f9a72ba3446cf5dc1e51e8bb0c51b65d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>address</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>508eb7eb3543028cea32739e18d4b05e</anchor>
      <arglist>(reference x) const </arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>address</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>d942af5d86c0fef84832b8346befeccb</anchor>
      <arglist>(const_reference x) const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>allocate</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>19f38c5defedfcd524a6a79c471a3cb2</anchor>
      <arglist>(size_type n, const void *vp=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocate</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>244b742d2d04f91a3eb829f72b5551ea</anchor>
      <arglist>(pointer p, size_type n)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>639dc97b17eae6ce22330421f4e85d48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>4e613245efee34972af37a789b3b74d1</anchor>
      <arglist>(pointer p, const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>cbcef2e8c62ea3d1c29a99ca77b37d61</anchor>
      <arglist>(pointer p)</arglist>
    </member>
    <member kind="variable">
      <type>BaseAllocator</type>
      <name>fallback</name>
      <anchorfile>classThePEG_1_1Allocator.html</anchorfile>
      <anchor>08afe8bba5ae8578598d05082ff28f45</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">ThePEG::Allocator::rebind</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Allocator::rebind</name>
    <filename>structThePEG_1_1Allocator_1_1rebind.html</filename>
    <templarg>T1</templarg>
    <member kind="typedef">
      <type>Allocator&lt; T1 &gt;</type>
      <name>other</name>
      <anchorfile>structThePEG_1_1Allocator_1_1rebind.html</anchorfile>
      <anchor>79b7f900961b05fb75deee786346807e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HoldFlag</name>
    <filename>classThePEG_1_1HoldFlag.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag.html</anchorfile>
      <anchor>d868c438e64100518feb69146ec15e67</anchor>
      <arglist>(T &amp;newFlag, const T &amp;holdFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag.html</anchorfile>
      <anchor>dfc7fc7c2cb0c39d2f2e2e5c2c59385c</anchor>
      <arglist>(T &amp;newFlag, const T &amp;holdFlag, const T &amp;finalFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag.html</anchorfile>
      <anchor>86630cf7bcaf513376558670e68b5632</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag.html</anchorfile>
      <anchor>b1620fbea0d5a852f2610a33f6fb81b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag.html</anchorfile>
      <anchor>9f55596b9754fc260f86df51540d5521</anchor>
      <arglist>(const HoldFlag &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HoldFlag &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1HoldFlag.html</anchorfile>
      <anchor>0edbe019e69fce7fcdf3ea13b12ab824</anchor>
      <arglist>(const HoldFlag &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T &amp;</type>
      <name>theFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag.html</anchorfile>
      <anchor>16bb7c3a690722c283f769383308c48a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>oldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag.html</anchorfile>
      <anchor>48ee0d1c32b1f60df4fca6f4c86c471c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::HoldFlag&lt; bool &gt;</name>
    <filename>classThePEG_1_1HoldFlag_3_01bool_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag_3_01bool_01_4.html</anchorfile>
      <anchor>231edcd80e00cbd95cea0e61b77bdf58</anchor>
      <arglist>(bool &amp;newFlag, bool holdFlag=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag_3_01bool_01_4.html</anchorfile>
      <anchor>05854da297f2721d248c833f08039ae5</anchor>
      <arglist>(bool &amp;newFlag, bool holdFlag, bool finalFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag_3_01bool_01_4.html</anchorfile>
      <anchor>b4d7fddcccb20a95504379977ac9c020</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag_3_01bool_01_4.html</anchorfile>
      <anchor>a49e855851e698dd7117019770d69b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>HoldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag_3_01bool_01_4.html</anchorfile>
      <anchor>0cd9462c9b02e5b0f29c0e74babfbf53</anchor>
      <arglist>(const HoldFlag &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HoldFlag &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1HoldFlag_3_01bool_01_4.html</anchorfile>
      <anchor>8eb047a6599ac9326d9af1658113b269</anchor>
      <arglist>(const HoldFlag &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool &amp;</type>
      <name>theFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag_3_01bool_01_4.html</anchorfile>
      <anchor>058852dfafbf4580147a52ca058851ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>oldFlag</name>
      <anchorfile>classThePEG_1_1HoldFlag_3_01bool_01_4.html</anchorfile>
      <anchor>a56a6dc482968cc982e672116ec9b58e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Interval</name>
    <filename>classThePEG_1_1Interval.html</filename>
    <templarg>T</templarg>
    <templarg>CMP</templarg>
    <member kind="function">
      <type></type>
      <name>Interval</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>77b405d50e7baf7039c63b5b57ff9e3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Interval</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>c389c40e1f793a39e4a11c8bae2a90a4</anchor>
      <arglist>(T dn, T up)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Interval</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>15eba4957152caec08ca79f234eebdae</anchor>
      <arglist>(const Interval &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>const Interval &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>4d995a846e68fd6b3756870045f77427</anchor>
      <arglist>(const Interval &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>65effea36b566c54ce22016b845dfafd</anchor>
      <arglist>(const Interval &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>c597dd181e20091806252eb0bd819426</anchor>
      <arglist>(const Interval &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>7d20f11945face739fbcc10e247bfcc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>e46b578157e624fe69546a4daf7d4e52</anchor>
      <arglist>(T x) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>includes</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>91d28e6825fdae6b535345b612e8d152</anchor>
      <arglist>(T x) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>includes</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>199135697b5a761c2b217246d68b2dcc</anchor>
      <arglist>(const Interval&lt; T, CMP &gt; &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>Interval&lt; T, CMP &gt;</type>
      <name>chopUpper</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>d8c614f1633baf7b5ae6e9b984638099</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>Interval&lt; T, CMP &gt;</type>
      <name>chopLower</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>c4ea02e5c28af06ed00eee14a391eabe</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>Interval&lt; T, CMP &gt;</type>
      <name>overlap</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>d75a3e8a5b7be3580c862a7e454583c6</anchor>
      <arglist>(const Interval &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>Interval&lt; T, CMP &gt;</type>
      <name>sum</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>b9ee1adc459019df5f0ed08e77a91fbe</anchor>
      <arglist>(const Interval &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>upper</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>89e16290ee2b2351baace7ab3fc2e26b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lower</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>a4d2698e8a9d249f0dc28982527b6d39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>upper</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>cdf26dd535e62fa8ca9c76cb2c1bdd97</anchor>
      <arglist>(T up)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lower</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>baed44eb7427f3e1ed7796b2fb6e17d8</anchor>
      <arglist>(T dn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>check</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>86c72adbcf6ec4777829c72439407432</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkAll</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>3e7153cbc2a3dfcf940af54296515933</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Interval&lt; T, CMP &gt; &gt;</type>
      <name>split</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>0b8b97286da0cd7c79affc65d790a4e5</anchor>
      <arglist>(Interval&lt; T, CMP &gt;, T x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Interval&lt; T, CMP &gt; &gt;</type>
      <name>split</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>46bbf213a14e0d6daecbb6a15faa45b9</anchor>
      <arglist>(Interval&lt; T, CMP &gt;, Iterator first, Iterator last)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::pair&lt; T, T &gt;</type>
      <name>theLimits</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>31caadd510010c228995a8dcfdd829d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static CMP</type>
      <name>cmp</name>
      <anchorfile>classThePEG_1_1Interval.html</anchorfile>
      <anchor>e84a4a2679caa2d10215e12538ba010e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Level</name>
    <filename>classThePEG_1_1Level.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Level</name>
      <anchorfile>classThePEG_1_1Level.html</anchorfile>
      <anchor>93839ceace38d40caefae19349cfcacc</anchor>
      <arglist>(T &amp;newLevel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Level</name>
      <anchorfile>classThePEG_1_1Level.html</anchorfile>
      <anchor>1f134e669fcb8fe21b935c576d344cc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Level</name>
      <anchorfile>classThePEG_1_1Level.html</anchorfile>
      <anchor>a6a1ff135a8229c34f779bada514b222</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Level</name>
      <anchorfile>classThePEG_1_1Level.html</anchorfile>
      <anchor>8045e3b52a038c66c5fc52ab0263fd4a</anchor>
      <arglist>(const Level &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Level &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Level.html</anchorfile>
      <anchor>37a5bc11acbb18a4a83be1d932783a9d</anchor>
      <arglist>(const Level &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T &amp;</type>
      <name>theLevel</name>
      <anchorfile>classThePEG_1_1Level.html</anchorfile>
      <anchor>61e7814f345dbe1dee565b67b2b7f071</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::LoopGuard</name>
    <filename>classThePEG_1_1LoopGuard.html</filename>
    <templarg>ExceptionT</templarg>
    <templarg>MessageT</templarg>
    <member kind="function">
      <type></type>
      <name>LoopGuard</name>
      <anchorfile>classThePEG_1_1LoopGuard.html</anchorfile>
      <anchor>f53e0ec95228c4ba8a28d29174456704</anchor>
      <arglist>(const MessageT &amp;mess, long maxc=1000000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1LoopGuard.html</anchorfile>
      <anchor>9491b084943d929d1a25b948489c40b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>LoopGuard</name>
      <anchorfile>classThePEG_1_1LoopGuard.html</anchorfile>
      <anchor>2d61e5d5d4f6fab0fe91cf9f66612164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>LoopGuard</name>
      <anchorfile>classThePEG_1_1LoopGuard.html</anchorfile>
      <anchor>52d5a1fe806e3efca4461392e81dfb41</anchor>
      <arglist>(const LoopGuard &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>count</name>
      <anchorfile>classThePEG_1_1LoopGuard.html</anchorfile>
      <anchor>b7252529978b61c6df14beb0e6d2e512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>maxCount</name>
      <anchorfile>classThePEG_1_1LoopGuard.html</anchorfile>
      <anchor>3e1af59ab755f35ee9af5ed94002bd37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const MessageT &amp;</type>
      <name>message</name>
      <anchorfile>classThePEG_1_1LoopGuard.html</anchorfile>
      <anchor>eb6fea354069d606bbdfaabae8b32a9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MaxCmp</name>
    <filename>classThePEG_1_1MaxCmp.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>MaxCmp</name>
      <anchorfile>classThePEG_1_1MaxCmp.html</anchorfile>
      <anchor>4393d57bf9682e06560031fa50a02319</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MaxCmp</name>
      <anchorfile>classThePEG_1_1MaxCmp.html</anchorfile>
      <anchor>5a34c47eba570300891133e49d347465</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1MaxCmp.html</anchorfile>
      <anchor>b603651d8aa11f79a04bdef9bdad49a0</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const T &amp;</name>
      <anchorfile>classThePEG_1_1MaxCmp.html</anchorfile>
      <anchor>c41f879132b6da11ca9ff48a43eb8b75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classThePEG_1_1MaxCmp.html</anchorfile>
      <anchor>d24cd419fecd7d3fda3908d345671aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>max</name>
      <anchorfile>classThePEG_1_1MaxCmp.html</anchorfile>
      <anchor>bfa23fd0454c8d01aa1dc1ee66f52849</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Named</name>
    <filename>classThePEG_1_1Named.html</filename>
    <member kind="function">
      <type></type>
      <name>Named</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>4500fa19fd15c9887b3bdf182877aba4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Named</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>44d06e282a57a51fc3484cd342ba9793</anchor>
      <arglist>(const string &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Named</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>134b7fa9aa4505e976bdd31dffa0ba9f</anchor>
      <arglist>(const Named &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Named</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>3aec088c723c2a0b90076b46659531a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const string &amp;</type>
      <name>name</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>c74143aa522d4dfc9dda112ed809ef90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>b0cf6d1167424e0312fccf9120bd8225</anchor>
      <arglist>(const Named &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>2d96a4308ab05f38fcac9d37a2651b62</anchor>
      <arglist>(const Named &amp;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Named &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>c67ee9007d0d522189540935bbe55b83</anchor>
      <arglist>(const Named &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const string &amp;</type>
      <name>name</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>1e8d1bbd3ff58dfca8d5e7733f6cc488</anchor>
      <arglist>(const string &amp;newName)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>theName</name>
      <anchorfile>classThePEG_1_1Named.html</anchorfile>
      <anchor>a4e380a157b694d21bb6fa6053f54916</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::ObjectIndexer</name>
    <filename>classThePEG_1_1ObjectIndexer.html</filename>
    <templarg>IntT</templarg>
    <templarg>ObjT</templarg>
    <member kind="typedef">
      <type>Ptr&lt; ObjT &gt;::pointer</type>
      <name>TPtr</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>bb300dfb4e8a7bc9b5e5ada876d6ef76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ObjT &gt;::const_pointer</type>
      <name>cTPtr</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>5be003f7616503ef8a8edcbebcada8cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ObjT &gt;::transient_pointer</type>
      <name>tTPtr</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>efe33d568ab48f486f506d0352229d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ObjT &gt;::transient_const_pointer</type>
      <name>tcTPtr</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>b2dc706de203547dae58d9420449a10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; IntT, tTPtr &gt;</type>
      <name>IndexObjectMap</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>be76255aefb0cf5122012c5398b7a871</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; TPtr, IntT &gt;</type>
      <name>ObjectIndexMap</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>1c109ede1130cd66c173d4515f5f2057</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>IntT</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>40cd2f499a90b936ee62c42241b5d2a8</anchor>
      <arglist>(tTPtr o)</arglist>
    </member>
    <member kind="function">
      <type>tTPtr</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>62ab68d4066cb7a0a2ab403b6f280c8f</anchor>
      <arglist>(IntT i)</arglist>
    </member>
    <member kind="function">
      <type>tTPtr</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>f57fa988c5d371159d595b37eef8b40f</anchor>
      <arglist>(IntT i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>810a26eb9ef8ed1c67143d0d4f9d4dd8</anchor>
      <arglist>(IntT i, tTPtr o)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>included</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>6b1d5fadd78f1aecd0e272ddf82fb9b9</anchor>
      <arglist>(tTPtr o) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>included</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>d0dfbbdf81ff20626258fc233b7c1ffb</anchor>
      <arglist>(IntT i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>aece974bd0e9fbe7f4422388b639c2bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>2e4f6e549c2542e0a68aa2ff317eb943</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ObjectIndexer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>495fb38cd16146fa1e34905c70fe7be8</anchor>
      <arglist>(const ObjectIndexer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IndexObjectMap</type>
      <name>indexObject</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>38dbedd02c70d66284cc3ab311c85141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ObjectIndexMap</type>
      <name>objectIndex</name>
      <anchorfile>classThePEG_1_1ObjectIndexer.html</anchorfile>
      <anchor>f6d4efd0219dbaff7a4d0ba94331cf9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Rebinder</name>
    <filename>classThePEG_1_1Rebinder.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>Ptr&lt; T &gt;::pointer</type>
      <name>TPtr</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>310b24fecd8930c39d5fd08806c1f5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; T &gt;::const_pointer</type>
      <name>cTPtr</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>2ab944d300c5b2364779e56b098164e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; T &gt;::transient_pointer</type>
      <name>tTPtr</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>59c93ab180ed1396ad598240496d0ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; T &gt;::transient_const_pointer</type>
      <name>tcTPtr</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>79bf41580e219b016855ff3794c165b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; cTPtr, TPtr &gt;</type>
      <name>MapType</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>3153312999821e8be03f01a62f99282c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MapType::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>d2c57494fad73e170b7b815470096ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rebinder</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>aa2df34db26f8a147d803bce3bef932d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TPtr &amp;</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>f6f40e91422ee9b6a317bbb3dc42ceea</anchor>
      <arglist>(tcTPtr)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>translate</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>373ab2f0d82e07871cd29ccafe1ca022</anchor>
      <arglist>(const R &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>48d0b8936f676a43cd5c95db4b3fe255</anchor>
      <arglist>(OutputIterator ouptut, InputIterator first, InputIterator last) const </arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>alwaysTranslate</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>a30a30787afb5dd255afd96ab5ddc128</anchor>
      <arglist>(const R &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>alwaysTranslate</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>96680689251803f8a38c97310d8f2c90</anchor>
      <arglist>(OutputIterator, InputIterator, InputIterator) const </arglist>
    </member>
    <member kind="function">
      <type>const MapType &amp;</type>
      <name>map</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>7724ef0e79d436a8000a3c42297077e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Rebinder</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>6783cdcd79a7d4cad0ee39bd61966973</anchor>
      <arglist>(const Rebinder &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Rebinder &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>af840d9f9e75cba944153e09e8a68053</anchor>
      <arglist>(const Rebinder &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MapType</type>
      <name>theMap</name>
      <anchorfile>classThePEG_1_1Rebinder.html</anchorfile>
      <anchor>3947e5a8d63a3fec33a9b9dde7e49954</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Selector</name>
    <filename>classThePEG_1_1Selector.html</filename>
    <templarg>T</templarg>
    <templarg>WeightType</templarg>
    <member kind="typedef">
      <type>map&lt; WeightType, T, less&lt; WeightType &gt;, Allocator&lt; std::pair&lt; WeightType const, T &gt; &gt; &gt;</type>
      <name>MapType</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>10f26ae2e47fa82e17aa3efc9b4fa67d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MapType::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>a56774c4bf36fa95d618069aefc2f768</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MapType::iterator</type>
      <name>iterator</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>485724d36c5fb14fd1a253b338c79b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MapType::size_type</type>
      <name>size_type</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>ff2b846ff95e6792cf84584e8b59f5fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Selector</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>d979791914765f34bce8e7cd77fee1bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Selector</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>f26ac743dfd24125d67bf9615112a6f8</anchor>
      <arglist>(const Selector &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Selector</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>a4a284ea83dd3b4befab2aed38aefa28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Selector &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>f45cf1870556207ce23bc2d5433e82e5</anchor>
      <arglist>(const Selector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>37f327e78c63f1a2148a0c073fe80457</anchor>
      <arglist>(Selector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>insert</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>6ea0cd0b3027767bea8a625a15d3ba8d</anchor>
      <arglist>(WeightType, const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>89bc8191157d58aa0d9a771472345101</anchor>
      <arglist>(WeightType, const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>erase</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>36085a888a3ea4a8a01fd8fde39929a4</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>530f5867761ab07817345d18430a5799</anchor>
      <arglist>(const T &amp;oldObject, const T &amp;newObject)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>a5f9a625f3da7fb9a779eea416017d14</anchor>
      <arglist>(double rnd, double *remainder=0)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>dbd8d63fa50fd00ff4c9804511513f04</anchor>
      <arglist>(double rnd)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>14c16504e593f0df404622e847212950</anchor>
      <arglist>(double rnd, double *remainder=0) const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>19def2fc8a44132ba6adaa1954f2d196</anchor>
      <arglist>(double rnd) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>6df06a47a1ec723f47d54deeba73edb7</anchor>
      <arglist>(RNDGEN &amp;rnd)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>c9cf144eeb6256f4d64cd2e5b01a4942</anchor>
      <arglist>(RNDGEN &amp;rnd) const </arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>sum</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>2aae8852394b8d4f8729b88578838c6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>3b19629d405da3d9043b49ddef28de36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>3695e54536c49b553ffef6a01fd44e9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>76da9f6c20dddd14f1062233c80a1f36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>7b2ac718c7e4c4099f7e13075cb40e96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>b089a4fd3d2a8c044b98d24c27ff9a04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>f0acefd1d6249dfe14b4f69411a95e62</anchor>
      <arglist>(OStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>e29ffb174e0f7d4381fc0b43329c69f7</anchor>
      <arglist>(IStream &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MapType</type>
      <name>theMap</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>0647120636cb1b33481d453b267829e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WeightType</type>
      <name>theSum</name>
      <anchorfile>classThePEG_1_1Selector.html</anchorfile>
      <anchor>859e28bacf041f7795a9284cadac0640</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::SimplePhaseSpace</name>
    <filename>structThePEG_1_1SimplePhaseSpace.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CMS</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>f2aabc05c46f31e125da29882bde321f</anchor>
      <arglist>(Energy2 s, PType &amp;p1, PType &amp;p2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CMS</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>20f5c59f8bf42f7f89d181b6131863f1</anchor>
      <arglist>(PType &amp;p1, PType &amp;p2, Energy2 s, double cosTheta, double phi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CMS</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>0207bb14210be2352f275a87d0f29025</anchor>
      <arglist>(PType &amp;p1, PType &amp;p2, Energy2 s, Energy2 t, double phi, const PType &amp;p0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CMS</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>1095758bed33fce113b8e1b4c8f662fa</anchor>
      <arglist>(PType &amp;p1, PType &amp;p2, Energy2 s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CMS</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>9ff2616207fe667fbcf8a472985a61b3</anchor>
      <arglist>(const PPairType &amp;p, Energy2 s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CMS</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>e893246827421c908b231a2674325f9b</anchor>
      <arglist>(PType &amp;p1, PType &amp;p2, PType &amp;p3, Energy2 s, double x1, double x3)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CMS</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>4fce37e2ef1bda7ddaf830526e0310f3</anchor>
      <arglist>(PType &amp;p1, PType &amp;p2, PType &amp;p3, Energy2 s, double x1, double x3, double phii=0.0, double theta=0.0, double phi=0.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Energy</type>
      <name>getMagnitude</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>284d5b7a96cd4c7f2f89ab51bbe6574e</anchor>
      <arglist>(Energy2 s, Energy m1, Energy m2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Momentum3</type>
      <name>polar3Vector</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>ba83143bb779f1bcb2afbedf1d9e60fd</anchor>
      <arglist>(Energy p, double costheta, double phi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; LorentzMomentum &gt;</type>
      <name>CMSn</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>5242be7901bc18ea27f3f9a92b8f34ee</anchor>
      <arglist>(Energy m0, const vector&lt; Energy &gt; &amp;m)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CMSn</name>
      <anchorfile>structThePEG_1_1SimplePhaseSpace.html</anchorfile>
      <anchor>6a7bda71fc37da1ffa8464ffee308d11</anchor>
      <arglist>(Container &amp;particles, Energy m0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::StringUtils</name>
    <filename>classThePEG_1_1StringUtils.html</filename>
    <member kind="typedef">
      <type>vector&lt; string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>f7fa20c727b6dbd0dfb519ddacbdcd70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>string::size_type</type>
      <name>pos_t</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>3423a5e74c4518f38187e8a5bdebb874</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StringVector</type>
      <name>split</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>a9efa704c0ed28cc5f05277bbc27c7b6</anchor>
      <arglist>(string s, string ws=&quot; \t\n&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>car</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>6f759159c7dae4b7dad388470993c34b</anchor>
      <arglist>(string s, string ws=&quot; \t\n&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>cdr</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>aae34727e0522c7afdb9a20c43783a16</anchor>
      <arglist>(string s, string ws=&quot; \t\n&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>stripws</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>d7219e9443511415a9fc808baafa8aab</anchor>
      <arglist>(string str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>dirname</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>7e421a729a622eb994fe8b987bb0eeaa</anchor>
      <arglist>(string file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>basename</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>56beb6556f27bda8de951da694dac60b</anchor>
      <arglist>(string file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>remsuf</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>63a3568830286b4e60e08a20a98312c8</anchor>
      <arglist>(string file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>suffix</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>a0a53d447cfc8c78500dc2eabd38bfc6</anchor>
      <arglist>(string file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static map&lt; string, string &gt;</type>
      <name>xmlAttributes</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>e7b17b56e8cdf4aff06f3f4c336c8b95</anchor>
      <arglist>(string tag, string line, string::size_type curr=0)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const pos_t</type>
      <name>end</name>
      <anchorfile>classThePEG_1_1StringUtils.html</anchorfile>
      <anchor>1f90a617ef847d17c3bf6e73e5cf1924</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::SystemUtils</name>
    <filename>classThePEG_1_1SystemUtils.html</filename>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>getenv</name>
      <anchorfile>classThePEG_1_1SystemUtils.html</anchorfile>
      <anchor>b60e18e3d28da6c9028c7e3f5e29d306</anchor>
      <arglist>(string)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Throw</name>
    <filename>structThePEG_1_1Throw.html</filename>
    <templarg>Ex</templarg>
    <member kind="function">
      <type></type>
      <name>Throw</name>
      <anchorfile>structThePEG_1_1Throw.html</anchorfile>
      <anchor>c6546318d9f9638474db95421823e80d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Throw &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structThePEG_1_1Throw.html</anchorfile>
      <anchor>615b5b9c23188de23617d9c4de1ef07e</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structThePEG_1_1Throw.html</anchorfile>
      <anchor>1a462dcfe6d7b92f266cf93c6ca330e9</anchor>
      <arglist>(Exception::Severity sev)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Throw</name>
      <anchorfile>structThePEG_1_1Throw.html</anchorfile>
      <anchor>b4c5e143197add7a9f45028d124e5d61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Ex</type>
      <name>ex</name>
      <anchorfile>structThePEG_1_1Throw.html</anchorfile>
      <anchor>323b58f95a264abb6766e651ee698158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>handled</name>
      <anchorfile>structThePEG_1_1Throw.html</anchorfile>
      <anchor>6a0724710531db239e6c60dfe17880e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::TimeCounter</name>
    <filename>classThePEG_1_1TimeCounter.html</filename>
    <base>ThePEG::Named</base>
    <member kind="function">
      <type></type>
      <name>TimeCounter</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>1471c47bb07b1752eb6473dca477a4f1</anchor>
      <arglist>(string newName=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeCounter</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>bd8f4c29f9a5f6bb22ec88e33e9179a9</anchor>
      <arglist>(const TimeCounter &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeCounter</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>ed821b956b04eca655096e28e1d4637a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeCounter &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>a2bfeb211f858db6529901367d118567</anchor>
      <arglist>(const TimeCounter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enter</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>43e3c642c23b79560f657b3e33f62ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>c465d86a4d88a94a5cf8bb16e8a92246</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>36a54664f99dc2b1b36d89f433b5c3ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>nCalls</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>3806c50fee82095e0bc97dabcd79783d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>timeTot</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>1b4f9ac18b7f43679aaf643ae35070f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>timePer</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>0fab02aa4428b7367c1b2726732b703b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>theNCalls</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>507605210561d5f0bf86e52707949491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>clock_t</type>
      <name>startClock</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>805def5fb565adf0116a1be5503a6995</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>totTime</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>88a5ce05cad5b1c55a365cbc8a790e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>loop</name>
      <anchorfile>classThePEG_1_1TimeCounter.html</anchorfile>
      <anchor>c9eca12a33908d5781c776ccb34efb0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::MainTimer</name>
    <filename>classThePEG_1_1MainTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>MainTimer</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>7dff050d4c44cf594f2642baaf708bf1</anchor>
      <arglist>(string file=&quot;.timer&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MainTimer</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>36b8a7ffe78f25913f14d9ca547dbefc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeCounter *</type>
      <name>getCounter</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>26340f4810f930ccd7f781eb9eaf5e1f</anchor>
      <arglist>(unsigned int i, string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>running</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>2a493f2bf0c2a08b7618defe93630d01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>map&lt; unsigned int, TimeCounter &gt;</type>
      <name>CounterMap</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>73dbe5aca9e4ad0eba08604204ef98e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MainTimer</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>930bdb743f62295cf45b727aac7b7b40</anchor>
      <arglist>(const MainTimer &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MainTimer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>9ae3c7295f361a3f77706fd5502ffae3</anchor>
      <arglist>(const MainTimer &amp;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static CounterMap &amp;</type>
      <name>counters</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>b878212a129b09f6048a897e3c618dce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>statistics</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>e534f18247dfa6d9569f2f055c3c04a5</anchor>
      <arglist>(string file)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>filename</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>189ee14fa4eb237919cc7b5e056c6a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static bool</type>
      <name>isRunning</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>595336e6038db357752a5dae9d3f22b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static TimeCounter *</type>
      <name>theCounter</name>
      <anchorfile>classThePEG_1_1MainTimer.html</anchorfile>
      <anchor>3367437326ccd6c74f0562c91d0588dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Timer</name>
    <filename>classThePEG_1_1Timer.html</filename>
    <templarg>I</templarg>
    <member kind="function">
      <type></type>
      <name>Timer</name>
      <anchorfile>classThePEG_1_1Timer.html</anchorfile>
      <anchor>e2c850188b2e8c351c99340c7cc22a57</anchor>
      <arglist>(string name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Timer</name>
      <anchorfile>classThePEG_1_1Timer.html</anchorfile>
      <anchor>61269da1bc6ad3439d57ad84af5f7a2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classThePEG_1_1Timer.html</anchorfile>
      <anchor>97d5602bd4bad55d0d9184fa5e28c1f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classThePEG_1_1Timer.html</anchorfile>
      <anchor>7bf4b8b8f3badbe1fc70213420edf0e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Timer</name>
      <anchorfile>classThePEG_1_1Timer.html</anchorfile>
      <anchor>7a3ee46103d426ca03b1555879edbc23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Timer</name>
      <anchorfile>classThePEG_1_1Timer.html</anchorfile>
      <anchor>6ee0a029661e43460c708dae62b6166a</anchor>
      <arglist>(const Timer &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Timer &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Timer.html</anchorfile>
      <anchor>8651df4b1326b578668a55e5a1da5d1d</anchor>
      <arglist>(const Timer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>started</name>
      <anchorfile>classThePEG_1_1Timer.html</anchorfile>
      <anchor>12dd8a05dbbbaa3b0b14fa4083b9c19f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static TimeCounter *</type>
      <name>theCounter</name>
      <anchorfile>classThePEG_1_1Timer.html</anchorfile>
      <anchor>f062ee8966233de961d379e1f4c7cea3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Triplet</name>
    <filename>structThePEG_1_1Triplet.html</filename>
    <templarg>T1</templarg>
    <templarg>T2</templarg>
    <templarg>T3</templarg>
    <member kind="typedef">
      <type>T1</type>
      <name>first_type</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>cca85e9bbe98d262994acdef590991a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T2</type>
      <name>second_type</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>b93d1777472507ef1958a823ed77c2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T3</type>
      <name>third_type</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>54b908125468534e0dda42c106148403</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triplet</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>b7ab644798395cd01fd6bc62bd3110e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triplet</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>3acfceae90632a6798135ce3735e1488</anchor>
      <arglist>(const T1 &amp;t1, const T2 &amp;t2, const T3 &amp;t3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triplet</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>28927f93c9850cd8e0c47dd57bb30541</anchor>
      <arglist>(const Triplet&lt; T1, T2, T3 &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triplet</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>0e6f9e0746b6688a4004ae96835e473d</anchor>
      <arglist>(const Triplet&lt; U1, U2, U3 &gt; &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>5f35022b43e9499474d57b7b5767ad6e</anchor>
      <arglist>(const Triplet&lt; T1, T2, T3 &gt; &amp;t) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>aaadf7322e42c43e2850d1ff7d895396</anchor>
      <arglist>(const Triplet&lt; T1, T2, T3 &gt; &amp;t) const </arglist>
    </member>
    <member kind="variable">
      <type>T1</type>
      <name>first</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>7b2153af776cb0127270cf049dfba69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T2</type>
      <name>second</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>cb0634c0dd39e68e80ff81b8cedd605e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T3</type>
      <name>third</name>
      <anchorfile>structThePEG_1_1Triplet.html</anchorfile>
      <anchor>f94b68d06f395d0e70c12dbc623caedc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::TypeInfo</name>
    <filename>structThePEG_1_1TypeInfo.html</filename>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>name</name>
      <anchorfile>structThePEG_1_1TypeInfo.html</anchorfile>
      <anchor>e9b70369a4037479f4ffd32921e12c99</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>version</name>
      <anchorfile>structThePEG_1_1TypeInfo.html</anchorfile>
      <anchor>99c6b75efc06d049d503d018d65add85</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::OUnit</name>
    <filename>structThePEG_1_1OUnit.html</filename>
    <templarg>T</templarg>
    <templarg>UT</templarg>
    <member kind="function">
      <type></type>
      <name>OUnit</name>
      <anchorfile>structThePEG_1_1OUnit.html</anchorfile>
      <anchor>36788aef19476e07b36e2cbf13bf2acb</anchor>
      <arglist>(const T &amp;t, const UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OUnit</name>
      <anchorfile>structThePEG_1_1OUnit.html</anchorfile>
      <anchor>a633ff30a2e24d9c3c0d6f2063a16795</anchor>
      <arglist>(const OUnit&lt; T, UT &gt; &amp;iu)</arglist>
    </member>
    <member kind="variable">
      <type>const T &amp;</type>
      <name>theX</name>
      <anchorfile>structThePEG_1_1OUnit.html</anchorfile>
      <anchor>ed16d98fc6248f5d466207ef6e0d7672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const UT &amp;</type>
      <name>theUnit</name>
      <anchorfile>structThePEG_1_1OUnit.html</anchorfile>
      <anchor>19b39b226930cb68d50654368ff38a12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::IUnit</name>
    <filename>structThePEG_1_1IUnit.html</filename>
    <templarg>T</templarg>
    <templarg>UT</templarg>
    <member kind="function">
      <type></type>
      <name>IUnit</name>
      <anchorfile>structThePEG_1_1IUnit.html</anchorfile>
      <anchor>7276426f27259cdc9e9c650c611b7f36</anchor>
      <arglist>(T &amp;t, const UT &amp;u)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IUnit</name>
      <anchorfile>structThePEG_1_1IUnit.html</anchorfile>
      <anchor>e5fe8e566c9d6586c249a7ddbd509f0f</anchor>
      <arglist>(const IUnit&lt; T, UT &gt; &amp;iu)</arglist>
    </member>
    <member kind="variable">
      <type>T &amp;</type>
      <name>theX</name>
      <anchorfile>structThePEG_1_1IUnit.html</anchorfile>
      <anchor>c30ead31b746423be0547441580bd57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const UT &amp;</type>
      <name>theUnit</name>
      <anchorfile>structThePEG_1_1IUnit.html</anchorfile>
      <anchor>3cba8f86074646b6fdb441988fb85cbf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::UtilityBase</name>
    <filename>structThePEG_1_1UtilityBase.html</filename>
    <member kind="function" static="yes">
      <type>static LorentzMomentum</type>
      <name>sumMomentum</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>dd401553f40c1d9f41ef3bca1b651673</anchor>
      <arglist>(const Cont &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzMomentum</type>
      <name>sumMomentum</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>fda3228d747a2efab139cc0de2c9afcd</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>d98a60a262b774b8c68071a43284e491</anchor>
      <arglist>(Iterator first, Iterator last, const LorentzRotation &amp;boost)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>fc076e5bcf4731e986367ac7360f1371</anchor>
      <arglist>(Cont &amp;cont, const LorentzRotation &amp;boost)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>boostToCM</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>84e300d6b044b481e736355ca53fa11b</anchor>
      <arglist>(const pair&lt; PType, PType &gt; &amp;pp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>boostToCM</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>56bfdfba5aed1f831418322ea915b815</anchor>
      <arglist>(const Triplet&lt; PType, PType, PType &gt; &amp;pt)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>getBoostToCM</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>66925a31fd17ccdfaccdad223e434a2d</anchor>
      <arglist>(const pair&lt; PType, PType &gt; &amp;pp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>getBoostToCM</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>a491bb36b65cd0cfa36c50bbfab64ce5</anchor>
      <arglist>(const Triplet&lt; PType, PType, PType &gt; &amp;pt)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>getBoostFromCM</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>228b04689ed113f6c3c7f967a1b774d5</anchor>
      <arglist>(const pair&lt; PType, PType &gt; &amp;pp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>getBoostFromCM</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>3ff3c367152142aa1d849986a6b2d7cf</anchor>
      <arglist>(const Triplet&lt; PType, PType, PType &gt; &amp;pt)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>boostToCM</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>dcd9ba6c66e05626c59c92d3280ab38b</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>boostToCM</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>57754d6c261e9f468ccae0080a526bfa</anchor>
      <arglist>(Iterator first, Iterator last, Iterator zAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>boostToCM</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>6bc050e185e1be571388f985ce78a36c</anchor>
      <arglist>(Iterator first, Iterator last, Iterator zAxis, Iterator xzPlane)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMomentum</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>46217879f3c4ebbc473bcf880634170e</anchor>
      <arglist>(PType &amp;p, const Momentum3 &amp;q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMomentumFromCMS</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>32ae24b331314b9d2494ed74b11eedf1</anchor>
      <arglist>(PType &amp;p, const Momentum3 &amp;q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMomentum</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>5ab17c0dc2ec7c1e7eded5a7a3995678</anchor>
      <arglist>(Iter first, Iter last, const Momentum3 &amp;q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMomentum</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>fb34b9f68c6c498bb265e8d7dea0c202</anchor>
      <arglist>(Iter first, Iter last, const Momentum3 &amp;q, double eps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMomentumFromCMS</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>0f7a51505535748fbf49d72f8dd83258</anchor>
      <arglist>(Iter first, Iter last, Energy2 m2, const Momentum3 &amp;q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>transformToMomentum</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>48578ba7829a1897aba78affaccbb225</anchor>
      <arglist>(const PType &amp;p, const Momentum3 &amp;q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>transformToMomentum</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>fa104013dfc0c691fc94914cd9448b06</anchor>
      <arglist>(const PType &amp;p, const LorentzMomentum &amp;q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>getTransformToMomentum</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>3d4642a604a8229520b3bb568259bd79</anchor>
      <arglist>(const PType &amp;p, const LorentzMomentum &amp;q, const LorentzMomentum &amp;k)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>getTransformToMomentum</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>fa5fbf0546f879aee6e49abbfffcb2b0</anchor>
      <arglist>(const PType &amp;p, const Momentum3 &amp;q, const LorentzMomentum &amp;k)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>transformFromCMS</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>7f3d7ac66725361a08a62b6ced99e211</anchor>
      <arglist>(const LV &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>transformFromCMS</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>7117cfdfefdfe5f54b00aff8c9bb88a0</anchor>
      <arglist>(const LV &amp;sum, LV zAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>transformFromCMS</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>17f7982c9ae68aec83cee5cf76484508</anchor>
      <arglist>(const LV &amp;sum, const LV &amp;zAxis, LV xyPlane)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>transformToCMS</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>2d8810836b0e543fc115a0297bf5fab8</anchor>
      <arglist>(const LV &amp;sum, LV zAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>transformToCMS</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>960f197b9a2c7f243baad6784852d1ff</anchor>
      <arglist>(const LV &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LorentzRotation</type>
      <name>transformToCMS</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>703d71c7e293841b0223733af14cbc6f</anchor>
      <arglist>(const LV &amp;sum, const LV &amp;zAxis, LV xyPlane)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add</name>
      <anchorfile>structThePEG_1_1UtilityBase.html</anchorfile>
      <anchor>e21ea9200da5bb20eea406d932081a84</anchor>
      <arglist>(Cont1 &amp;c1, const Cont2 &amp;c2)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Utilities</name>
    <filename>structThePEG_1_1Utilities.html</filename>
    <base>ThePEG::UtilityBase</base>
  </compound>
  <compound kind="class">
    <name>ThePEG::VSelector</name>
    <filename>classThePEG_1_1VSelector.html</filename>
    <templarg>T</templarg>
    <templarg>WeightType</templarg>
    <member kind="typedef">
      <type>vector&lt; WeightType &gt;</type>
      <name>WeightVector</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>9eeb4afa0af3f803bd729153c31dad62</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WeightVector::const_iterator</type>
      <name>WIterator</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>307c118c2c83489206e57733e17f714b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; T &gt;</type>
      <name>ObjectVector</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>475d0c1113d44a672c2e5013dc548c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectVector::iterator</type>
      <name>iterator</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>07496ce70ebc47739f5a345fc658edc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectVector::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>9fb40371f65f283e393527ad38c00672</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectVector::size_type</type>
      <name>size_type</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>e90d62718351e63f0b662d3bb7318d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VSelector</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>63285141bbb51093c4b0c36d5d903fb6</anchor>
      <arglist>(size_type reserved=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VSelector</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>f5b963f7e7a85edad212452e371f5540</anchor>
      <arglist>(const VSelector &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VSelector</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>87b052b2ed80d8209b836ccdcd1c43a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const VSelector &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>f6698ace153663abd4f280c6b494a15d</anchor>
      <arglist>(const VSelector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>2190ceba732789a4f9c261eb6c1d299b</anchor>
      <arglist>(VSelector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>insert</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>24de3a489169bb90a6d507661c982b0b</anchor>
      <arglist>(WeightType, const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>reweight</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>25f9daf636d65f23962f86b317800bc7</anchor>
      <arglist>(WeightType, const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>erase</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>28cd7734a6b5d21485b8607594ab6f1e</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>79e0c08d13d93d7e635c85d7775eba7c</anchor>
      <arglist>(const T &amp;told, const T &amp;tnew)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>16388fd679903cb112a9d0e1d2562a6f</anchor>
      <arglist>(double rnd, double *remainder=0)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>a95d9dc7f759c385a075464725602bf0</anchor>
      <arglist>(double rnd)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>e3a469934207c9b9cab57ad7ab5a0855</anchor>
      <arglist>(double rnd, double *remainder=0) const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>7ff95fd607a6f963c71ba88594465cf7</anchor>
      <arglist>(double rnd) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>56368ec00d956dd115bb19c53dc69676</anchor>
      <arglist>(RNDGEN &amp;rnd)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>ee6d1f66c1195a12c9f704607c709397</anchor>
      <arglist>(RNDGEN &amp;rnd) const </arglist>
    </member>
    <member kind="function">
      <type>WeightType</type>
      <name>sum</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>6c185e9eca42c304af4ebfff865ffe1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>792ddd1d01ab4098c880662ea9286cb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>36cbe161943c983b4af0cd6abb3a9345</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>90dbfc3190b213e473319f697a7ed849</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>65d15da0e1040171d8886b57903155ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>516a9354f53810beaf51e793faa3e4d4</anchor>
      <arglist>(size_type reserved)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>b5078906fd52584598c4aadae4e63ae1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>a7b88b47acff095b5ea14b4216b869fa</anchor>
      <arglist>(OStream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>00882e57c5852d33fee4188cf7376235</anchor>
      <arglist>(IStream &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_type</type>
      <name>iselect</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>63da480992054da971be8599f9646db6</anchor>
      <arglist>(double rnd, double *remainder) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WeightVector</type>
      <name>theSums</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>00396e61016db23a10d3e3b8c6081284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WeightVector</type>
      <name>theWeights</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>48b401685a97d52bb84b8ccd0a85b25d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ObjectVector</type>
      <name>theObjects</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>a83135ba1cd0f60bae9029e0cf03e802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WeightType</type>
      <name>theSum</name>
      <anchorfile>classThePEG_1_1VSelector.html</anchorfile>
      <anchor>0b1d7ced0c27c9cbb573693b3b05d1f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::XSecStat</name>
    <filename>classThePEG_1_1XSecStat.html</filename>
    <member kind="function">
      <type></type>
      <name>XSecStat</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>ea6a1e0f131b64a10a999288c7097afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XSecStat</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>e2e3b704be74fec003615875d4e62118</anchor>
      <arglist>(CrossSection xsecmax)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XSecStat</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>c3aa5d1fa353bc14107f437f2014ec8b</anchor>
      <arglist>(const XSecStat &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~XSecStat</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>7e22c78386b4128bdd3f816e459858bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XSecStat &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>4ea00e501eabfc81673822ef8cf6b076</anchor>
      <arglist>(const XSecStat &amp;)</arglist>
    </member>
    <member kind="function">
      <type>XSecStat &amp;</type>
      <name>operator+=</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>8ac0a23fe7f17be310858ede5a28b8c9</anchor>
      <arglist>(const XSecStat &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>3b9302b75d18a848c38fc52490c7b770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>53f24303a55cb437b856d669ce3a01aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>96a18be82b72e4799818d1d19e13863e</anchor>
      <arglist>(double weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>ed6aed8cb9d173cbd37c3b29528b6920</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CrossSection</type>
      <name>xSec</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>95d2396cbc985fcf996e2db8c8664bdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CrossSection</type>
      <name>xSecErr</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>dbb53c365a358959db94a8b649c65f2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CrossSection</type>
      <name>maxXSec</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>b2fd2f4e9ed9ee7129a74cfe2f7041d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumWeights</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>d557962134ec43ed64915a7e98b4f9a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumWeights2</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>79d0b193bec33d55f6a87296accf6476</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>attempts</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>4400da713b6e1d6f8aebeea6c7ee7d19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>accepted</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>37a224e746e1ceb94742e3acabf063d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maxXSec</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>749f570bffcfde23ec3e10ae6e35a218</anchor>
      <arglist>(CrossSection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>cd8bc53502b48b206705c766d9f1a617</anchor>
      <arglist>(PersistentOStream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>input</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>6fb65cc406e118de36a9450ee74d52bb</anchor>
      <arglist>(PersistentIStream &amp;is)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CrossSection</type>
      <name>theMaxXSec</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>601a9c792e44da2ae0bb5d869068cca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theAttempts</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>6c513786e88e6f43b1e4876182c7eb84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>theAccepted</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>50fa1b2e49193ec993ed990d550aadfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theSumWeights</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>6a1633e75508d3ffdfd097b655b92149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>theSumWeights2</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>af5f334075f675bbe65acd7aceed01a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>lastWeight</name>
      <anchorfile>classThePEG_1_1XSecStat.html</anchorfile>
      <anchor>cb87861fa44bc0bd8e1e5e34db6a171c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG::Constants</name>
    <filename>namespaceThePEG_1_1Constants.html</filename>
    <member kind="variable" static="yes">
      <type>static const Length</type>
      <name>MaxLength</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>54f5b08b86f386dd13b4645f546d3de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Energy</type>
      <name>MaxEnergy</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>a406e2876981067a766d17d72f8ff7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Energy2</type>
      <name>MaxEnergy2</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>6ba51cf8ea0c4b2500db2943f3194274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>MaxDouble</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>227b55dc43a5b98e5bc17c38d60b8284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>HugeDouble</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>a0c1822fc98df7adcea2f5104516e04a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>MaxFloat</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>b51e632892a509288dcc367057e708c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>HugeFloat</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>33db9034d85fec0244f0082f00d78dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>MaxRapidity</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>939e2f9ff7e222431fea49b27559b842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>pi</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>13fa92348e4addd63b9ab28f59e38c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const long</type>
      <name>MaxInt</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>1de3a981452a076b0ee0ff6e55074921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>epsilon</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>702cd2f125925a5542f43e7a64080036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>EulerGamma</name>
      <anchorfile>namespaceThePEG_1_1Constants.html</anchorfile>
      <anchor>523615e50a17e90362834fa720e8ee28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG::Group</name>
    <filename>namespaceThePEG_1_1Group.html</filename>
    <member kind="enumeration">
      <name>Handler</name>
      <anchor>1e0f1e437972a53b4c3fd1232157d9ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>subproc</name>
      <anchor>1e0f1e437972a53b4c3fd1232157d9efcb0e9c9814b90ad59097c3376e7b973f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cascade</name>
      <anchor>1e0f1e437972a53b4c3fd1232157d9ef9ce4a19dce64ba688d343fdce73ca324</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>multi</name>
      <anchor>1e0f1e437972a53b4c3fd1232157d9ef37cb30ba1464cb6194d00bab94fe9afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>hadron</name>
      <anchor>1e0f1e437972a53b4c3fd1232157d9ef9426cf6163f5f326685cf910d66c1044</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>decay</name>
      <anchor>1e0f1e437972a53b4c3fd1232157d9ef6bc34515409f77e69f97882e65db4ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Level</name>
      <anchor>b48f9c9035b599fc24a256329414e80f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>before</name>
      <anchor>b48f9c9035b599fc24a256329414e80fc25089fc3731178f736d2f68352c880a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>main</name>
      <anchor>b48f9c9035b599fc24a256329414e80fb27572c657ce2285e83cbf275995c5ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>after</name>
      <anchor>b48f9c9035b599fc24a256329414e80f717999fe8c31b7d2b11b5a5ca98993d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG::Helicity</name>
    <filename>namespaceThePEG_1_1Helicity.html</filename>
    <class kind="class">ThePEG::Helicity::FermionSpinInfo</class>
    <class kind="class">ThePEG::Helicity::HelicityVertex</class>
    <class kind="class">ThePEG::Helicity::LorentzPolarizationVector</class>
    <class kind="class">ThePEG::Helicity::LorentzRSSpinor</class>
    <class kind="class">ThePEG::Helicity::LorentzRSSpinorBar</class>
    <class kind="class">ThePEG::Helicity::LorentzSpinor</class>
    <class kind="class">ThePEG::Helicity::LorentzSpinorBar</class>
    <class kind="class">ThePEG::Helicity::LorentzTensor</class>
    <class kind="class">ThePEG::Helicity::RhoDMatrix</class>
    <class kind="class">ThePEG::Helicity::RSFermionSpinInfo</class>
    <class kind="class">ThePEG::Helicity::ScalarSpinInfo</class>
    <class kind="class">ThePEG::Helicity::SpinInfo</class>
    <class kind="class">ThePEG::Helicity::TensorSpinInfo</class>
    <class kind="class">ThePEG::Helicity::VectorSpinInfo</class>
    <member kind="typedef">
      <type>Ptr&lt; FermionSpinInfo &gt;::pointer</type>
      <name>FermionSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>c8b65ea39642cdc09b06a37cb8137848</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; FermionSpinInfo &gt;::const_pointer</type>
      <name>cFermionSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>e18d0ddb290013e9105a0b797480cbb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; FermionSpinInfo &gt;::transient_pointer</type>
      <name>tFermionSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>c5db693adf6f8c290a3b7dccc79b6b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; FermionSpinInfo &gt;::transient_const_pointer</type>
      <name>tcFermionSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>0d13abed278bfdfb24f8997f2c9fbef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HelicityVertex &gt;::pointer</type>
      <name>VertexPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>29fb69d72106d0017e6069e8ba603a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HelicityVertex &gt;::const_pointer</type>
      <name>cVertexPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>ba18d9da24f026515c9e4d6e9792604c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HelicityVertex &gt;::transient_pointer</type>
      <name>tVertexPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>b60d6d187d06d7a60460ff7ff286c4b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; HelicityVertex &gt;::transient_const_pointer</type>
      <name>tcVertexPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>58394e3720c50eda36c2286b2a482151</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RSFermionSpinInfo &gt;::pointer</type>
      <name>RSFermionSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>2a02da84a10c26101eda6d5bd361474d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RSFermionSpinInfo &gt;::const_pointer</type>
      <name>cRSFermionSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>9c560ae619f49ff065e3cbb6f1634b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RSFermionSpinInfo &gt;::transient_pointer</type>
      <name>tRSFermionSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>5dd123f66e3bb916873d34dde4fd5b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; RSFermionSpinInfo &gt;::transient_const_pointer</type>
      <name>tcRSFermionSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>63680dded787913320b5278b6a22036b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ScalarSpinInfo &gt;::pointer</type>
      <name>ScalarSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>c31f2ff840c3db8e804594adf4930b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ScalarSpinInfo &gt;::const_pointer</type>
      <name>cScalarSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>9b5aff241ea2ba3576b367a637726474</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ScalarSpinInfo &gt;::transient_pointer</type>
      <name>tScalarSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>eb8d9511333361a10f367231c4d8b524</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; ScalarSpinInfo &gt;::transient_const_pointer</type>
      <name>tcScalarSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>197f1934601324f3ab5df2925b233982</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinInfo &gt;::pointer</type>
      <name>SpinfoPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>697b9a1fc5a6439b8fc5fb3c0a154eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinInfo &gt;::const_pointer</type>
      <name>cSpinfoPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>d08e12b818e9b29d67dcbb24a854a4fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinInfo &gt;::transient_pointer</type>
      <name>tSpinfoPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>6d7fd684bab72b203a70353f038b87d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; SpinInfo &gt;::transient_const_pointer</type>
      <name>tcSpinfoPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>019cbe940cb8dcb1f8acd64ca6df4af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; TensorSpinInfo &gt;::pointer</type>
      <name>TensorSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>736b9b1d7fe5a41be7262c6977d5f461</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; TensorSpinInfo &gt;::const_pointer</type>
      <name>cTensorSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>7a4d843addd3a2fbc7bc6726d0c1acba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; TensorSpinInfo &gt;::transient_pointer</type>
      <name>tTensorSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>ea4cc4b96f3126d8c7ac6696c2c333c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; TensorSpinInfo &gt;::transient_const_pointer</type>
      <name>tcTensorSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>217102033d179d748c00d1d4e33193db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; VectorSpinInfo &gt;::pointer</type>
      <name>VectorSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>b97d5e91de78ad60ec9cb58d072d536a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; VectorSpinInfo &gt;::const_pointer</type>
      <name>cVectorSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>762bfd1e10dd2d06459c0933d93788a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; VectorSpinInfo &gt;::transient_pointer</type>
      <name>tVectorSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>9c72b762797a2e8b0661dffa36e470c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ptr&lt; VectorSpinInfo &gt;::transient_const_pointer</type>
      <name>tcVectorSpinPtr</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>848bff47b8407224ab1ff156dbc88d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DiracRep</name>
      <anchor>5b05e6acd23f9aa61bc3dd928136a8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HELASDRep</name>
      <anchor>5b05e6acd23f9aa61bc3dd928136a8eef7aa0fc69b6420489aadcd0a34b099bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HaberDRep</name>
      <anchor>5b05e6acd23f9aa61bc3dd928136a8ee6eb0e0b30ccf6e9eb98f70f327688f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultDRep</name>
      <anchor>5b05e6acd23f9aa61bc3dd928136a8ee7867bf83cfa2f67c938c32fe9b56d387</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SpinorType</name>
      <anchor>63fa66c36082393e568951b4badf2df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>u_spinortype</name>
      <anchor>63fa66c36082393e568951b4badf2df1931046419af9a8ca4a8b658ad7f6a213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>v_spinortype</name>
      <anchor>63fa66c36082393e568951b4badf2df1f7c5ec11f72df23c2a8b9f186554b3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>unknown_spinortype</name>
      <anchor>63fa66c36082393e568951b4badf2df17772c5a567ae2ed6fc4d3ae52024b10d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>operator/</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>37334ef69788c9e65342ed3daade2197</anchor>
      <arglist>(const LorentzPolarizationVector &amp;, Complex a)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>operator *</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>fe03505adc590b533ef627daec340c4c</anchor>
      <arglist>(Complex a, const LorentzPolarizationVector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>operator *</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>130bbad33c9a6cdb1171926c0569df52</anchor>
      <arglist>(Complex a, const Lorentz5Momentum &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>boostXOf</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>f26519669a7070ad612aa6af6d0c9dbf</anchor>
      <arglist>(const LorentzPolarizationVector &amp;vec, double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>boostYOf</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>ef26768b4fda049ea667886e05eae863</anchor>
      <arglist>(const LorentzPolarizationVector &amp;vec, double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>boostZOf</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>ba92ca8027423104063a409ff1631005</anchor>
      <arglist>(const LorentzPolarizationVector &amp;vec, double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>boostOf</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>6f46901bb404324fb5eccd79c331e43a</anchor>
      <arglist>(const LorentzPolarizationVector &amp;vec, const Hep3Vector &amp;betaVector)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>boostOf</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>252a201cec042dcfba269e071cd7ff68</anchor>
      <arglist>(const LorentzPolarizationVector &amp;vec, const Hep3Vector &amp;axis, double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor</type>
      <name>operator *</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>f18b62993eca132a25effdbfa5e4bd54</anchor>
      <arglist>(Complex a, const LorentzTensor &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>operator *</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>f9f864ba667a89ecaf1de11cefe84509</anchor>
      <arglist>(const LorentzPolarizationVector &amp;, const LorentzTensor &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>operator *</name>
      <anchorfile>namespaceThePEG_1_1Helicity.html</anchorfile>
      <anchor>d1f4fcb9f8e580e80626ec3595707cc4</anchor>
      <arglist>(const LorentzTensor &amp;, const LorentzPolarizationVector &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::FermionSpinInfo</name>
    <filename>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</filename>
    <base>ThePEG::Helicity::SpinInfo</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>0f9c73e66431b68df0f13b0d0e50c0a7</anchor>
      <arglist>(const LorentzMomentum &amp;, LorentzRotation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>0508018e2fe5f714476dec4d71a75845</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EIPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>9926a2a545c64526fa79085f2540bd68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>517204a56ff215c30fc2e32fcd4a9fbf</anchor>
      <arglist>(unsigned int hel, LorentzSpinor in) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecayState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>442b2463cb23c822b466c6ebd93790c2</anchor>
      <arglist>(unsigned int hel, LorentzSpinor in) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor</type>
      <name>getProductionBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>ba795f9896d8788fc3b892f424ada070</anchor>
      <arglist>(unsigned int hel) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor</type>
      <name>getDecayBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>c7adb770b8787a8df131fd2d3054ed01</anchor>
      <arglist>(unsigned int hel) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>2925c0e2431ca8fd0cb1b23748a0252d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>FermionSpinInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>ca115098023920264a2d93b9546fc9f4</anchor>
      <arglist>(const FermionSpinInfo &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzSpinor &gt;</type>
      <name>_productionstates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>f7b196877faa68ca5d910a40645672bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzSpinor &gt;</type>
      <name>_decaystates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>b738ce0d3b1a2a941539f61a54962fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzSpinor &gt;</type>
      <name>_currentstates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>065ef351cfbbefa19b2f72c4f7e8aaf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_decaycalc</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>b1dff08b2186146713e540e85312ff5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; FermionSpinInfo &gt;</type>
      <name>initFermionSpinInfo</name>
      <anchorfile>classThePEG_1_1Helicity_1_1FermionSpinInfo.html</anchorfile>
      <anchor>d1d7015a95cd9a58f4494ce2a919e822</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::HelicityVertex</name>
    <filename>classThePEG_1_1Helicity_1_1HelicityVertex.html</filename>
    <base>ThePEG::EventInfoBase</base>
    <member kind="typedef">
      <type>vector&lt; tcSpinPtr &gt;</type>
      <name>SpinVector</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>a68e5a46ab0d4c504b3d19c7a3fbda83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>4c7a65e29b039806eb01df973452a54a</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>2cb979f0662f3286108a388000bac5fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SpinVector</type>
      <name>incoming</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>161fc070d46dd481fef8da29d6d7ee6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SpinVector</type>
      <name>outgoing</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>381d05cca084893d32fd67715a5477b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIncoming</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>771400f7145859fe70690455e5785833</anchor>
      <arglist>(tcSpinPtr spin, int &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOutgoing</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>9d5e0c90fbb409ebe5a23545bf921b56</anchor>
      <arglist>(tcSpinPtr spin, int &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetIncoming</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>445081ec4ed21bae86a9db26e6ef6271</anchor>
      <arglist>(tcSpinPtr spin, int loc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetOutgoing</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>ef4e3bfb8dae71b1603ed8f85483a32b</anchor>
      <arglist>(tcSpinPtr spin, int loc)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RhoDMatrix</type>
      <name>getRhoMatrix</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>d5e65d0f4ef2cf4dc1fc910eadac2593</anchor>
      <arglist>(int loc)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RhoDMatrix</type>
      <name>getDMatrix</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>1dffda416f7ea85b1c3d65d1b4d55770</anchor>
      <arglist>(int loc)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>d1b74462b59f2ab0cb64ac77ddf8f22f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>HelicityVertex &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>56bd1fb87f6b3237f84c8631031d21e5</anchor>
      <arglist>(const HelicityVertex &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpinVector</type>
      <name>_incoming</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>c0753b386dc08bafe2ea66480b889da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpinVector</type>
      <name>_outgoing</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>c957cc293758abee265b1019a42e8cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static AbstractNoPIOClassDescription&lt; HelicityVertex &gt;</type>
      <name>initHelicityVertex</name>
      <anchorfile>classThePEG_1_1Helicity_1_1HelicityVertex.html</anchorfile>
      <anchor>41fa99ec2e2afd9b15ce3cff65425094</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::LorentzPolarizationVector</name>
    <filename>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</filename>
    <member kind="function">
      <type>Complex</type>
      <name>x</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>a735cb3f51ae2dcfad7ea3293e32c51e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>y</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>5c9b63613b78337d0823762d433806fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>z</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>28a82dd10dca773165dce51acb888dfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>t</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>0c8fbefac9719d1bccea5eed8cea2a96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>b2e676205ccb9363484e61143ec61f2d</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>a93e3612fe8ea82a507d1fbf7320548d</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZ</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>1c2e720f3e519d03d83f038cff68860f</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setT</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>e25a46f214122c0fe7350dae52c104e6</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>035a0829c5ef20d02d03b0346a668766</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>6faf0930cefd25953e241791c197a0e8</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>cf7a754b9735985a10920b6590f0ea55</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>7c718bf2d87907109bd791ba7d054f09</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>43556313f7e5c8a8474086676c2c5758</anchor>
      <arglist>(const LorentzPolarizationVector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>operator+</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>53f637ea9647d6584b79e59ea814abd3</anchor>
      <arglist>(const LorentzPolarizationVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>operator+=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>bf08ad2dabada8f3f9bf0f259c057411</anchor>
      <arglist>(const LorentzPolarizationVector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>operator-</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>2dac6641ef360732efdf4e6eda5a2a5d</anchor>
      <arglist>(const LorentzPolarizationVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>operator-=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>eda5ed9eb19142a7fd6213e47909196b</anchor>
      <arglist>(const LorentzPolarizationVector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>operator-</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>0921b3a28acdd9b15e343a5dfcbeeee2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>operator *=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>6d08ea94ec9d3e2109a21aa85107d4e5</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>operator/=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>94d7395027974c291b57f0fbfe8887f4</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>dot</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>4ad3e59019e9d38fb9079b526323609e</anchor>
      <arglist>(const LorentzVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>52ab5e9612608b65994067ac90520aa1</anchor>
      <arglist>(const LorentzVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>dot</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>c2e6b24df2256b614476cca2f12d32fd</anchor>
      <arglist>(const LorentzPolarizationVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>b59103ce8996b30c61c537c41bc08e8f</anchor>
      <arglist>(const LorentzPolarizationVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>ee97423e81f1d7ae760a7c142b9a758c</anchor>
      <arglist>(const LorentzPolarizationVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>9d14e8063ce4e101aa1849fd402e85dc</anchor>
      <arglist>(const LorentzPolarizationVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>boostX</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>858edb430ee203eba013901745641bfd</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>boostY</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>445fc08ed09711c63fc8f7f700703a7f</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>boostZ</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>bbbe424bddd8efd0aa1962cc4a8d0453</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>57d7772a61cea02a64881c2810e58bdb</anchor>
      <arglist>(double bx, double by, double bz)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>928810e40a32e0df586acb6dba5bbf28</anchor>
      <arglist>(const Hep3Vector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>770e1e01f3968af7e34849cdee84c76e</anchor>
      <arglist>(const HepLorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>3eed7848153a7711b2bf8a821f7a9691</anchor>
      <arglist>(const Hep3Vector &amp;axis, double beta)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>rotateX</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>dc7a6f1db52ad8acbeacbadff3ec5c36</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>rotateY</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>9f2b77aa947d005cad78612f340b44a0</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>b7a20f0c0c09259c4c0c66e1140cae6f</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>rotateUz</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>ddb2ecbf79c29932eb75216007cc81dc</anchor>
      <arglist>(const Hep3Vector &amp;newUz)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector &amp;</type>
      <name>rotate</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>1d94951d73d29d746847a9602bdad444</anchor>
      <arglist>(double, const Hep3Vector &amp;axis)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>conjugate</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>ab35fda103eae7825bad88c3d6aa68d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Complex</type>
      <name>_vec</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzPolarizationVector.html</anchorfile>
      <anchor>cf3705304e2ed985e0d7b53feb371fcf</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::LorentzRSSpinor</name>
    <filename>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</filename>
    <member kind="function">
      <type>Complex</type>
      <name>generalScalar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>f749d7afc38a419882eb70977a482b4d</anchor>
      <arglist>(LorentzRSSpinorBar &amp;fbar, Complex left, Complex right)</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>generalCurrent</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>69cc20c4d4c740e5c7f800078edfdecb</anchor>
      <arglist>(LorentzSpinorBar &amp;fbar, Complex left, Complex right)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>abd6b1397b582fa1d18b74d0f9f1f4c9</anchor>
      <arglist>(int, int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>154c3d5e6c358ed1d298136201cb7f49</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xs1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>28196a8765f619b2032f8cb584da0fcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xs2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>6af391bfe5d5e9444e9b91d31ffbd9cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xs3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>27a97f3a64f925f8198efcb63dab7cfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xs4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>fa5909acd5b5620d76477e86e3d774e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ys1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>1e4e3ab5bfd8749e049c47776af109d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ys2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>8136fac4362110e31b1ed3dc2a9b3ff0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ys3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>aa1c94689885c79fe6ae5c54e6b8d974</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ys4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>6db195809083c6128e74f4d1d20b6c44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zs1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>fbd40c78589a12d327f9ea31a9703967</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zs2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>a6538042d2d8de20d0de1fef824a5ad2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zs3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>09367af719c2ad23bac974cd2e27aa79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zs4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>bd8071c050ab2021c1e929033bf31659</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ts1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>cd5d9f9d6f88b0dcc091efcf0bff330d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ts2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>43f3852525ce0d122aab36976a796d74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ts3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>5ae628b7a32453cdfd876e437dd417cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ts4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>2bfa2f2cb4c15d795d0ca9e7a2ad6939</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>1ae988e30b5b78f58c5c5189e8fc2bac</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>07ce058b0b75cfffd4fc404ff606c46d</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>4f7717040cc7cc8ac2b41b787f0de557</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>7786728cbe4dc736322e15f9d0344444</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>564ae7fd90c094a7dc9d72e75f355b06</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>a36ed4ff6eaaac2457075a3adbb6851f</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>1c2272d970340ad64ef14aca1f11780c</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>0e57df7350c06fe9ecfcdddecc7bd69c</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>94693cfb42cd801de69d87b5cf1ddae2</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>4be9f59a7a2e9e2350a207189b1c71a7</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>08d190d218944ac4960f063b10bcad59</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>f1dbf980fbe5f570d313f148a6f38e71</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>f7512d67372a7ef9b41a54497c817479</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>9a450ae408601d7147283524f03f2cee</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>e63af56da77b13a6d2aef4ca081eb9bb</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>98e03680d75046765afb9af308540327</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinor &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>5d7ed82adcb6bc033b3d3fc6bb3079c7</anchor>
      <arglist>(const LorentzRSSpinor &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor</type>
      <name>dot</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>9e1c79a4e2e36cce5a37ad1198e623e0</anchor>
      <arglist>(const LorentzPolarizationVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor</type>
      <name>dot</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>547154d62b097da708cdae73dfe75869</anchor>
      <arglist>(const LorentzVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinorBar</type>
      <name>bar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>6a7d021cff4de68b5cbdecbf9292b7ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinor &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>bd0bb37c348c4e6d8064ce636efda09d</anchor>
      <arglist>(double, double, double)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinor &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>e0931f8ac83216edb9b210da37c21dc7</anchor>
      <arglist>(const Hep3Vector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinor &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>e983ae736787090e41933656f0f530fe</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeRep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>5b9d807752b1ab381b404ed074cc6e10</anchor>
      <arglist>(DiracRep)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinor</type>
      <name>transformRep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>ba6db7542dd63ffecc6cf212ac023a4d</anchor>
      <arglist>(DiracRep) const </arglist>
    </member>
    <member kind="function">
      <type>DiracRep</type>
      <name>Rep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>2fde543fd23647cbe4b16764c4490dcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SpinorType</type>
      <name>Type</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>096a0806435b93fea8c5856595079e9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Complex</type>
      <name>_spin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>d4692b7d8bac28818a74dd473a6cba5c</anchor>
      <arglist>[4][4]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DiracRep</type>
      <name>_dirac</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>a02c9634c15b45c949f508623792214a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpinorType</type>
      <name>_type</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinor.html</anchorfile>
      <anchor>4af1d6b9f5d1e4f490c0adeb653666aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::LorentzRSSpinorBar</name>
    <filename>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</filename>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>generalCurrent</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>0947f63b30c5e0b180c75bac994ede6a</anchor>
      <arglist>(LorentzSpinor &amp;f, Complex left, Complex right)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>542aadb4ada6448deeeaadc05673cb1a</anchor>
      <arglist>(int, int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>f0cee3914a6db4c019279361664d8bdf</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xs1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>9fc7daa8ece1744417995ea32b0fa2b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xs2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>e186f23ef94087e90226134697478023</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xs3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>05092bcbe8ab8d8222991608d496ed97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xs4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>4825dee3b9da795f650024f358754e74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ys1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>2fc6aeaae2ce972410eb88d306a59240</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ys2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>6a52d34e2bd473258b0a395b0ceb2856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ys3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>d59198b920d3190f7758ea38d34ad3c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ys4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>64ce10981b9e620bb314d09d23aada9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zs1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>1dcc7e4573f1ac6305dadf7d057a5cf4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zs2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>2b044837367907e2ac451fe16174d97f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zs3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>670c04f5cda816147310721e27d53237</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zs4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>e09dc76c7b00e5fd70bf32c9a85c5157</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ts1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>5d2d2caac2e7a0627c155c4e66f4543c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ts2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>af2f1e2b4c7f4fd150889d1f4790931e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ts3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>1d0e3a240efc58a8ee37107219f43f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ts4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>062a5a5043b08054f9c3ff0b42e66e2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>39983cbc4a8e41498a634fb4d783d4e6</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>57adc8b39abe479c4d2b957e7ae6f8cd</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>c56b0d1ae7a57f229341791cab062f46</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>f615ab988387f3569a05660a6fbffb16</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>6e14754cfb9393872437e0481f4c63d9</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>bd9dcf3f1a2f8b9bb505fca062131631</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>e231157a4cf775de12ab8e69b0fcfa7f</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>1be9f56ace4c4441ad6d946ab06ce775</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>b9fb4a7042b29eaba7ce2c0412ab200d</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>56d93dd7dce11be44955bacee63799c2</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>dcebfd56a91ff03771aeb7e1e0b8e78f</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>b309bfde89320186f8a26cfeadd2f2be</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>f650ce131557cf275b8db5e63ae55afc</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>a5515d8356f84fe679d04aa8e0c2153d</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>21c94c559daf966221a28afc5731e56e</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>9a820f3aa7c16888cd00a2ed2e748a7a</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinorBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>9a034e2d78f3e47b45ca4ed196b8a93d</anchor>
      <arglist>(const LorentzRSSpinorBar &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinorBar</type>
      <name>dot</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>426fe8facb4096e7d322abc996ba9363</anchor>
      <arglist>(const LorentzPolarizationVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinorBar</type>
      <name>dot</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>1cb8689ba33c85b53f0f60893496b949</anchor>
      <arglist>(const LorentzVector &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinor</type>
      <name>bar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>22e6294e842662257b8160b03972eb39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinorBar &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>d144993385a7b11a458c2684ce256653</anchor>
      <arglist>(double, double, double)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinorBar &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>f8de9a4efe1ac9f1a409fbca50d5064f</anchor>
      <arglist>(const Hep3Vector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinorBar &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>3356e3ffcef4523bb99cef2e80a1dd94</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeRep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>7e4a693c5a1e3afe09ea72340b211596</anchor>
      <arglist>(DiracRep)</arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinorBar</type>
      <name>transformRep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>123ad1aadcf5cc5cecd1619736846b2e</anchor>
      <arglist>(DiracRep)</arglist>
    </member>
    <member kind="function">
      <type>DiracRep</type>
      <name>Rep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>753e420ea6693fa156e0b104aed6b3f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SpinorType</type>
      <name>Type</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>9cbf87e9c72a4de937ef38e554851533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Complex</type>
      <name>_spin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>95102589a04f274094dea5ee70dcee38</anchor>
      <arglist>[4][4]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DiracRep</type>
      <name>_dirac</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>deae95eea337e7ff79cc24172c10626f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpinorType</type>
      <name>_type</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzRSSpinorBar.html</anchorfile>
      <anchor>72468fe5c13aaf4d9d59ea12fe6dbbcf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::LorentzSpinor</name>
    <filename>classThePEG_1_1Helicity_1_1LorentzSpinor.html</filename>
    <member kind="function">
      <type>LorentzSpinor &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>8999b4a756410481b14bf0354b1f4baf</anchor>
      <arglist>(const LorentzSpinor &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>df28817b09b62026fa1b81f246af9c2e</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>e84f967c0092a013ef8e9606616bc733</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>4cba75cc9b658845eced96f4093e9dd0</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>fc4524a88706c23cb0b3abc6202017de</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>50756dde3ea39f8ad3b054aa13d7cafe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>4a0fb4ddb6be2178b15ecdc48baa5b41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>3beba45b8dd9b461d2cdb11308540978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>c98c167d2a3e711dc6383619ac6f4150</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>94d3601cb531abd5ce11aa2bbe974c9d</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>ac6c6d911efa87db0a4a819143881572</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>5bb60a18a5ce80067e5ef1bd00cc26b7</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>967af10360757a54561f732e07e962e4</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinorBar</type>
      <name>bar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>fba6e2b095352d8e061c88a67629c9d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor</type>
      <name>conjugate</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>5c8cf436ac5ba04b31e665d9935c27ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>2978f09befe65b7b7f79e908f9072b9d</anchor>
      <arglist>(double, double, double)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>bf3889c6f4a36007e74d00286a057c0f</anchor>
      <arglist>(const Hep3Vector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>e4e97dc7c05787cf19bd1f96c989507f</anchor>
      <arglist>(const SpinHalfLorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>5f6d3fbff6b4038f0690cf3c82902d31</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeRep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>41ab708df74091d0fb6188986fba592f</anchor>
      <arglist>(DiracRep)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor</type>
      <name>transformRep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>2e52bd5ffad26ebd7c1191f614bab162</anchor>
      <arglist>(DiracRep) const </arglist>
    </member>
    <member kind="function">
      <type>const DiracRep</type>
      <name>Rep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>433578a33955808f5b364ca1008f00fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SpinorType</type>
      <name>Type</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>7736cce9a88644d9e89f56c0d727763a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>leftCurrent</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>4c0a7d7db0425a7641ec511a266b500d</anchor>
      <arglist>(const LorentzSpinorBar &amp;fbar) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>rightCurrent</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>751e0b29fc1299c5e31d287177f83d44</anchor>
      <arglist>(const LorentzSpinorBar &amp;fbar) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>vectorCurrent</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>9c387f28b9deaf332fea22d31607abff</anchor>
      <arglist>(const LorentzSpinorBar &amp;fbar) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>generalCurrent</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>d40208550c072a510a1b3cc546628e3b</anchor>
      <arglist>(const LorentzSpinorBar &amp;fbar, Complex left, Complex right) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>leftScalar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>046fef9f8a3d5eac2dfb8da8efb2df53</anchor>
      <arglist>(const LorentzSpinorBar &amp;fbar) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>rightScalar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>d73db33a309542f05d6898989bd09f1e</anchor>
      <arglist>(const LorentzSpinorBar &amp;fbar) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>scalar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>2a9760a05afb7e8a99f82e970e5bc8d2</anchor>
      <arglist>(const LorentzSpinorBar &amp;fbar) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>pseudoScalar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>074149fc6419390112ab3523db0c5f94</anchor>
      <arglist>(const LorentzSpinorBar &amp;fbar) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>generalScalar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>c8a8e9132474e9d5ddc834eb84b4ab8c</anchor>
      <arglist>(const LorentzSpinorBar &amp;fbar, Complex left, Complex right) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Complex</type>
      <name>_spin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>391c7c62e2e5d5ed963e9afa0071c6b4</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DiracRep</type>
      <name>_dirac</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>000df878d74d92156ec761e4323d2e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpinorType</type>
      <name>_type</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinor.html</anchorfile>
      <anchor>7ee70baf8161e149e8d046d4f265a3c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::LorentzSpinorBar</name>
    <filename>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</filename>
    <member kind="function">
      <type>LorentzSpinorBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>77a71503cb6d1ee48742e17122045865</anchor>
      <arglist>(const LorentzSpinorBar &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>7d87982b67771f1c932bf8f933798407</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>eb664ec73c8cc4ca8e74717699350226</anchor>
      <arglist>(int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>548b0580f07dcd06c4a070dd5f8313b2</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator[]</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>f9570a7296cfc1f4a3a3031b30c196f2</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>48a19231a80e56fd8dc367ec5a4a1e97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>53493c383b1d24b456390ae99cdb1a93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>61f88caa952a9e054db6cffd35cef09d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>s4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>a9de9700e584859c747669c8a37758eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS1</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>42e7ed35c04bdb020f4fb9efd8b85dbb</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS2</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>dd7019822e0e36a582570aa2497c9e27</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS3</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>453dbcb064d48e9831b767f81ad82dd7</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS4</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>2368279d90c3511bd7dc3af5ae8e43a0</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinor</type>
      <name>bar</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>58748332cae0bdc0f4ccd6a260c6f798</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinorBar</type>
      <name>conjugate</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>b460e9cdbcc3402e79c398866821bf15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinorBar &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>82e0a0242e9fae9c22cdd128c0e4710c</anchor>
      <arglist>(double, double, double)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinorBar &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>ca6a6666ca4844aec98840875e8322fa</anchor>
      <arglist>(const Hep3Vector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinorBar &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>8918a5dd72225ccc3f431e27ad73a3df</anchor>
      <arglist>(const SpinHalfLorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinorBar &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>45e5ee78611cc01d66857412e97c5b37</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeRep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>610d989195b68ea5e5f3433099318c0d</anchor>
      <arglist>(DiracRep)</arglist>
    </member>
    <member kind="function">
      <type>LorentzSpinorBar</type>
      <name>transformRep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>c710b3443c5c72130de2316adc3394df</anchor>
      <arglist>(DiracRep) const </arglist>
    </member>
    <member kind="function">
      <type>const DiracRep</type>
      <name>Rep</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>090086573021412b5f275345ce983149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SpinorType</type>
      <name>Type</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>60c12ba905f8880d885a1a152817dc12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Complex</type>
      <name>_spin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>972cff8988b0808f80d4e4744f205807</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DiracRep</type>
      <name>_dirac</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>06214c6bef426d02bd4bd6372f015ea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpinorType</type>
      <name>_type</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzSpinorBar.html</anchorfile>
      <anchor>1a343a1d24f6e0dfd668c14932ef539f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::LorentzTensor</name>
    <filename>classThePEG_1_1Helicity_1_1LorentzTensor.html</filename>
    <member kind="function">
      <type>Complex</type>
      <name>xx</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>f626324ebbae5ed18d5f6728c8125a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>yx</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>f00f038487248e93d667be7d8a8cb623</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zx</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>b9aefdf44249e9234ea8733474429cd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>tx</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>38a3f67f5ee489dda57a2c2feb99f08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xy</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>fd8cff139f336bc2e7fe6803266d0c5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>yy</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>74ee74e7ff50b8708292e1762cf6f39c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zy</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>b6d3656536bbe8a62dcbf9625fce2828</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>ty</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>3133848f92563b05dde642326f6ff2ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xz</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>0d26fb94294fdbbbe748d0e62d7b7145</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>yz</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>6d7f6f79f3d61f0998f8152275663ac3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zz</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>1a8930452b91dfd87a21ba79959dbac5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>tz</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>137faea8fe305a01fe9a574f6d9ce71e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>xt</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>de85c47f5b6be887217319f2783791a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>yt</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>1fa8ed6788e066dd5c80d6dd70fbed23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>zt</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>2c75edfe5d3856c8766d08f106cd8290</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>tt</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>5cdad1933a1de17335928be7388635c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXX</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>6250ea947757a1a1586f767bb6d7d1b1</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYX</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>819f5d357e585c0baa61b834f3386030</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZX</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>5cb218b9e0439f8bcc7bffb86482f6b4</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTX</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>39284d6712fcafee377f6716d4cc3ba1</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXY</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>4152bfb3a0e42b41ebca1816bce57234</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYY</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>d82efe35ac3187b83d0245a44f87c56f</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZY</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>188d37dedd8915157f8f2ea767472ef1</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTY</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>f76d1779ec1a1620db1c00aab3c9df68</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXZ</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>41029583ba2f313180e379befaeaf76b</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYZ</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>debfc9e529ff82506a7d4884eecbc24b</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZZ</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>a80d356482ee863f5ee4c9a74cefaa05</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTZ</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>5757621e7d6934e45a786522d251edc4</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXT</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>0aea6ffd2861a782db4a6fc52bda2ac8</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYT</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>21c4e8206adf998a61983e7716ede68c</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZT</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>2ad025125bc7036c2e30657a92f624df</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTT</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>8c9bdb661dd2f745fd61282212de440c</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>23e018f08731f7bb6cc05dfc8cc412c6</anchor>
      <arglist>(int, int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>81210f2f6b3e8077ba5a887fcd44f2dd</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>84acc2f58466b3dfef9bfe0453c50d11</anchor>
      <arglist>(double, double, double)</arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor &amp;</type>
      <name>boost</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>c3945cfa365e6ca30295b9f4bada698f</anchor>
      <arglist>(const Hep3Vector &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>bfb0c8dc9f5a03d7411c8ae0fd714f38</anchor>
      <arglist>(const SpinOneLorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor &amp;</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>a4808213572a3989e6b4a47a93bed260</anchor>
      <arglist>(const LorentzRotation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor</type>
      <name>conjugate</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>4232dd406994d95df29f1c133a8e17d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>04c5bc17059787acb48d782a61d03915</anchor>
      <arglist>(const LorentzTensor &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>4499c8105583ca59117d89ddbd2f7478</anchor>
      <arglist>(const LorentzTensor &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor</type>
      <name>operator *=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>af0681ad348f51bcadd8af662db53a07</anchor>
      <arglist>(Complex)</arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor</type>
      <name>operator+</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>1bcdaf5214cd3076c165870d85c18777</anchor>
      <arglist>(const LorentzTensor &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor</type>
      <name>operator-</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>63ce08243c53c845f9bf1179a2d83d6a</anchor>
      <arglist>(const LorentzTensor &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>trace</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>242a84e83193483f50660a0d5645d7ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Complex</type>
      <name>_tensor</name>
      <anchorfile>classThePEG_1_1Helicity_1_1LorentzTensor.html</anchorfile>
      <anchor>71317d4f5d884a28006d95cfedb6b5f8</anchor>
      <arglist>[4][4]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::RhoDMatrix</name>
    <filename>classThePEG_1_1Helicity_1_1RhoDMatrix.html</filename>
    <member kind="function">
      <type>RhoDMatrix &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>f5590673d9683e2da521d6b2f50323df</anchor>
      <arglist>(const RhoDMatrix &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>ab11fd126c17dfc81ba9d544369aa0c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Complex</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>7a776d4eb90a874bb0ce2e6c83d802fa</anchor>
      <arglist>(unsigned int, unsigned int) const </arglist>
    </member>
    <member kind="function">
      <type>Complex &amp;</type>
      <name>operator()</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>f280fb9c522901b0f27b62fbb7f1ac58</anchor>
      <arglist>(unsigned int, unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>average</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>ac451b205123e22bc5c229093b818892</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zero</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>5a85e70bce7f708711fdeb281db3e56f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>9ddbe4c885313f8a8d44495c3f5abdf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PDT::Spin</type>
      <name>iSpin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>854224c8ed52a80f09328970733eba02</anchor>
      <arglist>(PDT::Spin)</arglist>
    </member>
    <member kind="function">
      <type>PDT::Spin</type>
      <name>iSpin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>dc9dd05c2da137f7a58b8385179b1705</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Spin</type>
      <name>_spin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>3b9e390e5f64dc7d67d26c910a506f27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>_ispin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>fa69e3ef41f1db6d20e3bec2ff09e93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Complex</type>
      <name>_matrix</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RhoDMatrix.html</anchorfile>
      <anchor>b761d30f9fa14ed0d3f0f88967f49765</anchor>
      <arglist>[5][5]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::RSFermionSpinInfo</name>
    <filename>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</filename>
    <base>ThePEG::Helicity::SpinInfo</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>82f2214e625ec01217f59417565b30b6</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EIPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>9c87c6f723492bb0234012e9dbe31858</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>01ac3f714edd41a0e61dd7a8292be0db</anchor>
      <arglist>(unsigned int hel, LorentzRSSpinor in) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecayState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>442b2cf295197257df3bb8da794064fb</anchor>
      <arglist>(unsigned int hel, LorentzRSSpinor in) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinor</type>
      <name>getProductionBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>d3c162db08c846763fd7461b4a886fb5</anchor>
      <arglist>(unsigned int hel) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzRSSpinor</type>
      <name>getDecayBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>00f47ce82d04451c01c49738ba868b66</anchor>
      <arglist>(unsigned int hel) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>32ef35287198dde020c0bdaded7b7170</anchor>
      <arglist>(const LorentzMomentum &amp;, LorentzRotation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>6e60905bf0e82beda4389e045070e6bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RSFermionSpinInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>0ad3d16028e0a00628dd7fc3ebcaa76c</anchor>
      <arglist>(const RSFermionSpinInfo &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzRSSpinor &gt;</type>
      <name>_productionstates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>5c9ef09cc39b4b51aef670e1830916ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzRSSpinor &gt;</type>
      <name>_decaystates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>e10ad168b277c59c7ace428c64f45871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzRSSpinor &gt;</type>
      <name>_currentstates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>c1eb6cc93357fcda9bcae0c8e7ea48d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_decaycalc</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>95b06080da6b40ddf5ccf6454c2bbc5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; RSFermionSpinInfo &gt;</type>
      <name>initRSFermionSpinInfo</name>
      <anchorfile>classThePEG_1_1Helicity_1_1RSFermionSpinInfo.html</anchorfile>
      <anchor>5610043eb19fc1271fac7ccb27f2e9ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::ScalarSpinInfo</name>
    <filename>classThePEG_1_1Helicity_1_1ScalarSpinInfo.html</filename>
    <base>ThePEG::Helicity::SpinInfo</base>
    <member kind="function" virtualness="virtual">
      <type>virtual EIPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Helicity_1_1ScalarSpinInfo.html</anchorfile>
      <anchor>580a3a53e9289b2e19dd80493505ab65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Helicity_1_1ScalarSpinInfo.html</anchorfile>
      <anchor>021976104643194e8523f879605c9983</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1ScalarSpinInfo.html</anchorfile>
      <anchor>8ec48ab4120a4de0739e64b02e1dabcc</anchor>
      <arglist>(const LorentzMomentum &amp;, LorentzRotation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Helicity_1_1ScalarSpinInfo.html</anchorfile>
      <anchor>5a63909dd66a763aa56b6507e97ec667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ScalarSpinInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1ScalarSpinInfo.html</anchorfile>
      <anchor>6dcebcd4cab4748be3cbc3460b5b5580</anchor>
      <arglist>(const ScalarSpinInfo &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; ScalarSpinInfo &gt;</type>
      <name>initScalarSpinInfo</name>
      <anchorfile>classThePEG_1_1Helicity_1_1ScalarSpinInfo.html</anchorfile>
      <anchor>4c7898f08a6083eb7a6fd83e37ede047</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::SpinInfo</name>
    <filename>classThePEG_1_1Helicity_1_1SpinInfo.html</filename>
    <base>ThePEG::SpinBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>ce1f9b50beff1785fcc1d86d39ca65ee</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EIPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>656ba970a40aa7a40a4e15cc2eec5066</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>c0ad76831286ee40deeec493776cd14e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>9dae90e53ef05e44285d8acb79fca231</anchor>
      <arglist>(const LorentzMomentum &amp;, LorentzRotation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProductionVertex</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>19e3c2c0725deefe8654339d08edd71d</anchor>
      <arglist>(VertexPtr) const </arglist>
    </member>
    <member kind="function">
      <type>tcVertexPtr</type>
      <name>getProductionVertex</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>7a8f3ac844201978cb0910efac676ed9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecayVertex</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>e0aa636548887f4febbf49e72b745562</anchor>
      <arglist>(VertexPtr) const </arglist>
    </member>
    <member kind="function">
      <type>tcVertexPtr</type>
      <name>getDecayVertex</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>5617c900a2d8328fdad5b1a86229f745</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decayed</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>13414409a867915e215079edf99d56c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decayed</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>f8aa506ee1465fdcb549f98560118b2a</anchor>
      <arglist>(bool) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>developed</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>d0d727355b53fb5ddbd74133e6f524fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decay</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>8179c7031627af8e2f066e150813ac59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>develop</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>45a7fd6fe51468a98085cd09d9774d14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeveloped</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>06e199cbd2f2c45848355b2533f64923</anchor>
      <arglist>(bool) const </arglist>
    </member>
    <member kind="function">
      <type>PDT::Spin</type>
      <name>iSpin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>5a951a5564137d67e12e4a54aaffb112</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Particle</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>87f1d5918a6c92fa3dd837a5090ec8e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Lorentz5Momentum &amp;</type>
      <name>productionMomentum</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>d5f30b016163a5691dc1619c381901cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Lorentz5Momentum &amp;</type>
      <name>currentMomentum</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>19a2853475fa6370ef1aa98023f5bfb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>timelike</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>078e9192245454f103ba96bb260eb831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RhoDMatrix</type>
      <name>rhoMatrix</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>3cba0380f90c70f6158f653bb66368a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RhoDMatrix &amp;</type>
      <name>rhoMatrix</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>32f71f5ac502f1130339eed19a01f0d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RhoDMatrix</type>
      <name>DMatrix</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>678170d93679e4cd4f416c09ee203e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RhoDMatrix &amp;</type>
      <name>DMatrix</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>89d68836fec51a53a0c646d9e125c9d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>8788ed48b2195a0916de02336e7e0943</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PDT::Spin</type>
      <name>iSpin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>826bbf6a04db275002f2254706de47e8</anchor>
      <arglist>(PDT::Spin)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setProductionMomentum</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>ba59eac6590b74637fa111d762cc7299</anchor>
      <arglist>(const Lorentz5Momentum &amp;in)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setTimelike</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>8e35fe401a8ca2140a1b2c0bb7849efb</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isNear</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>ddcd6a2aa990e86cd1c22f53241eea65</anchor>
      <arglist>(const Lorentz5Momentum &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SpinInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>e38815ec0e064952d74e7492b7cfa67d</anchor>
      <arglist>(const SpinInfo &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VertexPtr</type>
      <name>_production</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>84331b76ff5033b5ea8812d89659810c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VertexPtr</type>
      <name>_decay</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>9585864415bd5530d2bf61877b7429cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_timelike</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>1df523768a8bd59c862dffd31b8f8498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>_prodloc</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>2c70a962908c2039966a963c235469b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>_decayloc</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>cc225a6a29fef75e44a31b76ec16db43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_decayed</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>42e6d39774852d5f788f0779816b48dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_developed</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>a674e43b18cb6ccb50f2ace2705d142b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RhoDMatrix</type>
      <name>_rhomatrix</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>40482d89dd4630ef958f9844ed1bcbec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RhoDMatrix</type>
      <name>_Dmatrix</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>f22723cde26b73f57816442394b6cc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDT::Spin</type>
      <name>_spin</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>8345e866aeae3a5e2da062df8462b9d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Lorentz5Momentum</type>
      <name>_productionmomentum</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>5dbe4ee97e58d26ddd3bb2e0b29e3559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Lorentz5Momentum</type>
      <name>_decaymomentum</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>98100cf8998ac2cd92adfff1d3587963</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Lorentz5Momentum</type>
      <name>_currentmomentum</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>2f275b9ec4e4216daa1c5b911e80f6b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; SpinInfo &gt;</type>
      <name>initSpinInfo</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>2c8a63c05615aea4e51b216d194c353b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const Energy</type>
      <name>_eps</name>
      <anchorfile>classThePEG_1_1Helicity_1_1SpinInfo.html</anchorfile>
      <anchor>613fb68ed08dfb3e6ca04167c620e90b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::TensorSpinInfo</name>
    <filename>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</filename>
    <base>ThePEG::Helicity::SpinInfo</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>0098c6ac812d6c05197fd04910b6fced</anchor>
      <arglist>(const LorentzMomentum &amp;, LorentzRotation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>fcffec4f5dd0caaf6babf63a73bd05d5</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EIPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>fe733d06046a377321914732147daad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>726ff64981e32e42ec3e95f0c4c52026</anchor>
      <arglist>(unsigned int hel, LorentzTensor in) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecayState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>b85e2ec4d162029d6ceaa2f5d5873e35</anchor>
      <arglist>(unsigned int hel, LorentzTensor in) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor</type>
      <name>getProductionBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>7cb893bf6d4aa3231ea5b4658c2c3c99</anchor>
      <arglist>(unsigned int hel) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzTensor</type>
      <name>getDecayBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>06386b3d7e70aa3cf8d12aafa24844c5</anchor>
      <arglist>(unsigned int hel) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>fa4679d48fed0f15a823bfcedef28e49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>TensorSpinInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>99445652143ce401f3563f31e37d26be</anchor>
      <arglist>(const TensorSpinInfo &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzTensor &gt;</type>
      <name>_productionstates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>84ca2f7f3192510effc64bed72230c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzTensor &gt;</type>
      <name>_decaystates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>7a347640fe4c295254847258043e2ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzTensor &gt;</type>
      <name>_currentstates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>0074dd3ca20e3103a567605e9358966f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_decaycalc</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>ab278219acdaa21a480a310acc4751f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; TensorSpinInfo &gt;</type>
      <name>initTensorSpinInfo</name>
      <anchorfile>classThePEG_1_1Helicity_1_1TensorSpinInfo.html</anchorfile>
      <anchor>718a3e2835d306e9681109d48afabf82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Helicity::VectorSpinInfo</name>
    <filename>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</filename>
    <base>ThePEG::Helicity::SpinInfo</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>f66ea7397771400dc8549ba506ca13c0</anchor>
      <arglist>(const LorentzMomentum &amp;, LorentzRotation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rebind</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>52ff5dceedd14dc9de2dfd170fe58b46</anchor>
      <arglist>(const EventTranslationMap &amp;trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EIPtr</type>
      <name>clone</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>69dc4ef57291c87a64d093f181fc6970</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>ab01d20d9178dfaa74c892ccaf017c95</anchor>
      <arglist>(unsigned int hel, LorentzPolarizationVector in) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecayState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>2e60f8fdbfabf0708f624bcfd965a008</anchor>
      <arglist>(unsigned int hel, LorentzPolarizationVector in) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>getProductionBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>0b914d8f49c29c2330bbb549eacaf8ef</anchor>
      <arglist>(unsigned int hel) const </arglist>
    </member>
    <member kind="function">
      <type>LorentzPolarizationVector</type>
      <name>getDecayBasisState</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>110bd504816151efb9389c7df1a4e0c6</anchor>
      <arglist>(unsigned int hel) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Init</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>f838d68cb371894f9f875310e677b8a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>VectorSpinInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>4a94dab2eb4b6066870cc47922592e7d</anchor>
      <arglist>(const VectorSpinInfo &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzPolarizationVector &gt;</type>
      <name>_productionstates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>9bca793adebae056bcfd33ce3fe95e2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzPolarizationVector &gt;</type>
      <name>_decaystates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>b12527fea768e1f5ae9985901315f86c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; LorentzPolarizationVector &gt;</type>
      <name>_currentstates</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>a02222d6e5d84325d4d1bcc648352d81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_decaycalc</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>0f0ce9b37b34f0cb0a4472c2ca8792c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static NoPIOClassDescription&lt; VectorSpinInfo &gt;</type>
      <name>initVectorSpinInfo</name>
      <anchorfile>classThePEG_1_1Helicity_1_1VectorSpinInfo.html</anchorfile>
      <anchor>d7103e212aa3104a744225ee1aa9cea6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG::Interface</name>
    <filename>namespaceThePEG_1_1Interface.html</filename>
    <member kind="enumeration">
      <name>DepSafe</name>
      <anchor>0e0bfdef1e32ebbc85f9132de7e20f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>unsafe</name>
      <anchor>0e0bfdef1e32ebbc85f9132de7e20f9406bed597328fba1f6267353b41f89ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>safe</name>
      <anchor>0e0bfdef1e32ebbc85f9132de7e20f94d4bbd189b3ff80fa6152d46cc1496c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ReadOnly</name>
      <anchor>a7bb00d7f1c2d903eda647b3dd170a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>readwrite</name>
      <anchor>a7bb00d7f1c2d903eda647b3dd170a59de65ff355a4a0ca7b401ecb491983686</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>readonly</name>
      <anchor>a7bb00d7f1c2d903eda647b3dd170a5943b587878e47d95f0f4cd648fdf965a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Limits</name>
      <anchor>bff05b2fe824e4d7062710a5efc07bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nolimits</name>
      <anchor>bff05b2fe824e4d7062710a5efc07bc8680b6c79b7e405fb40028a0dd2dda67f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>limited</name>
      <anchor>bff05b2fe824e4d7062710a5efc07bc8e677fe7a009c7c88ed585d8ef7e33abc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>upperlim</name>
      <anchor>bff05b2fe824e4d7062710a5efc07bc82f10b19af4e0e9ffa597c45ae2ec0b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lowerlim</name>
      <anchor>bff05b2fe824e4d7062710a5efc07bc8996f975785b49f0101cd772066d69c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Rebind</name>
      <anchor>b1e7833608e944c9ffe4d0a2c1534252</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>norebind</name>
      <anchor>b1e7833608e944c9ffe4d0a2c1534252cb036f03833fd1baa2ded5d0fb4a8a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rebind</name>
      <anchor>b1e7833608e944c9ffe4d0a2c1534252bca236fb10c0b9999dfa7c8e3e118ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Nullable</name>
      <anchor>c3e35d7c06edffb0701ea16568d7830c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nonull</name>
      <anchor>c3e35d7c06edffb0701ea16568d7830ccd6f8758ff0b50204fd74c59124870f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nullok</name>
      <anchor>c3e35d7c06edffb0701ea16568d7830c613aa33677237912e48ac9dc9f57fe47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>NullDefault</name>
      <anchor>50744db6f4e7df24d829f920c2b80b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nodefnull</name>
      <anchor>50744db6f4e7df24d829f920c2b80b8ddae2632d6f96a49ce117f7a717c6e7b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defnull</name>
      <anchor>50744db6f4e7df24d829f920c2b80b8d1996f9afcfd382a4020e45b288d3dcad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG::Math</name>
    <filename>namespaceThePEG_1_1Math.html</filename>
    <class kind="struct">ThePEG::Math::MathType</class>
    <class kind="struct">ThePEG::Math::Power</class>
    <namespace>ThePEG::Math::Functions</namespace>
    <member kind="function">
      <type>double</type>
      <name>gamma</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>bdf7619ec0415743677121faf7417edf</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lngamma</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>800a84f2e8bbbc157184ab7f7496e833</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>exp1m</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>0dd5711bce79cb96544e128718ff843e</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>log1m</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>f49904a26120d05ec6a9f700b707cd2c</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>powi</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>1a7451a4347a34363f4aa3ccc12aed1b</anchor>
      <arglist>(double x, int p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pIntegrate</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>7259cfb71fc0d386d2ac6f9efbdee14c</anchor>
      <arglist>(double p, double xl, double xu)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pIntegrate</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>b2d7b5e0e2b37c6eb2870634e34fb3d9</anchor>
      <arglist>(int p, double xl, double xu)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pXIntegrate</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>9f949fc41e3c97b29aace84e6fce3645</anchor>
      <arglist>(double e, double xl, double dx)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pGenerate</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>2829de732f666fe97605e974f3cab702</anchor>
      <arglist>(double p, double xl, double xu, double rnd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pGenerate</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>248ec4807ae38c153e82911521b6d761</anchor>
      <arglist>(int p, double xl, double xu, double rnd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pXGenerate</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>4e7034b13055334ecff2e7476bb8557d</anchor>
      <arglist>(double e, double xl, double xu, double rnd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>relativeError</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>2fba611a4670f9c01d1514782beff12d</anchor>
      <arglist>(FloatType x, FloatType y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>absmin</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>b52f2b8163ba3bc2d4b18d7652185ff4</anchor>
      <arglist>(const T &amp;x, const T &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>absmax</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>b85eb386633772ed6e02d6a0ba6f10c1</anchor>
      <arglist>(const T &amp;x, const T &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sign</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>e6865726d79fd14bba4057e3f525eebc</anchor>
      <arglist>(T x, U y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pow</name>
      <anchorfile>namespaceThePEG_1_1Math.html</anchorfile>
      <anchor>6ade1b5f23b1db81f86a65d412e22fc4</anchor>
      <arglist>(double x)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Math::MathType</name>
    <filename>structThePEG_1_1Math_1_1MathType.html</filename>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Math::Power</name>
    <filename>structThePEG_1_1Math_1_1Power.html</filename>
    <templarg>N</templarg>
    <templarg>Inv</templarg>
    <base>ThePEG::Math::MathType</base>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>pow</name>
      <anchorfile>structThePEG_1_1Math_1_1Power.html</anchorfile>
      <anchor>8df35e0404f5e5399a841689c3d84380</anchor>
      <arglist>(double x)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG::Math::Functions</name>
    <filename>namespaceThePEG_1_1Math_1_1Functions.html</filename>
    <class kind="struct">ThePEG::Math::Functions::PowX</class>
    <class kind="struct">ThePEG::Math::Functions::Pow1mX</class>
    <class kind="struct">ThePEG::Math::Functions::InvX1mX</class>
    <class kind="struct">ThePEG::Math::Functions::ExpX</class>
    <class kind="struct">ThePEG::Math::Functions::FracPowX</class>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Math::Functions::PowX</name>
    <filename>structThePEG_1_1Math_1_1Functions_1_1PowX.html</filename>
    <templarg>N</templarg>
    <base>ThePEG::Math::MathType</base>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>primitive</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1PowX.html</anchorfile>
      <anchor>69ac5f252a583f8434692d1e1a0c648d</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>integrate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1PowX.html</anchorfile>
      <anchor>39122a5abad580b16ab91724265c115c</anchor>
      <arglist>(double x0, double x1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>generate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1PowX.html</anchorfile>
      <anchor>b840e18b96472adfd8a6c26400b26e08</anchor>
      <arglist>(double x0, double x1, double R)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Math::Functions::Pow1mX</name>
    <filename>structThePEG_1_1Math_1_1Functions_1_1Pow1mX.html</filename>
    <templarg>N</templarg>
    <base>ThePEG::Math::MathType</base>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>primitive</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1Pow1mX.html</anchorfile>
      <anchor>0464853b0ca8e8729fa095fd8a95f079</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>integrate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1Pow1mX.html</anchorfile>
      <anchor>bfddab53c6a551c344764c9f052f1534</anchor>
      <arglist>(double x0, double x1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>generate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1Pow1mX.html</anchorfile>
      <anchor>094fbdadb5fc91c0a15deb8686b1426f</anchor>
      <arglist>(double x0, double x1, double R)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Math::Functions::InvX1mX</name>
    <filename>structThePEG_1_1Math_1_1Functions_1_1InvX1mX.html</filename>
    <base>ThePEG::Math::MathType</base>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>primitive</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1InvX1mX.html</anchorfile>
      <anchor>7900cf0b84dd794ce2d115b42fb38c06</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>integrate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1InvX1mX.html</anchorfile>
      <anchor>15809d1ead604aa65f4e0a75c01f04fd</anchor>
      <arglist>(double x0, double x1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>generate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1InvX1mX.html</anchorfile>
      <anchor>1ab0f75e796eff00b5dd6d3bf4951517</anchor>
      <arglist>(double x0, double x1, double R)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Math::Functions::ExpX</name>
    <filename>structThePEG_1_1Math_1_1Functions_1_1ExpX.html</filename>
    <base>ThePEG::Math::MathType</base>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>primitive</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1ExpX.html</anchorfile>
      <anchor>470744db13cdab21efc4b9b52fa6993e</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>integrate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1ExpX.html</anchorfile>
      <anchor>2fdc6977ddc0035c01d87fc530c3aa62</anchor>
      <arglist>(double x0, double x1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>generate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1ExpX.html</anchorfile>
      <anchor>fbc90419db68b08792f2bf3fc245bdef</anchor>
      <arglist>(double x0, double x1, double R)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Math::Functions::FracPowX</name>
    <filename>structThePEG_1_1Math_1_1Functions_1_1FracPowX.html</filename>
    <templarg>N</templarg>
    <templarg>D</templarg>
    <base>ThePEG::Math::MathType</base>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>primitive</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1FracPowX.html</anchorfile>
      <anchor>b1a30ee42e8e8b5ce04e04fc60fdcac2</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>integrate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1FracPowX.html</anchorfile>
      <anchor>24b7dab0adb9b1a1c14cef47bdd042d0</anchor>
      <arglist>(double x0, double x1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>generate</name>
      <anchorfile>structThePEG_1_1Math_1_1Functions_1_1FracPowX.html</anchorfile>
      <anchor>faffa8ee40b955c694a88e65b27d1833</anchor>
      <arglist>(double x0, double x1, double R)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG::ParticleID</name>
    <filename>namespaceThePEG_1_1ParticleID.html</filename>
    <member kind="enumeration">
      <name>ParticleCodes</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>d</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed6470f7b17c33ec8f2401cbce440b75d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1479113c563969f93baf3dc22cd4ffcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>u</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae78bd878b0ea336bf63e11b1a8483433c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ubar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae46a8d7e50fd6038a8700e57f3c0c2821</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>s</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7aaba568e8cb261eb5ed016effc1b84d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae87ce9dcf29af1ac4dd53c9984b69dfb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>c</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea0707640a6f546fed43e0f355a68f289</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec243586870ade8be1bc16bb051aeb5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>b</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5471774405f5aecf023ec28f1fd99c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee718683ecf4d649f37a6950671e25951</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>t</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae65bf599aafeeec1f6899ca107fa31e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>tbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baefaad1e445cdc0e41281ed1c49cc0024c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bprime</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae631678b4eae1eb486702a1b58c5d0481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bprimebar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2854877156368883287726fe003449b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>tprime</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae52d43643dcde6482ff4eb955ac503351</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>tprimebar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baedafd0f6f4fd026e1079d8abd25ac8a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baedcd9964dd78e6f55b25d1f61232dc545</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea7ccf91d3066606d66952f2b53c6bee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nu_e</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1b58aa4cbb4253e8d2ca7375ea628ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nu_ebar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea5d5141749181be79bc97ea0720995b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1f1aeccf70390a421235833c28dc68ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baefb4367e9c3f60b485659245c01e4ab70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nu_mu</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea84c7eaee72306a293b7c2245a00c096</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nu_mubar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae344e34d2cc1683f71bcffb8ae40c06c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>tauminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae530b63c2aa3048ddb4d1b691755549f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>tauplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeabe8efe0df841f862cf51261b0b14134</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nu_tau</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeda9e303965a6a249e43c0c3eeb59dc0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nu_taubar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4247da18622d5601ba97cfa2e0e1c871</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>tauprimeminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0549464c3b26e8ee20830f916aaefd94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>tauprimeplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0cc4c582dfbacb62d93de4581b617bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nuprime_tau</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5cc3cae97a375e39514119fc8ecbd543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nuprime_taubar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed6756e58982753278c197a791d599f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>g</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee093635285049c1103b93393defb5c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gamma</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae46e8c510e12dd63c2e610a0d77471b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae24dea1adb6c69a46465412a723fe501e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Wplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb481d777a81b575f996d655f64643203</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Wminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2d22c8c88e0f478321ef34afad82d8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>h0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5d2bb2f73fda60a7e5a6840a9f776c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Zprime0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9669fb8b14e01e71c9d68712191b7140</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Zbis0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baebcf550eaf71d61301ba7d367234ce79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Wprimeplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9d502ac497b0b8ddfb6d5d7c3fa423df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Wprimeminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae54882ca0e8dccf6ac5106818258ae235</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>H0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baead51e58ba38488b9247b7399ab4909ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeaa633105e0c1c571bd6345664138df85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Hplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb10b11c65cb3220d62363aa6541db737</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Hminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae084aba9f21d8f778db73943a02ebd5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Graviton</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae95b6ccc2ede684a839bbf2b65cfc326c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>R0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae259d7924645b562372dfbee55db29d27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed24dba3856bc8def101e201525d13c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LQ_ue</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae253c294e2fcfcf2c2ce263699564ca8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LQ_uebar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea5b1c970cb0edacd2fcc468cc69e82bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>reggeon</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae516862cfc271ccbc1da5cd523cc2572a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pi0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec0186f5110ada7cc9bb19a50b801e93d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rho0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2fb2f8d98bea04e301f93e7c6b68720b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>a_20</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8815c0fe92798e89a99b4afcb391780e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>K_L0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4ad1bbdab722a26f28a8b2f61e0a5221</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>piplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb3956db838e68009dcbdf514642bbda1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>piminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baecc923326a1504ce06f1a46fa447c462d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rhoplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed73bd7a7a860749aa482b05bbb3b12ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rhominus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0c63d0f384b622e06c2c074705c8c45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>a_2plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee48c2c838f2ea074af6ed748ee73fd59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>a_2minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeee5aa445985e1ee5960ce2ec90977794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eta</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baead7557ec8ef872241169ba45cf8bf464</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>omega</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeabbc6ee0c361e36b701fb997fc6bfb75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>f_2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb6f32c5522e6d720782f02ba79362943</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>K_S0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed6fa9603d319d3819b68cf7cda13a078</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>K0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baecb48fb691582d9ab1a03193728b1b214</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baede2d893a18e3afd1803aa608d8cf7994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef5389c6714264282ba3b29454ecaf78d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstarbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb13b5dac33d0c9b4e59ddf1a75f42c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_20</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3e2aef4afe5c636b95be688a2c29edf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_2bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee05d3b650dbf706d9a790a500aa296e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae87b3ffb888b027f23ac5d9759733bde5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0ebae67e2fbb9788564c7430b987e463</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8b4812dd3de0a2da86a5ffe6bb5269f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae30e216d05d4b5c4282ce509cd24610e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_2plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae52875cbe10358c9e17312b9b04d0db1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_2minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec6185883e56f0d009544bc824e6529a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>etaprime</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8c3e6b75842c86d450449b46e9ce29c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>phi</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeebb9f647cfbfe0617fba17da37b94991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fprime_2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae92dcf445232ec2a44fa6737f32fac152</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea428a30f75403f8e01f7801362dedd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9e3c0f2856ef6cd80ea4b304ab63c060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeeccce2ea2e01748317e231fe8aba7020</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec5e0564855550d9358289252451477ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_2plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4f384c64051a9a578989306597351c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_2minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed71cd36a4f7f7ec488cdf6df59db1403</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeac04442bf9d57cd8a4eed3582e09ae0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baedd080d29c2f6cf4f5b2788ca84a22d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0f3f31e7077dd8b98ccd9fd737bd6ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstarbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeda3f572be9e5da5e5de45a6ba168c0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_20</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb5e081138afc1dcbd5ceeea8b8ba0484</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_2bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea9968a293d3523bc10761531bbf6c1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_splus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec43fc6b43b17cb8588919134c920bb21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_sminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae59de78a1b3ead8a6466d626ed316f1cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_splus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae21d1aa634455d00538b76366a1aef110</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_sminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7a3d56a46bfe01adda6d2808b1dfa3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_2splus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed8bbfb692f09ba1205a8d2b81ed752d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_2sminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5a3e8cb57519df92d9aae9c56b7b5d27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eta_c</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae62bf94bc6d0d6344acde55a8934a0763</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Jpsi</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeebe132846d8149795c4ffa76a68f5fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chi_2c</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9c81efd74ddabd39309fbe20ca8b0ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec239fff1ddacdcdea034bcdbb1fbcdff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeef647001d22eeb13369b34d7a3872000</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7490bec435b583f41b522a46ec2aca3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstarbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baedda9e9681b856c9499ee6140d5eeb431</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_20</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae03de141fbf35b48d45863b04b60e15d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_2bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7408efaf11546ac72dff3ce87d543290</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee9d230223f5065a3a5ec5881fb500ab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea85d74777238f330ed27305f11275b24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9c50ef99462fe0a73548562c20e43880</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae191323a6b28a51335376ec433dd55f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_2plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6f3c2d76603d0169f3ca6dfb0797fd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_2minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb3938b379e110be18e024501f3b93f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_s0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae87a93b28f063dc44374aaaac6b59594a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_sbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec34c83486ee8ad4eacbbd6cf6ee7774b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_s0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae33f4e0535797344dc4d177702b63ac32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_sbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae61f12dcc709178829ff2d99357667078</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_2s0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3f402d7d8384afa00dcb0f1e923fdc9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_2sbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae233e13d8214b127f79c056657ee612de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae34df458e542ca915d7e0c3c1d41cd600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_cminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef9d7adc996e3a7b0bd717f4e6c2cb9bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0159229f4798fb490d24e8d8dd1ad25c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_cminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0ac4de12dbaa12123a1b168bd87a69f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_2cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae32fb3bd5d340afcada08b7ef00edeb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_2cminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeba77c5c4528a70f59547c35e866dc5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eta_b</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae58368b047c8e3604a585b91f12c0905c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Upsilon</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae38ea763f26d50a1ea4fc0730858fd7a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chi_2b</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae683e32a6b4ab083d3b0deb1dd77bb11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pomeron</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7496bab953fd4f32cad3220174a51723</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dd_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeabc2461d4566e7ddf30315ccbb4b095d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dd_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee00c9453de68d1667a4172f00aa20467</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deltaminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb16002c4c2ba99fa492850ce6bbb82cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deltabarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9984d2e02c9e8aa094457281beab0270</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ud_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea2b181cf5d576888646685ac763d41bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ud_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb363f1c98026de7bad6c26c8b14504e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ud_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae01febae194d25d019f585e382007193c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ud_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae92a56c339827defb0c9b04c8d29457db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>n0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae87bd1a2bb3221d767c72fbcd095c5d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeee5b2d5a61198b60c1785bb8abfeb27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Delta0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae71a60ca05f32c44e18ca2554c3907fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deltabar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef41fc3144b4611112694e6ca31582af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>uu_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9b3116823c88f9b9357ad5e65e79a5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>uu_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7ea15fa7b1df47538dd2db97354ccb31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae752802432816d11b7fa341f040ee263d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2f74c9859197e7ec77e4bfb42c50e392</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deltaplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea810b0a09cd44c7cdfc4e27f38d0ef65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deltabarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae69e42309d7cb65376375fcb501eaaa0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deltaplus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae09df86eadb4c1e069a682d3580a39ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deltabarminus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6bf6aede54b91173b699ba3adf52abc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sd_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae75f330d3c656a40cc3ebabd2d0fa1945</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sd_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae62f1106e884733adbf4f6705d49dc1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sd_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae64becf6d94cd61b5a2d0b9018d27df5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sd_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae511156a526daab2daf87ed8fec84458b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmaminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec0fa27363c0d11cdb017c69f89511aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmabarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae824ae770ba1e8e5672276428a40ebd48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae168e5678f8bb68f65550ab4caac51b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastarbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae93979eccfcdf009b187dc7adb95921b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lambda0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4761dca276a84d8755923bb48b1c6e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lambdabar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae83874a92993c0cebb63cb0db07638f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>su_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec88ddf00664a7124674c40b500535f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>su_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae31993dab8ebe7ff4299ffd4249dcbecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>su_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee0ef634d116a0fe805f1ad15b4cdc191</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>su_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae68196992546597b1c3fa21bb606344e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae52564ba2f760ce9850902ac06deb5650</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmabar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed4a86356774d8ecb81e774e249f9bdf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed64e6408dd8465568323f4c072bb04dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastarbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baecdde1561fb9e69d9129de903afd3b182</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmaplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8d45e9410f48c1a25c1315a9f7920be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmabarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeeaa28f549b2b40ca05242b844b064f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5c4cbbaea0aad942ad2da42a8db3ed43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastarbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8201d3f0d135c0b34fc528cbfa91b29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ss_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae993134cf3de2efda679159922cc3e5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ss_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7edce1f3818d0fb57497d48c3e7f5af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ximinus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec14f73dd512748d841a1286bf69bb80c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xibarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae96848496382bc434abc5121b9f914963</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3a61c2016d422a10c45127218ff0b37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistarbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec20619f0a071136c552a37d0bd9a3b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0a5b836ace6c5beb454c4f0d2ccaf9e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xibar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef66a440afd1f0b3f4de0ed574f53e450</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeba12d5e6b97d8099c3b450c71aa8f0ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistarbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baefc98e96a3cb7a21e9c4f01deaba4fd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegaminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0cf227c2ed60f848f6bfd045a1bd36bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegabarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb49245c7461c4c96f1ebee556acfc34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cd_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1a4f7cc799b3cd9c86e08f8ba7411880</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cd_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3a7b48d2469c050114645c86ff4cca12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cd_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0538f819e651176c6b58f027b4d1de12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cd_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae764f4e2720335fbc561d2fd3e7a18b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_c0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae554d216dccd8f44e34f59d48a9034b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_cbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef6854aed458e0293a5513da4c613257c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_c0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8c86f4bb477f06ddc2d98935d8785dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_cbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec03c342e62db4e986978d83df89c2c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lambda_cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7cb0e672d4306b2a107a3f0fa7cb65a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lambda_cbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baefa4a8326e023307a9f43dc100cdc76ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_c0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1479494f2fae1189ea36db9cd0a6f6e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_cbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee3c1d6e173146a155adf464e5fcfe989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cu_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0a55da5e5b47e016d811bc284263471b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cu_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6ca8cab967dda944a37750c5a1654a39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cu_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeacedbf358e1802e687d644fca249f534</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cu_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2e756b34bd13071ed1f23827412b6f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae23290eec913f8e04cc357ca777ba2aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_cbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae59fa39de78917de6e83c05de878a3940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baefd307193d4781c5370ff935d222d17f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_cbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1a49e9cc58dc6f850798cac82535fec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_cplus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7df73cc014e2e493e475473fdd367c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_cbarminus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3560c5475767ed6a34a0cbc7e1cd644f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_cplus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae363cd6af76b5a93c9cf83cf276db8208</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_cbarminus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baecd1c218b509078aee5b82738ffcc84eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae80cc79be275c8b400d46e70fea1df782</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_cbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae53cd3aa26dff30e6427f7754dd24a468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cs_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0898d4505a8d628f8c41b5ca1f830c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cs_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed1f5fd58b1cae61e632799c8545734fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cs_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae48f11f3cbcd7c70a5ed35c34ef80767b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cs_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0bf701965c7005443cb380f9acce4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_c0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae576041b57543e2f68f48231bd830f012</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_cbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae76443fe11e5f5df0ab1a40f0681557e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_c0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8b6b3ca53eb1f204ece77c52376b537c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_cbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1bcd51d83bfb3e43be6ac2b4f889855f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae32857068ce8bc22de9c96cc315fb44ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_cbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baecd55c3b028695750d259a8fbf584d609</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeaf855bceecfb05ba11f523a30aaeff52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_cbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae78643c90aa3de501ae8aecc099dda5b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_c0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb7935799033e82907e4672418246b92a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_cbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae438b64f55ef42a6a95a6cd6e7cd43fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_c0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3714498999f1f25201bf9547ff53a6c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_cbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae70ea33d6d99504bb11fd6e1a61683af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cc_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae712897c3d1019a0d1f3490042aa6d580</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cc_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9fb7e4a59cfd1bca6d55fe560e5cbd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_ccplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3627172298c112fc16c3d13c5f58549a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_ccbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea4fdbcc1bded63c26b60a657912fa03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_ccplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae11032204efadde6cffca1b0af46c9cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_ccbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0c7b9c18f1a68e2b1f427ea0ec821eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_ccplus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6fbf42c0f73a4e775ab61e9a599a96cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_ccbarminus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea933b80254ea63eb20f19e84d98b5b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_ccplus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb989aa2a24f66f63d69fadc285aef3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_ccbarminus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae54ed0a0a32d29edaf42859fe0732a444</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_ccplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae16ddec8ec77124c92a7a7379e69e86ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_ccbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae73012fdef9aeb16e9aa0d8505ec8e5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_ccplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae10eda798909a1c37462bc645aec8540e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_ccbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb74746fa517f9ff7529dac3ffd2206ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_cccplus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb22486b401278c86181ed49f70206ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_cccbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae16dbd13c3d81b593fb67a96b95956945</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bd_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea0c7b4b2080473fcc43e7730c0f2fe0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bd_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef83aa48b6ab9febd2942e5219f9fc434</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bd_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baecc68d73c0c715520f5a1c4e55b9fc248</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bd_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae863df4727e945f2414cd9bc791919e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_bminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae26c0ed5e36b1a86ec2a6c5221451fc33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_bbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea4873642156d8ab5691f494ad3352d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_bminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2d7fa6ab04a12785d0ab6d69b65c47e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_bbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae335045aed127949ec97fa2a8c17bf6ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lambda_b0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae77d34458a42b6fc59461fa8bfdae0389</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lambda_bbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea9dff33cda620f2a1cd149ea1c3c9e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2dcf150680141a4901d994064d9a9dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2b0c2d9ca237c484bad1c87b3b77fb85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae80ab2e2917b100d4db59e4434e998c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bcbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae645a97758d9242cf142868297b1b2fd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bu_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baecaac11c98842040859a5d8b3354f8ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bu_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baebc1a37e76ea90dc2e6360b744ab92b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bu_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3fc1b7a89991b5f15696015bdb793867</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bu_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae252acaeb0b43203d8bd5e13e6c74472b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_b0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0688a85da4dc1cb7936692a8dc45e8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_bbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4802b419fa362f3ac308d1ec180b3752</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_b0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1a2c31c43c63443986da312e406cada2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_bbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0a3e8f187b3f49ae20749dd23afd0c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_bplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1251f55e0ed6499b426cc1a739d20bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigma_bbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9fc1322dbae8b877343b5a5c73bb6ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_bplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baede200deaf2ae8ad7d2f741c796eaf0d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sigmastar_bbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea27c47cf26ddf8efcfc36a40e8c77bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_b0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae788abc22e03ce8882779aac89bc918a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea796d72da11b525b76128b974394e77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bcplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1cb9d7416a4b7a14e2dbf329112bd40a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bcbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8997d550849f336856027ad972d762de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bs_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5b8ed4d5951ec040ed6599ae7b0701ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bs_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0a40e2ecb1999b475bee3abab7580e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bs_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae012e8ebf4af4ea8a83b202177fa88af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bs_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef80b752f69d30ef3bc68c3d526f42f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_bminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baebe8d4275703c27fa3708cc4a8a185c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_bbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeab7248e7b7dee4dee48beb353633ead1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec69c37d43a0eb6d192639f36260bafb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae69bafc4707d31e12dc62365617c2b7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_b0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2ec5548dc2ace3649cd57755a17bb7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_bbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeac0d8baec70a7cbe75596d5b3a41e256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_b0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3f8f3489dead1f07c2b6a70dd4f3ee70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3e4d03f4c06270f26ffacabdce251f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2d035da4bedc7d9bc6238ce9a1066268</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef2fcb32413a432457f4a338eaa788696</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae14675c718e28c5ed092ff8c8725ebfe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1c6231e957c91468ee93a7cdb4cda49a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baecaa8b6f499668814fe7df25219fb0f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bcbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9d5013452030c11f1459d03109fd9248</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bc_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea4d405dd06e5df1c9c2e4d8854e19252</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bc_0bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae67a32ffe47a707ada69d84240ab5832c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bc_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9da7d746734fdba7fc4f65609204a597</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bc_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baebe53a593260d6275b6e194ae3820cfc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_bc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae80ace0a807541dc1556e949b2c091fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_bcbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4c2a2245cc29aaa423ed4a0ba882f1b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef128777bd4805e03a237b15f84d13a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bcbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae28cbcbc197d8f87b38879b598c62ad82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_bcplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6ec0445b2e9bf857d2697de5ce77b3fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xiprime_bcbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae78cca976d577f8a765351e70f8f2968b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bcplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae90355d8796f10a9b6927c7b1d81870af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bcbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae00f4440ebac9e4680dc5321458df6ace</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegaprime_bc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7a9d0e0a61d713e23b038cbcf1a799ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegaprime_bcba</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9f5eeeab581ac14b7c51e9151b3e1dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae20395692f239d66ae12a9289056bfa93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bcbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae861e93bd57faec89ad4f288df8d9d3c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bccplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeaf8a54965015de8601388bda0eb958de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bccbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6d6f77cae6791c8113db787ba0551c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bccplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5d5c756f0d7c0c51784efce86c5809a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bccbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae29b816a1b66f0db677410b3b44ce3132</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bb_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae614790fe3973e022eca2502b9afc5931</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bb_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2846b66c3c6f70c238cc17bf7ed35883</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bbminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae59e7f1353d4fb206908831b6065667bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bbbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2449aa9b45d7a63bcd6bcb59d7e11409</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bbminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae363d8005a7fd8af22649bdb88e3e5884</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bbbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeec33d225ef16672669c3ca72349360f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bb0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8f5f4c79950a7f27c6c397df858a4c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xi_bbbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae98239eb77c9059fefc1a0efc8b5bab2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bb0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1ac437ce290bd3520e6126d5aa590240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Xistar_bbbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae02a16a6bdb8a377a92c9972b63199c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bbminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6aaac7f13315020be6fba9cbece71d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bbbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baebed6dcdb32000179c32237f6187279fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bbminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8827e2fc1d2fd0442fac41025b4894ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bbbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2cab0f7ece4946d1ae7f425c07c7705d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bbc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae160d78923affba47f75f0e2c16d1b3b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omega_bbcbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeba8c55a9f7943b16103c5b80fca3f9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bbc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae915720e53b217bf1198b86e6f2d82659</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bbcbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3b35614bbdcb0e45223d0c1940d592e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bbbminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7a6756fdd009830b5ee1cad2daa7c537</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Omegastar_bbbbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7bf07162a6d1d69926f94d110f5558cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>a_00</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee58bb9865073e7a2c24e5865f8ec90c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>b_10</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2c625b348121f24e28496de99808f4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>a_0plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb357c524aa40baab9983f8325d4c9bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>a_0minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baebf04816dcf9d90fc0d13a7bc3f9ed5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>b_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5be53972ab4c965501f7f7feee0e569c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>b_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae42d52f37b4cdf7151b999db42c959c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>f_0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee3ce072294df8aa5f50868f7bc9484d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>h_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7a14e9ccc67af8bdd73dca601e0ac2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_00</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae86dd33430614816f43fddf2877b73cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_0bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae51770030c86aee53671616a73bb12d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>K_10</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3929cec69b2e404daf16cdf5022a88f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>K_1bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2590e5a8a3c76452d04ad0bbe84ab4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_0plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae537c500874e61862ac6332f6ce035c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_0minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5692c6ed7b65a644a4d69eb5eb9cc1b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>K_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae98c6c0bf9dc8aaf5e7038c95a7fbb6bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>K_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5d8e330ad23a40e0dbc3df651c1e2b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eta1440</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed5f4c55a996c5891b57590002410cbc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>hprime_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baebcd8612e34d57b51ecb38c12e76afb98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_0plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae45f3e25cb90e7fefa561c265f5e9d340</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_0minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae903dac00d13726806816bf67935bb7b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baedaac5901be5799585567163de6c35632</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed14a0df8c2f615660dc258b3fb1159d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_00</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0830cd82c398526e1018bacf352101dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_0bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6a272abb749c8561cf445d6354710486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_10</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed8c60867c70ec1e82ccb9a3be1493e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_1bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed784df99b7b2dcae4a0d1cdcfa52259b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_0splus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae797fba820860b3b36ed5ee43cc0043eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_0sminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed57ca2235726f9b3c474bfd2854df2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_1splus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed78bb01a38ec572027bac10e26487950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_1sminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea1104f4108bddb2f29643977e808814a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chi_0c</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae01f20cea7258fb238f33fa7befed58d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>h_1c</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeadb2b956ec0f529dce2a91f6cce6c03c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_00</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baecf20438dcad3d801e479cd7e14cac140</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_0bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae081a279915f06499bbf084b2125baee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_10</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae804c9735666e2f319f07cab623c326e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_1bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb845344f0bba74b27be664c61c13b226</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_0plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae02a8360bdeb00ca1d6d697ae08cc748d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_0minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb969f32cd3ce72a1ef5c1c369643ae5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7392ab31cf488adaace346df44cbf9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae051d577e908f827bfd41e86c0080d943</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_0s0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae79e55f27c303b41d7b0569bb95555121</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_0sbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3d46fd8f2856ea2ccba9df5507b427ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_1s0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec558b7e604117df1216be0a4c4304cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_1sbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4dcd0cf185aee6829c2dfe848fcd2fb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_0cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae03e42d271f8d69fa4e019441c564124d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_0cminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8b05872cfe2e84c048bf213c63987b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_1cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1999f07cbbcd39b56f0b6da66f9f64f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>B_1cminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed111eff1033e11306c79be5ecab82548</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chi_0b</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef69b73e2ddbb08de7d81f182c4c83be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>h_1b</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee77ba930fe8d4d94ae1d09ac7039fc4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>a_10</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baebcf4d035a68063693f4c7eaf6b3cc70f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>a_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5804487e61b83fb91f705dedf59e6694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>a_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9fac295f5c453d5f3f53445ac4a33d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>f_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae15e50d161940b09444c8c5ca14b644a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_10</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5949bcf227e8eba0c768f5fff150e9b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_1bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae769c75ace5de26c82383f3bfe26a351e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae99620df8a536254e10592aac4413a0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Kstar_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae81af05b0275a478646bad518f44e5c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fprime_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae988dc4b57e2c5310dcd9bd83c66165e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec78acfd19a78eb174e357917e0ebddf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee847d64ad08aff42c964982c94150047</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_10</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4201494e82ed8be6ac493014cd14523c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_1bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1cba4a0fcd0e1aa477e0b9c82f9243f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_1splus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae54d1869f320ce11aa7b5807b71fed686</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dstar_1sminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec6587bc788bbf3cd982277e80fd50173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chi_1c</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baefd392748fd9a5e1138be2711e8a24d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_10</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae29a832e13561b25cf417f232a65b090f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_1bar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeabe1dfa196a04f7f2ebb79067fad6a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee2c01ac0bb0feaa1e1d1098b2f392a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae83f50cb7713aa18598a52d06c01db8de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_1s0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb6855f1302ee1c65ca979d47aa6383ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_1sbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae48fed132dedefb9458b7da29d560aa41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_1cplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae397fb847d74eac843635c92f00e66e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bstar_1cminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3dd68158e891c608e0783e4b941717c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chi_1b</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae78ec2740415fd4f1c2733ef9e71f0326</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>psiprime</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae29e3db54372c782ba3a49005368819f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Upsilonprime</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae46ab4711b1bcc69ef1f17c2abf74059f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_d_L</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeba3d24612933568282f6fb395c6ad908</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_d_Lbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec77f32dc1d56f99a3c80299151dff6ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_u_L</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6d359d3be1a14c7207f67ef703666c67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_u_Lbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9834f53cdd4fdecc13939bfca5b0fc01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_s_L</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2b4e96909f7d2f29214bcef25a0cd4cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_s_Lbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9c0e4a11517b053dcdaed05b3f535e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_c_L</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2235d5b368bd8eb18ffdee121db32560</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_c_Lbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed3319049a9e3f69de2f8dd0cac412765</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_b_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5ac62259887b026f60e25bd5fe197d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_b_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb58b4830570345e5f59530a894219dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_t_1</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb9fcf7a4e4d9fafa7410512bc8a66450</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_t_1bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeef1616ad873d641cc436f23e125379ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_e_Lminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb0dc8493284b2b6a5015fb5b5f5e665f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_e_Lplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee1d443e319c8fd41adee0919f17e84dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_eL</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec65a7d7fb8826c269c5483bb897f915f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_eLbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef06d02043679ebaa354e7f3c859fe293</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_mu_Lminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae41f826d70b3a3bd89ee57324cd88b143</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_mu_Lplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4eefd754a8d68c5d2f1d938154ac6e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_muL</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae779b7b373794446e6134c9706ff5bc60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_muLbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0aa1605564b086738feb2a7eed4e8041</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_tau_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3e4a04565bc3f660d4139a4ad20dc54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_tau_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeab719f716e319d45cefb436c93aae23e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_tauL</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8766fa0b4b726c012cd584afde62183b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_tauLbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae75428ed441d6eb3ee935c17a3eeec4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_g</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea946eb8b815c83fa4cdf2f90ab2a9037</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_chi_10</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae029f9d4fc0dbe568e0ac2b8b63f91beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_chi_20</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeeeb22bd5f696a77846419c64f2a1ed19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_chi_1plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb76a9be1187e8731db0439305a259a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_chi_1minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeac49c289255d79f71b3a709da4ff4433</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_chi_30</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea838d912f0aa59bb2da5f22c2d787b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_chi_40</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae87fa0eb8fa2dd90256a30f24ff384e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_chi_2plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef68195592c5e2cc461a197b9c0c6a831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_chi_2minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee769751354f8f2d50f4d346f8be1a1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_Gravitino</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef84d75096dad0bcdac4ba7b3af82f328</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_d_R</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae380d76f3afb31542c175c710362eeeb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_d_Rbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee3d1340170fdad7ea24e18ca7ff02a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_u_R</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae710ecc1dfe6b6442184c95ca9d457a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_u_Rbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9bc11a8c09ee0c8471fce75f97879652</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_s_R</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae1efa4043c3bc5df3968312bec6b9bdaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_s_Rbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae409943f4924b0e5f46cadf77b31c518b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_c_R</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae677ea95661671d51a2bc303b8c6752b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_c_Rbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed316296b2a41252c8c8b174fb6051378</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_b_2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeea8a25f1063e07a7e0136e72929e2c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_b_2bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae6eea9b1bc95aae188bdb02d93cc26e2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_t_2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9174cef9601c3e73301fe9c482ce2137</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_t_2bar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4b546e31ab72a28245465eb8b9db2830</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_e_Rminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0c6a3c614859ccffa23032fd27c946dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_e_Rplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baef2771493e4c43c52d4dabcfdee2f8fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_eR</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9926198b0a94bd91bb0ded244cff7258</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_eRbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed24278ed27ab0a1e145eb06340ac27da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_mu_Rminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb073b0159f4c80fcca5ca90974730a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_mu_Rplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeaba82fcb5a46772a835304114fe6171a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_muR</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae858875458e3a021202ec15977b531fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_muRbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5cae8f58fc46e852621b3bbb1d8f21d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_tau_2minus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2e0241aaaad9840df9d605402e7d9aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_tau_2plus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8fd21dc1f85f7e8140b231badf91e78b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_tauR</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8ba22fbea3ee944723d7216ae5b080c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSY_nu_tauRbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baec7319205e240633a73e5e24155c687c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pi_tc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4696c169f14513ff15aff3b4e327d7a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pi_tcplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae50c7ce2dcad922bab82517e1ad576097</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pi_tcminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae366c3c6172f6e7f3464935e0a5dcfec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>piprime_tc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9fdc582194f9bf09ca5169607e47b6c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eta_tc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae9ca19ea8c25f782583baa84a8898bcef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rho_tc0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee72ea8e34bbf2466c4fd852ed0ed131d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rho_tcplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee7ba13ab7758a94f6eb777261687b2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rho_tcminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae99c4c3b63160af06b0a4fe93a75aef4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>omega_tc</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baee071828a160a989fd0f64b916cc16554</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>V8_tc</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae85b61d2fe983eb13b21925f944af892b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pi_22_1_tc</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5d29e4f9037d2189241a0b379004a7fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pi_22_8_tc</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed0a170f4dadb29cb8637faa3e0544f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rho_11_tc</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb8e207970f29541c4c35d1de4eeefd94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rho_12_tc</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeda5c76ea4e869c1457099259a733c8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rho_21_tc</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae95da6c26be37a10f73507594324ebedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rho_22_tc</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0f5e57f5b707ffd596e66cddc77ddcc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dstar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3fedf16f4950f6fe23cdba6be4f5a2ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dstarbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb1c527b0928b79a981c1147bf0610258</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ustar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae889d091c83984ab555c347bafc2e1c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ustarbar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3d6a615fce77d1a486a09dcb0eb848a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>estarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baede94c28e5419b0366ba3cacd3923410f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>estarbarplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae8693ee56dd29c23eb9be70828eb12848</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nustar_e0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae32052ee1b2275fe216541002b1d987a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nustar_ebar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7853d27b14c16cc67176c9bd65a17ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Gravitonstar</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeec5edfb4b72d6732db3339d22f5b8aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nu_Re</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae029dc7acb741682a94ed0610c21a9dc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nu_Rmu</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae5b2a66bb46071510edbd28d6f8d21e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nu_Rtau</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae455fc9d0df91d0faf95dacce36660241</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z_R0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae332ae4f6b27cfbc9172c13440ee9d849</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>W_Rplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3e05bcc3466247db7beaa79941991a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>W_Rminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baea4902098e47d6b2c2434c0f8a932958e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>H_Lplus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae265cfc059c240a781d6734f77772ed01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>H_Lminus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae4391eaa7f2de57bb17efa752d303446e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>H_Rplus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae806649befa1542e3e8b21f4f3914186c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>H_Rminus2</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae3fb5af91367f87a1c8b74475244a1d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rho_diff0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae7aac342c70c1d75423954cba0331f701</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pi_diffrplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae89621f189aa0e00fc51d2a3b22cddf61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pi_diffrminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baefc21e11a5bbc5f4a330fe9347a89e67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>omega_di</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae0b37a366dd823d475ffba81d0853f2eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>phi_diff</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb96125f324795d8fe961c103b195892e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Jpsi_di</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb8d12da5718c83e21887fb78149e4cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>n_diffr0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baeb85044d3e623823b137a12e3b24fb356</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>n_diffrbar0</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae471c06ba341406bbb6bf24aa0019747d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>p_diffrplus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434baed171c561f3d149a01bf4eeadf5ef4aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>p_diffrbarminus</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae2fb47c9e0e7590326ac9100f5587922b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>undefined</name>
      <anchor>31ee04cb23ab28a841fa6ec33a434bae83c8cb3cc0f1a4d4879427f03f508e74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG::Pointer</name>
    <filename>namespaceThePEG_1_1Pointer.html</filename>
    <class kind="struct">ThePEG::Pointer::Ptr</class>
    <class kind="struct">ThePEG::Pointer::PtrTraitsType</class>
    <class kind="struct">ThePEG::Pointer::PtrTraits</class>
    <class kind="struct">ThePEG::Pointer::PtrTraits&lt; T * &gt;</class>
    <class kind="struct">ThePEG::Pointer::PtrTraits&lt; const T * &gt;</class>
    <class kind="class">ThePEG::Pointer::RCPtrBase</class>
    <class kind="class">ThePEG::Pointer::RCPtr</class>
    <class kind="class">ThePEG::Pointer::ConstRCPtr</class>
    <class kind="class">ThePEG::Pointer::TransientRCPtr</class>
    <class kind="class">ThePEG::Pointer::TransientConstRCPtr</class>
    <class kind="struct">ThePEG::Pointer::PtrTraits&lt; RCPtr&lt; T &gt; &gt;</class>
    <class kind="struct">ThePEG::Pointer::PtrTraits&lt; ConstRCPtr&lt; T &gt; &gt;</class>
    <class kind="struct">ThePEG::Pointer::PtrTraits&lt; TransientRCPtr&lt; T &gt; &gt;</class>
    <class kind="struct">ThePEG::Pointer::PtrTraits&lt; TransientConstRCPtr&lt; T &gt; &gt;</class>
    <class kind="class">ThePEG::Pointer::ReferenceCounted</class>
    <member kind="function">
      <type>T1</type>
      <name>dynamic_ptr_cast</name>
      <anchorfile>namespaceThePEG_1_1Pointer.html</anchorfile>
      <anchor>ce3254586993538a212dccb0432bb232</anchor>
      <arglist>(const T2 &amp;t2)</arglist>
    </member>
    <member kind="function">
      <type>T1</type>
      <name>const_ptr_cast</name>
      <anchorfile>namespaceThePEG_1_1Pointer.html</anchorfile>
      <anchor>9e309b03809295721469812f99bf29b5</anchor>
      <arglist>(const T2 &amp;t2)</arglist>
    </member>
    <member kind="function">
      <type>Ptr</type>
      <name>ptr_new</name>
      <anchorfile>namespaceThePEG_1_1Pointer.html</anchorfile>
      <anchor>21b21ede4e3dcd2ee95783e7897cf8d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ptr</type>
      <name>ptr_new</name>
      <anchorfile>namespaceThePEG_1_1Pointer.html</anchorfile>
      <anchor>45e87a3853d9687c3f6a1f6a46f2e043</anchor>
      <arglist>(typename PtrTraits&lt; Ptr &gt;::const_reference t)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;::pointer</type>
      <name>new_ptr</name>
      <anchorfile>namespaceThePEG_1_1Pointer.html</anchorfile>
      <anchor>9b043f340376786945ccaab2b32a5270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;::pointer</type>
      <name>new_ptr</name>
      <anchorfile>namespaceThePEG_1_1Pointer.html</anchorfile>
      <anchor>42bb0ac8c8bc5a7d06ba16d1269c9e0e</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>TPtr</type>
      <name>ptr_cast</name>
      <anchorfile>namespaceThePEG_1_1Pointer.html</anchorfile>
      <anchor>80a2f4781879602da1a11f0ded53acc4</anchor>
      <arglist>(T *t)</arglist>
    </member>
    <member kind="function">
      <type>TPtr</type>
      <name>ptr_cast_const</name>
      <anchorfile>namespaceThePEG_1_1Pointer.html</anchorfile>
      <anchor>b202c0cdda74ee54f48a0cc4854769be</anchor>
      <arglist>(const T *t)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Pointer::Ptr</name>
    <filename>structThePEG_1_1Pointer_1_1Ptr.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>RCPtr&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>de81e69dd66203c513f1e2cb28ed3364</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstRCPtr&lt; T &gt;</type>
      <name>const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>d4c90270f62878dcca888872f1a0ffaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientRCPtr&lt; T &gt;</type>
      <name>transient_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>d6ef5b4e6c0e48126fa2fb354bc72810</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientConstRCPtr&lt; T &gt;</type>
      <name>transient_const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>30b082356bcebe50abfd26865261738f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pointer</type>
      <name>ptr</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>53ced1accce05e34e3f341d0013fdd6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const_pointer</type>
      <name>cptr</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>3257346d4f3b6804b381cd30ad9d2602</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>transient_pointer</type>
      <name>tptr</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>32ae8cd67b59234dc7eba5b4b66ce3d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>transient_const_pointer</type>
      <name>tcptr</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>5fe03bbdff270e4cbcfa252acf87b38e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pointer</type>
      <name>p</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>dc9567eb42defbce00023015236bffc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const_pointer</type>
      <name>cp</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>728fbede1d350dcece9d014e12a166a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>transient_pointer</type>
      <name>tp</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>8c8982a16fbe85d21935b817a7436d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>transient_const_pointer</type>
      <name>tcp</name>
      <anchorfile>structThePEG_1_1Pointer_1_1Ptr.html</anchorfile>
      <anchor>0d3fbe8c5f94a43587bb56ece108d5ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Pointer::PtrTraitsType</name>
    <filename>structThePEG_1_1Pointer_1_1PtrTraitsType.html</filename>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Pointer::PtrTraits</name>
    <filename>structThePEG_1_1Pointer_1_1PtrTraits.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Pointer::PtrTraitsType</base>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Pointer::PtrTraits&lt; T * &gt;</name>
    <filename>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Pointer::PtrTraitsType</base>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>85ddd3bdc15a0a2d6c91b1e9c7ebbc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>1d7eb74a7c971dff4bee45eb3ccb272e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>7eec35d90fa004e7e1136127c406da3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>c4774df97a8f4afc8ad29823565e1649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>d7f427c7a0063fe11b017d2a4f0b7d50</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>barePointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>94c90c69263b7fa539d931210321346d</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>create</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>f8f3d0aac893700b160af539de39e919</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>create</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>53e7c2c5de66368b21539d400b3ee39b</anchor>
      <arglist>(const_reference t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroy</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>02b3906aee826bcf7fea04c49bf2fa95</anchor>
      <arglist>(pointer tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>DynamicCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>fbefb426304f9e1c92864d102ca4f50f</anchor>
      <arglist>(R *r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>ConstCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>a300670d2a00af8a96ae9195f6632210</anchor>
      <arglist>(const T *t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>PtrCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>47d9dd3c11870fa954992c82c2f736dc</anchor>
      <arglist>(T *t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>reference_counted</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>1d6e50e99c90176199ff4bd3fd2315eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Pointer::PtrTraits&lt; const T * &gt;</name>
    <filename>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Pointer::PtrTraitsType</base>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>2a9eff61da497537632c2701385370d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>124b3ba848f037f80e58bc03c7d62a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>f5a867c6a22879f15d62af842b5d6f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>4a0dab1fe978b33854f27b2fee8c90ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>686616dc8c17cb10f24b4ec29b2c111c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const T *</type>
      <name>barePointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>ae48ea5ec75f8de46531626302435489</anchor>
      <arglist>(const T *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>create</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>26767372d92d77bdaa579536b60111ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>create</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>d2cfba96003b878687965aaad8f9f5be</anchor>
      <arglist>(const_reference t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroy</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>58b07abcfd8acaaeb57580c24c4d9235</anchor>
      <arglist>(pointer tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const_pointer</type>
      <name>DynamicCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>c3a16448226221561e21ead1d6a0b988</anchor>
      <arglist>(const R *r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const_pointer</type>
      <name>ConstCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>2e9e8315d660470b02f3cf7829ae4916</anchor>
      <arglist>(const T *r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const_pointer</type>
      <name>PtrCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>9b5b84d8507eb52dd199ae951f3f66f9</anchor>
      <arglist>(const T *t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>reference_counted</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01const_01T_01_5_01_4.html</anchorfile>
      <anchor>f9197af24bfb1d33ac65897728856c47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Pointer::RCPtrBase</name>
    <filename>classThePEG_1_1Pointer_1_1RCPtrBase.html</filename>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>increment</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtrBase.html</anchorfile>
      <anchor>a3d7ec54809c6f21661d6f5048e78395</anchor>
      <arglist>(const ReferenceCounted *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>release</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtrBase.html</anchorfile>
      <anchor>2c5119a7b9993cbfe787c0da5403fae3</anchor>
      <arglist>(const ReferenceCounted *)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>ReferenceCounted::CounterType</type>
      <name>CounterType</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtrBase.html</anchorfile>
      <anchor>9fc0ff15b3486b9c57b52b78d1c02935</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Pointer::RCPtr</name>
    <filename>classThePEG_1_1Pointer_1_1RCPtr.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Pointer::RCPtrBase</base>
    <member kind="typedef">
      <type>void</type>
      <name>iterator_category</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>fc7caec28bc796d6368863868991ca75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>difference_type</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>c77b53a410ce5f5cd002eadebadcc654</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>76ef77952ba760c3e857b465eef931cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_pointer</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>8649839c95449deaf9339cd254b0486c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>89a35349b39eb20d1066bc9d12a1352e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>ac8f89b7a4c3f995dcd6ce8cf533af22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>eb820bad6b4d98e53018e8ea3944263e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>5c20458986034422a9a8cfb40f889b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>20e8ac2446491a93f5a576fd5b02fda9</anchor>
      <arglist>(const RCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>20399c050d65795b2af2ec72cf3415d1</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>029759756b47f6add084a57d256740cb</anchor>
      <arglist>(pointer p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>f2dbbed288e4322d5dd66e6f49d8faf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCPtr &amp;</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>478307c15f1083edfb2febbf864228b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCPtr &amp;</type>
      <name>create</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>fd45a1b60075def56d2161a059f54985</anchor>
      <arglist>(const_reference t)</arglist>
    </member>
    <member kind="function">
      <type>RCPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>90bbc640bf47daa9a85313cfc148cb43</anchor>
      <arglist>(const RCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>RCPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>8dcbc8c0481d829504440c90e3d5f7b8</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>RCPtr &amp;</type>
      <name>assignDynamic</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>e11c28b2c1d51620f50bfca4e8d8e09c</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>RCPtr &amp;</type>
      <name>assignConst</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>affc740919727eda19f2313927c659f6</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>25214c3809dd235ed79fe473dc0882c8</anchor>
      <arglist>(pointer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>62e9310f01a4f77b421199ac2db98538</anchor>
      <arglist>(RCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>3a2d61ff27b885aeaa2f5e70b22287e2</anchor>
      <arglist>(const RCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>a5152d7bb82a7a25f12e7b5fe52a698b</anchor>
      <arglist>(const RCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>d101cc3936867c660797a0fa3af2d1c7</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>0b8b8c8d3660d12e692b786b831f5c4a</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>4cd23a84d702c701dd5472a77f5588b5</anchor>
      <arglist>(const UPtr &amp;u) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>9ad24e37bb9e3c754b710b1b7e154820</anchor>
      <arglist>(const UPtr &amp;u) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>b792969375429489f25ef2cf97c0b4b6</anchor>
      <arglist>(const RCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>24441fd63e55340055d34142705f2d04</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>69ba7d40a6a1c0b22291984bdca1d088</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T *</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>3b8a4f873820061faf21a194c1eaba81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>135d942a06d4b2252ba7e7056cd802b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>f7de886ea516c8b262ae0aa3d4c6cf05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCPtr</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>0b00da248aa2a943f70cd96fdf369b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCPtr</type>
      <name>Create</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>d7ccfdb558cf07999620ed24676bce90</anchor>
      <arglist>(const_reference t)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>increment</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>56a146883067516c02f3f5f155b09aeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>release</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>7c07091e41320aae42b7f17f67db2dc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pointer</type>
      <name>ptr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1RCPtr.html</anchorfile>
      <anchor>5df7ec9699542ff4a65c080c5da06012</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Pointer::ConstRCPtr</name>
    <filename>classThePEG_1_1Pointer_1_1ConstRCPtr.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Pointer::RCPtrBase</base>
    <member kind="typedef">
      <type>void</type>
      <name>iterator_category</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>04d804b8c779626145bb19371b9619c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>difference_type</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>707207a06b87e3e22d51509fd3f2cb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>0804c208072cb1924bb41c99cf405033</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_pointer</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>79775ea9c280b6c215e7f96023f484d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>5b5ea6a3892d4ee5a5709462a8b684d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>d51464c2229a3875a4eba07b318cdc60</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>7e9a679031ae3a687000069e29de8e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>11f35e43ab094ead2e4d5cab63041b92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>a3788cd0e0b0e912774cb0f775d7eef3</anchor>
      <arglist>(const ConstRCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>3de6786cb181de6955262a0d40ca02e8</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>5f10f1e6fd9d7b604d4d20d5a9956a65</anchor>
      <arglist>(const_pointer p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>d540443142d02b5a07b71d3c5762c85b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstRCPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>0d79875437bc4ab7ba7a881244fa1cc9</anchor>
      <arglist>(const ConstRCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>ConstRCPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>3e97d4b37bd527c53a702789ead1a960</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>ConstRCPtr &amp;</type>
      <name>assignDynamic</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>d373e4b311311b8e7aa04688b091142a</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>2cdf6f7db633f5a4c52337d71dac67a8</anchor>
      <arglist>(ConstRCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>1b06d39f67aa8cf5fad271ca45579443</anchor>
      <arglist>(const ConstRCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>414c3bdd5b4d17dc9221490c73462ec6</anchor>
      <arglist>(const ConstRCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>4750441642751fec20e5c9f4ce579359</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>9cf9d8118258d0621e36597a87bddc55</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>78d45a5f55f9322a9a680a5cef035cd7</anchor>
      <arglist>(const UPtr &amp;u) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>bf196039f835b9b2c005fc5167868d8c</anchor>
      <arglist>(const UPtr &amp;u) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>6dcfe6dcb6bfe236b61c8f456d43053b</anchor>
      <arglist>(const ConstRCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>a6b24fbf81fed3396e413d42cc940b00</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>4ed2c6124d0dae5d302e9a82091fe7c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const T *</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>3b8ea899fd9280848f8a8ca05efcc381</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>aed81bb91153ad8be68c0f8e8bd8feba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>cc2828728cf53c2ba17f4b3ba43d9644</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>increment</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>4db876b60f01b3864645308db8e12761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>release</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>51338ba7e3bb92e2e5cb4f4be9c7a5b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const_pointer</type>
      <name>ptr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ConstRCPtr.html</anchorfile>
      <anchor>8956ddc605ceb146adcc3b699cc93b47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Pointer::TransientRCPtr</name>
    <filename>classThePEG_1_1Pointer_1_1TransientRCPtr.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>void</type>
      <name>iterator_category</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>29eb5345358082997b4b62574ca8a6aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>difference_type</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>45e72e36dba821ddfb943389f6a3f425</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>cd2f0c47047508d6badc7b416aa74680</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_pointer</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>adc0563abba5cc2df0839f3a34d9ecca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>efeee7f97d04607678473e6556fa1a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>7579e081e719e2eb856d41ab27575edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>0aafd2b10d9b8b39d2b4569a2c2b3dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransientRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>67aeabc8c9d0cafd91f097a5b608c4c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransientRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>8a09b8a008d15cfe70a3b0e843f315c3</anchor>
      <arglist>(const TransientRCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransientRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>c7584edb74ab066de2e810289976900a</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransientRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>6aea2a6eab15e02eb7726d35c9ebd22a</anchor>
      <arglist>(pointer p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransientRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>dda15cf01669a70b61c59d561ade9e13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TransientRCPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>cb9d36613327165025c87c53f269bd83</anchor>
      <arglist>(const TransientRCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>TransientRCPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>84a91c31d08be5a0e3a23faeba357c62</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>TransientRCPtr &amp;</type>
      <name>assignDynamic</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>04c3c306d89227880b2a25b9a8b8f3f0</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>TransientRCPtr &amp;</type>
      <name>assignConst</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>b4f1dcc72ed56d950b0dab4eef6675b3</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>2c51a59cd34b2991b51880a8f19e1ce7</anchor>
      <arglist>(const TransientRCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>70b414cb84f4eafafdc2aeddce3a4053</anchor>
      <arglist>(const TransientRCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>51be36fcf0305b30c4090bbf2873297e</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>1c189b1733b89a43cade39bf57e1dd99</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>deb6dee5394a83ed83e6a7a338f8c7ef</anchor>
      <arglist>(const UPtr &amp;u) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>63deb2d93d14da575889dc25167185fa</anchor>
      <arglist>(const UPtr &amp;u) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>00497e099d6520fe9c9d91ca2584725f</anchor>
      <arglist>(const TransientRCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>a56c67a86fda3757ae5305db5448522d</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>7d6ee5a4c14a4746bfc0f2ab8958ddc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T *</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>c3ab2f8c6f4f3ee38a856787c71f63d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>29bce647d74345b1c07fd7aab42296cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>606c7ca070a6455ad2036c228f538147</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pointer</type>
      <name>ptr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientRCPtr.html</anchorfile>
      <anchor>9d64b2bb5b9039f7c7d3ff0b6517a777</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Pointer::TransientConstRCPtr</name>
    <filename>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>void</type>
      <name>iterator_category</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>da5f142fb3aff1a190a188b557003b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>difference_type</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>9f9ab47f3d18dd719146aa9a91ff53a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>c6d55d4e9a243de79c59a8c463946226</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_pointer</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>dca3cfa5e328cb0290bc54278e35c3d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>cb05780a86be3eb5a5640d0e8e2425ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>88f87c61cdff197daa329fbec29d54ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>a3e40d646edb530beab782f95db7fb2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransientConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>4a917d4aec358c7af98be2f3dd903d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransientConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>45e044cb02254ca787611ef4ad472a35</anchor>
      <arglist>(const TransientConstRCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransientConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>49bb73c0f8945e19fbb5878143197302</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransientConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>5f8e82dec0db27f5fffd85058842f97b</anchor>
      <arglist>(const_pointer p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransientConstRCPtr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>ade61aac202d6582ddbb33f8b37cb222</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TransientConstRCPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>60f359d5e28e509c81a6047ff484673b</anchor>
      <arglist>(const TransientConstRCPtr &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>TransientConstRCPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>2dc04e886ec329b35d1fddf5eb1a30a9</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>TransientConstRCPtr &amp;</type>
      <name>assignDynamic</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>42b31e9f94fcc706f1ef16b91188cdee</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>30edf23dca9918dc565a0c96a63e6c26</anchor>
      <arglist>(const TransientConstRCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>e936338302f70d07650021715b4f72d2</anchor>
      <arglist>(const TransientConstRCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>bf6286221f16c76a4de7508292f2487a</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>809c95439437f533929633918d9a0c4e</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>5532e0a8158ea774463cf97bd7030f7a</anchor>
      <arglist>(const UPtr &amp;u) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>af01aaa310d6832b719c5b30a3687a32</anchor>
      <arglist>(const UPtr &amp;u) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>74498c5bdb80106dc43f76c3d600c77d</anchor>
      <arglist>(const TransientConstRCPtr &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>6b35f141f8564ae1904a41d6a1ca58e8</anchor>
      <arglist>(const_pointer p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>29c71cf9656e6d84d5db77ff47598ce4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const T *</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>fbc26d0fed603ed2c22fa4f6a8fc3dfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>e3222e34baebcbd700bebef52feb22bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator *</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>e98729e80aba3c47f309dfb3589b9a45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const_pointer</type>
      <name>ptr</name>
      <anchorfile>classThePEG_1_1Pointer_1_1TransientConstRCPtr.html</anchorfile>
      <anchor>7acff21bc3231d16cf379e5e0c5c7568</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Pointer::PtrTraits&lt; RCPtr&lt; T &gt; &gt;</name>
    <filename>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Pointer::PtrTraitsType</base>
    <member kind="typedef">
      <type>RCPtr&lt; T &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>2e50ef5093181e406cd91af266e84b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RCPtr&lt; T &gt;::reference</type>
      <name>reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>3a956d171a31cad5403927e50190e926</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RCPtr&lt; T &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>8e6914d38c58200a93bf6c1ff1ad4d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RCPtr&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>31ab6ec3506187fb12067e4e8ce6f35e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstRCPtr&lt; T &gt;</type>
      <name>const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>39d9734897cbad052407f0eb810f8e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientRCPtr&lt; T &gt;</type>
      <name>transient_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>292c4db81d44958294d6aa7ba75cf77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientConstRCPtr&lt; T &gt;</type>
      <name>transient_const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>f43675751257438ab3248ec058a60f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>barePointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>b2702f6aa7c3820d8419e0572ebac81c</anchor>
      <arglist>(const RCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>create</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>5f10d2608050fd4fa97aea8b01fb2e16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>create</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>cfcfa99ec423fa2f406261b708d653df</anchor>
      <arglist>(const_reference t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroy</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>839d1e498b3c5ac17fe3727420b081b6</anchor>
      <arglist>(pointer tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>DynamicCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>07f480d26cbea709e865a47488f1c1df</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>ConstCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>e5b2672ade64f3bbbecf0ed9dc2745d9</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pointer</type>
      <name>PtrCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>7399c485fcd95b26e4a5655488b88ef6</anchor>
      <arglist>(T *t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>reference_counted</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01RCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>b66cdca61d12b2eb47d108781bce5904</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Pointer::PtrTraits&lt; ConstRCPtr&lt; T &gt; &gt;</name>
    <filename>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Pointer::PtrTraitsType</base>
    <member kind="typedef">
      <type>ConstRCPtr&lt; T &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>cdbbcbd9dbd1cbf053b563b69ca438d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstRCPtr&lt; T &gt;::reference</type>
      <name>reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>07eace9da26a4e5e8a00955698ea70b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstRCPtr&lt; T &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>69f9c8858f8f912cfd19217c63ccf36a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RCPtr&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>54683f53444e57ad588d55a580821cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstRCPtr&lt; T &gt;</type>
      <name>const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>c756323832da4b095d698b5f1faffd04</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientRCPtr&lt; T &gt;</type>
      <name>transient_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>42fa434efc41820049f72761623ca519</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientConstRCPtr&lt; T &gt;</type>
      <name>transient_const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>744aa8641229bb17a206f5e95afb8325</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const T *</type>
      <name>barePointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>8735f379842384921df9997aff169562</anchor>
      <arglist>(const ConstRCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const_pointer</type>
      <name>create</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>5aa75668e50fd58b09cb1146b48462cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const_pointer</type>
      <name>create</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>584cd97f4ca047075a94eef676d8c147</anchor>
      <arglist>(const_reference t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroy</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>ded71f5bc2a2fb46c3e94db3e64401d5</anchor>
      <arglist>(const_pointer tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const_pointer</type>
      <name>DynamicCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>0cfdcfa5b91750312d3cadaa54386f42</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const_pointer</type>
      <name>ConstCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>2cdebe519d05dd2c5c20e6ac09f21612</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const_pointer</type>
      <name>PtrCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>c97439ea4baff0df9ffc4c328f88d4c9</anchor>
      <arglist>(const T *t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>reference_counted</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01ConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>97e18d0384bab68a92f18f95f50f5f18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Pointer::PtrTraits&lt; TransientRCPtr&lt; T &gt; &gt;</name>
    <filename>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Pointer::PtrTraitsType</base>
    <member kind="typedef">
      <type>TransientRCPtr&lt; T &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>51c15faa77b6e273ae052b597915e613</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientRCPtr&lt; T &gt;::reference</type>
      <name>reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>c595fab6cebe3294e0da4310951f29c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientRCPtr&lt; T &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>892f66f3c87f525d1ace404685b36cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RCPtr&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>7ec6cbd476b7c381d31e6ecffae32443</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstRCPtr&lt; T &gt;</type>
      <name>const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>e0c90ac84b62ab33e3a66a8a17aa2573</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientRCPtr&lt; T &gt;</type>
      <name>transient_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>60f7c9b8a90744ee36972748db3cb3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientConstRCPtr&lt; T &gt;</type>
      <name>transient_const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>1feed7dc4e7a128d36ebd76866ce7906</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>barePointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a2bb5b4e1e91e82c8237a1bce3c1027c</anchor>
      <arglist>(const TransientRCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroy</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>6011d556a91769ec73bfafff0117ce63</anchor>
      <arglist>(transient_pointer tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static transient_pointer</type>
      <name>DynamicCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>6cc33319063119f9608fc13bb9aa1f77</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static transient_pointer</type>
      <name>ConstCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>881c837f7e4842c0afa33e2002b97959</anchor>
      <arglist>(transient_const_pointer c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static transient_pointer</type>
      <name>PtrCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>4aa077d03a4ff6449367c844295dab38</anchor>
      <arglist>(T *t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>reference_counted</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>6c5b23b5ee788e1d72461b0c2b06a1df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThePEG::Pointer::PtrTraits&lt; TransientConstRCPtr&lt; T &gt; &gt;</name>
    <filename>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</filename>
    <templarg>T</templarg>
    <base>ThePEG::Pointer::PtrTraitsType</base>
    <member kind="typedef">
      <type>TransientConstRCPtr&lt; T &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>595f0a9daed578b6dda16f83e1fe2d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientConstRCPtr&lt; T &gt;::reference</type>
      <name>reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>37297c3a53955fc119a12ca7ac97f254</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientConstRCPtr&lt; T &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>0047c2ee483d614f9993ed344f73fa21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RCPtr&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>f6cde95ebf18ed60adb69da23b46ed99</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstRCPtr&lt; T &gt;</type>
      <name>const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>42fdc042d6a7b571671f2c1e9b8741d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientRCPtr&lt; T &gt;</type>
      <name>transient_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>e262db1a1289a1e1c9a96d3638aaaa57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TransientConstRCPtr&lt; T &gt;</type>
      <name>transient_const_pointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>7bc9f237d3b47c257b9f71b1c2047648</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const T *</type>
      <name>barePointer</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>bd36b5c2aa9563c0c0a0c574c6999e71</anchor>
      <arglist>(const TransientConstRCPtr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroy</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>4e930f60ce35cfc86ed3546cafadd7c3</anchor>
      <arglist>(transient_const_pointer tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static transient_const_pointer</type>
      <name>DynamicCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>8e0e711e28dc7a19bc7f7f44125559f7</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static transient_const_pointer</type>
      <name>ConstCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>306cf43f36f24da8b81f46a50c521884</anchor>
      <arglist>(const UPtr &amp;u)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static transient_const_pointer</type>
      <name>PtrCast</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>6055c3b44ee3de565cbf4aa93ff62abd</anchor>
      <arglist>(const T *t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>reference_counted</name>
      <anchorfile>structThePEG_1_1Pointer_1_1PtrTraits_3_01TransientConstRCPtr_3_01T_01_4_01_4.html</anchorfile>
      <anchor>5f65f87f1fc03b1eed42c6273548c5a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThePEG::Pointer::ReferenceCounted</name>
    <filename>classThePEG_1_1Pointer_1_1ReferenceCounted.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>ReferenceCounted</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ReferenceCounted.html</anchorfile>
      <anchor>ba0a1b74638fd0bd1489524826e8c35e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ReferenceCounted</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ReferenceCounted.html</anchorfile>
      <anchor>2f5751f7a6f41ae8dcf305a9d9bd5f0a</anchor>
      <arglist>(const ReferenceCounted &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ReferenceCounted &amp;</type>
      <name>operator=</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ReferenceCounted.html</anchorfile>
      <anchor>db4623c523c6cae8584b0a9541b21c0d</anchor>
      <arglist>(const ReferenceCounted &amp;)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>CounterType</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ReferenceCounted.html</anchorfile>
      <anchor>7e32da011f725ee1ac88613f985f9cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CounterType</type>
      <name>referenceCount</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ReferenceCounted.html</anchorfile>
      <anchor>60b334b65f07ef737f93c5689a0b0e21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>incrementReferenceCount</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ReferenceCounted.html</anchorfile>
      <anchor>c31f07324fa12046f4fdcf49f0602bb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>decrementReferenceCount</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ReferenceCounted.html</anchorfile>
      <anchor>42af48cd5d6c03a2a23921aa61f0615f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CounterType</type>
      <name>theReferenceCounter</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ReferenceCounted.html</anchorfile>
      <anchor>cc5ce8e612c19b2a1ad4104881772eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RCPtrBase</name>
      <anchorfile>classThePEG_1_1Pointer_1_1ReferenceCounted.html</anchorfile>
      <anchor>04ca035b54b93702449f37ec823402bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ThePEG::Units</name>
    <filename>namespaceThePEG_1_1Units.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>Mass</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>ae6cb80fbc650f47d2656386ccc60f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Energy</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>a4112a82fc747f096a940ef8bfe03570</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Time</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>bb5024dd102be9ccc7e43ed5ce4bea46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Length</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>e447641daf9048a0444c2229970d6d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Charge</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>b18f767001b70b8cd5b80b2ca503fe3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>AngularMomentum</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>68a0fa66d56ab63d3d9f156c7ba6ff00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Area</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>cede624647513c38925e066d1cb695ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Area</type>
      <name>CrossSection</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>7620dab091043932282955aa4ad44c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Energy2</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>4fc1f474b22e9f0bbd97c18a2d7d2185</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Energy4</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>67b1d9795b97fcbc6037af5325f79234</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Energy2XSec</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>4c93113091c739d0bf05a57b6b4bee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>DiffXSec</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>63a59364f83fec9e4db57ca8f8a89a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Diff2XSec</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>e95dfafdd18cc52e7902e7b8037a1b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Diff3XSec</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>c284951c079e706b0b71b238b3ac858b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>InvEnergy</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>bc3d1360d490ddf17a23544bbb405f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>InvEnergy2</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>eed5eb3a4e06d4ff346847062f2c929d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>InvEnergy4</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>627f3a17d9bb50ba8cf0c78c7c8ddfd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Energy2</type>
      <name>Scale</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>d191716dcdaa3fa78c5f8b5238a7e958</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Vector3</type>
      <name>Point</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>163207d4abbaa5cb276324be3d866186</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Vector3</type>
      <name>Distance</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>b8fd5e19dd12638f3555c8698126608a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Vector3</type>
      <name>Momentum3</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>53935a7b31b720538ef28864aa131d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LorentzVector</type>
      <name>LorentzDistance</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>4e5fabb958e78f14590aca984eedf18a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Lorentz5Vector&lt; Length &gt;</type>
      <name>Lorentz5Distance</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>87fad171237a9bb7e045a77e0d4842a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LorentzVector</type>
      <name>LorentzPoint</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>77c745ea04b318814ae3d82b48536216</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LorentzVector</type>
      <name>LorentzMomentum</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>1b751110e2c07589f1ff488fd918961b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Lorentz5Vector&lt; Energy &gt;</type>
      <name>Lorentz5Momentum</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>5237d7818ebdcaa7993c67dc28ed2d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Transverse&lt; Energy &gt;</type>
      <name>TransverseMomentum</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>ba05047cfbf1b30f210f9387444b9bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Energy2</type>
      <name>GeV2</name>
      <anchorfile>namespaceThePEG_1_1Units.html</anchorfile>
      <anchor>9db9c66e6552c703eb717b8578f322bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
</tagfile>
