// -*- C++ -*-
//
// ${ModelName}.cc is a part of Herwig - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the non-inlined, non-templated member
// functions of the ${ModelName} class.
//

#include "${ModelName}.h"
#include "ThePEG/Interface/ClassDocumentation.h"
#include "ThePEG/Interface/Reference.h"
#include "ThePEG/Interface/Parameter.h"
#include "ThePEG/Persistency/PersistentOStream.h"
#include "ThePEG/Persistency/PersistentIStream.h"
#include "ThePEG/Helicity/Vertex/VertexBase.h"
#include "ThePEG/Utilities/DescribeClass.h"
#include <fstream>

//#include "Herwig/Models/General/ModelGenerator.h"

using namespace ThePEG;
using namespace Herwig;

void ${ModelName}::doinit() {
  ${doinit}
  BSMModel::doinit();
  ${addVertex}
  writeParamCard();
}

void ${ModelName}::doinitrun() {
  BSMModel::doinitrun();
  writeParamCard();
}


void ${ModelName}::writeParamCard() const {
  ofstream card("param_card.dat");

  card 
    << "#####################################################\n"
    << "## DO NOT EDIT - GENERATED BY HERWIG UFO CONVERTER ##\n"
    << "#####################################################\n\n";

  card 
    ${param_card_data}
    << '\n';

  card.close();
}
