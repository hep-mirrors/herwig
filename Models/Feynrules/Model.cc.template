// -*- C++ -*-
//
// FeynRulesModel.cc is a part of Herwig++ - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig++ is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the non-inlined, non-templated member
// functions of the FeynRulesModel class.
//

#include "Model.h"
#include "ThePEG/Interface/ClassDocumentation.h"
#include "ThePEG/Interface/Reference.h"
#include "ThePEG/Interface/Parameter.h"
#include "ThePEG/Persistency/PersistentOStream.h"
#include "ThePEG/Persistency/PersistentIStream.h"
#include "Herwig++/Models/General/ModelGenerator.h"

namespace Herwig {
using namespace ThePEG;

IBPtr FeynRulesModel::clone() const {
  return new_ptr(*this);
}

IBPtr FeynRulesModel::fullclone() const {
  return new_ptr(*this);
}

void FeynRulesModel::doinit() {
  StandardModel::doinit();
  $addVertex
}

void FeynRulesModel::persistentOutput(PersistentOStream & os) const {
  $ostream ;
}

void FeynRulesModel::persistentInput(PersistentIStream & is, int) {
  $istream ;
}

ClassDescription<FeynRulesModel> FeynRulesModel::initFeynRulesModel;
// Definition of the static class description member.

void FeynRulesModel::Init() {
$refs

static ClassDocumentation<FeynRulesModel> documentation
  ("The FeynRulesModel class inherits from StandardModel"
   "and supplies additional couplings and access to the FeynRulesModel"
   "vertices for helicity amplitude calculations" );

}
}

