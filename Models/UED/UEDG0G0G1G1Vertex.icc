// -*- C++ -*-
//
// UEDG0G0G1G1Vertex.icc is a part of Herwig++ - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig++ is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the UEDG0G0G1G1Vertex class.
//

namespace Herwig {

inline UEDG0G0G1G1Vertex::UEDG0G0G1G1Vertex() {
  vector<int> kk1g(1, 5100021), smgl(1, 21);
  setList(smgl, smgl, kk1g, kk1g);
}

inline IBPtr UEDG0G0G1G1Vertex::clone() const {
  return new_ptr(*this);
}

inline IBPtr UEDG0G0G1G1Vertex::fullclone() const {
  return new_ptr(*this);
}

inline void UEDG0G0G1G1Vertex::doinit() throw(InitException) {
  VVVVVertex::doinit();
  theUEDBase = dynamic_ptr_cast<tUEDBasePtr>(generator()->standardModel());
  if(!theUEDBase)
    throw InitException() << "UEDG0G0G1G1Vertex::doinit() - The pointer to "
			  << "the UEDBase object is null!"
			  << Exception::runerror;
//   setType(1);
//   setOrder(0, 1, 2, 3);
  orderInGs(2);
  orderInGem(0);
}

}
