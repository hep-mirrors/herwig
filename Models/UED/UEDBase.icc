// -*- C++ -*-
//
// UEDBase.icc is a part of Herwig++ - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig++ is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the UEDBase class.
//

namespace Herwig {

inline IBPtr UEDBase::clone() const {
  return new_ptr(*this);
}

inline IBPtr UEDBase::fullclone() const {
  return new_ptr(*this);
}

inline InvEnergy UEDBase::compactRadius() const {
  return 1./theInvRadius;
}

inline void UEDBase::addMassElement(IDMassPair elem) {
  theMasses.push_back(elem);
}

inline void UEDBase::addMixingAngle(const unsigned int n, 
				    const double val) {
  theMixingAngles.insert(make_pair(n, val));
}

inline bool UEDBase::lowerMass(const pair<long, Energy> & p1, 
			       const pair<long, Energy> & p2) {
  return p1.second < p2.second;
}

inline double UEDBase::sinThetaOne() const {
  return theSinThetaOne;
}

}
