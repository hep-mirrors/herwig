// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the LightBaryonQuarkModelFormFactor class.
//

namespace Herwig {
using namespace ThePEG;

inline LightBaryonQuarkModelFormFactor::LightBaryonQuarkModelFormFactor() 
{
  // the various decay modes handled by the model and the parameters
  // neutron to proton
  addFormFactor(2112,2212,2,2,2,1,1,2);
  _f1.push_back(1.00);_f2.push_back(1.81/GeV);
  _g1.push_back(1.25);_g2.push_back(0.00/GeV);
  _Lambdaf1.push_back(0.69*GeV);_Lambdaf2.push_back(0.96*GeV);
  _Lambdag1.push_back(0.76*GeV);_Lambdag2.push_back(1.04*GeV);
  // sigma+  to lambda
  addFormFactor(3222,3122,2,2,3,2,2,1);
  _f1.push_back(0.00);_f2.push_back(1.04/GeV);
  _g1.push_back(0.60);_g2.push_back(0.00/GeV);
  _Lambdaf1.push_back(1.*GeV);_Lambdaf2.push_back(1.*GeV);
  _Lambdag1.push_back(0.77*GeV);_Lambdag2.push_back(1.05*GeV);
  // sigma-  to lambda
  addFormFactor(3112,3122,2,2,3,1,1,2);
  _f1.push_back(0.00);_f2.push_back(1.04/GeV);
  _g1.push_back(0.60);_g2.push_back(0.00/GeV);
  _Lambdaf1.push_back(1.00*GeV);_Lambdaf2.push_back(1.00*GeV);
  _Lambdag1.push_back(0.77*GeV);_Lambdag2.push_back(1.05*GeV);
  // sigma-  to sigma0
  addFormFactor(3112,3212,2,2,3,1,1,2);
  _f1.push_back(1.41);_f2.push_back(0.76/GeV);
  _g1.push_back(0.69);_g2.push_back(0.00/GeV);
  _Lambdaf1.push_back(0.60*GeV);_Lambdaf2.push_back(0.81*GeV);
  _Lambdag1.push_back(0.77*GeV);_Lambdag2.push_back(1.04*GeV);
  // sigma0  to sigma+
  addFormFactor(3212,3222,2,2,3,2,1,2);
  _f1.push_back(-1.41);_f2.push_back(-0.76/GeV);
  _g1.push_back(-0.69);_g2.push_back( 0.00/GeV);
  _Lambdaf1.push_back(0.60*GeV);_Lambdaf2.push_back(0.81*GeV);
  _Lambdag1.push_back(0.77*GeV);_Lambdag2.push_back(1.04*GeV);
  // Xi- to Xi0
  addFormFactor(3312,3322,2,2,3,3,1,2);
  _f1.push_back(-1.00);_f2.push_back(0.73/GeV);
  _g1.push_back( 0.24);_g2.push_back(0.00/GeV);
  _Lambdaf1.push_back(0.56*GeV);_Lambdaf2.push_back(0.71*GeV);
  _Lambdag1.push_back(0.76*GeV);_Lambdag2.push_back(1.04*GeV);
  // lambda to proton
  addFormFactor(3122,2212,2,2,1,2,3,2);
  _f1.push_back(-1.19);_f2.push_back(-0.850/GeV);
  _g1.push_back(-0.99);_g2.push_back(-0.025/GeV);
  _Lambdaf1.push_back(0.71*GeV);_Lambdaf2.push_back(0.98*GeV);
  _Lambdag1.push_back(0.81*GeV);_Lambdag2.push_back(1.12*GeV);
  // sigma0 to proton
  addFormFactor(3212,2212,2,2,2,1,3,2);
  _f1.push_back(-0.69);_f2.push_back(0.44/GeV);
  _g1.push_back( 0.19);_g2.push_back(0.0043/GeV);
  _Lambdaf1.push_back(0.64*GeV);_Lambdaf2.push_back(0.84*GeV);
  _Lambdag1.push_back(0.83*GeV);_Lambdag2.push_back(1.16*GeV);
  // sigma- to neutron
  addFormFactor(3112,2112,2,2,1,1,3,2);
  _f1.push_back(-0.97);_f2.push_back(0.62/GeV);
  _g1.push_back(0.27);_g2.push_back(0.0061/GeV);
  _Lambdaf1.push_back(0.64*GeV);_Lambdaf2.push_back(0.90*GeV);
  _Lambdag1.push_back(0.83*GeV);_Lambdag2.push_back(1.16*GeV);
  // xi- to lambda
  addFormFactor(3312,3122,2,2,3,1,3,2);
  _f1.push_back(1.19);_f2.push_back(0.07/GeV);
  _g1.push_back(0.33);_g2.push_back(0.0076/GeV);
  _Lambdaf1.push_back(0.68*GeV);_Lambdaf2.push_back(0.89*GeV);
  _Lambdag1.push_back(0.81*GeV);_Lambdag2.push_back(1.10*GeV);
  // xi- to sigma0
  addFormFactor(3312,3212,2,2,3,1,3,2);
  _f1.push_back(0.69);_f2.push_back(0.98/GeV);
  _g1.push_back(0.94);_g2.push_back(0.021/GeV);
  _Lambdaf1.push_back(0.75*GeV);_Lambdaf2.push_back(1.05*GeV);
  _Lambdag1.push_back(0.81*GeV);_Lambdag2.push_back(1.12*GeV);
  // xi0 to sigma+
  addFormFactor(3322,3222,2,2,3,2,3,2);
  _f1.push_back(0.98);_f2.push_back(1.38/GeV);
  _g1.push_back(1.33);_g2.push_back(0.031/GeV);
  _Lambdaf1.push_back(0.75*GeV);_Lambdaf2.push_back(1.05*GeV);
  _Lambdag1.push_back(0.81*GeV);_Lambdag2.push_back(1.12*GeV);
}

inline LightBaryonQuarkModelFormFactor::LightBaryonQuarkModelFormFactor(const LightBaryonQuarkModelFormFactor & x)
  : BaryonFormFactor(x), _f1(x._f1), _f2(x._f2), _g1(x._g1), _g2(x._g2),
    _Lambdaf1(x._Lambdaf1),_Lambdaf2(x._Lambdaf2),_Lambdag1(x._Lambdag1),
    _Lambdag2(x._Lambdag2) {}

inline IBPtr LightBaryonQuarkModelFormFactor::clone() const {
  return new_ptr(*this);
}

inline IBPtr LightBaryonQuarkModelFormFactor::fullclone() const {
  return new_ptr(*this);
}

inline void LightBaryonQuarkModelFormFactor::doupdate() throw(UpdateException) {
  BaryonFormFactor::doupdate();
  // First update base class.
  bool redo = touched();
  // redo if touched.
//  UpdateChecker::check(aDependentMember, redo);
  // Update referenced objects on which this depends redo is set to true
  // if the dependent object is touched.
//  for_each(ContainerOfDependencies, UpdateChecker(redo));
  // Update a container of references.
//  for_each(MapOfDependencies, UpdateMapChecker(redo));
  // Update a map of references.
  if ( !redo ) return;
  // return if nothing has been touched. Otherwise do the actual update.
//  touch()
  // Touch if anything has changed.
}

inline void LightBaryonQuarkModelFormFactor::doinit() throw(InitException) {
  BaryonFormFactor::doinit();
  // check that the parameters are consistent
  unsigned int isize=numberOfFactors();
  if(isize!=_f1.size()||isize!=_f2.size()||isize!=_g1.size()||isize!=_g2.size()||
     isize!=_Lambdaf1.size()||isize!=_Lambdaf2.size()||
     isize!=_Lambdag1.size()||isize!=_Lambdag2.size())
    {throw InitException() << "Inconsistent parameters in "
			   << "LightBaryonQuarkModelFormFactor::doinit()" 
			   << Exception::abortnow;}
}

inline void LightBaryonQuarkModelFormFactor::dofinish() {
  BaryonFormFactor::dofinish();
}

inline void LightBaryonQuarkModelFormFactor::doinitrun() {
  BaryonFormFactor::doinitrun();
}

inline void LightBaryonQuarkModelFormFactor::rebind(const TranslationMap & trans)
  throw(RebindException) {
  // dummy = trans.translate(dummy);
  BaryonFormFactor::rebind(trans);
}

inline IVector LightBaryonQuarkModelFormFactor::getReferences() {
  IVector ret = BaryonFormFactor::getReferences();
  // ret.push_back(dummy);
  return ret;
}

}
