// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the WSBFormFactor class.
//

namespace Herwig {
using namespace ThePEG;

inline WSBFormFactor::WSBFormFactor() 
{
  // modes handled by this and the parameters model
  // K to pi
  _F0.push_back(0.992);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(0.494*GeV);_mV0.push_back(0.892*GeV);
  _mS1.push_back(1.430*GeV);_mV1.push_back(1.273*GeV);
  _F0.push_back(0.992);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(0.498*GeV);_mV0.push_back(0.896*GeV);
  _mS1.push_back(1.430*GeV);_mV1.push_back(1.273*GeV);
  addFormFactor(321, 111,0,2,-3,-2);
  addFormFactor(311,-211,0,1,-3,-2);
  // D to K
  _F0.push_back(0.762);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(1.97*GeV);_mV0.push_back(2.11*GeV);
  _mS1.push_back(2.60*GeV);_mV1.push_back(2.53*GeV);
  _F0.push_back(0.762);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(1.97*GeV);_mV0.push_back(2.11*GeV);
  _mS1.push_back(2.60*GeV);_mV1.push_back(2.53*GeV);
  addFormFactor(421,-321,0,-2,4,3);
  addFormFactor(411,-311,0,-1,4,3);
  // D to pi
  _F0.push_back(0.692);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(1.87*GeV);_mV0.push_back(2.01*GeV);
  _mS1.push_back(2.47*GeV);_mV1.push_back(2.42*GeV);
  _F0.push_back(0.692);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(1.87*GeV);_mV0.push_back(2.01*GeV);
  _mS1.push_back(2.47*GeV);_mV1.push_back(2.42*GeV);
  addFormFactor(421,-211,0,-2,4,3);
  addFormFactor(411, 111,0,-1,4,3);
  // D to eta
  _F0.push_back(0.681);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(1.87*GeV);_mV0.push_back(2.01*GeV);
  _mS1.push_back(2.47*GeV);_mV1.push_back(2.42*GeV);
  addFormFactor(421,221,0,-2,4,2);
  // D to eta'
  _F0.push_back(0.655);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(1.87*GeV);_mV0.push_back(2.01*GeV);
  _mS1.push_back(2.47*GeV);_mV1.push_back(2.42*GeV);
  addFormFactor(421,331,0,-2,4,2);
  // D to K*
  _F0.push_back(0.000);_V.push_back(1.226);_A0.push_back(0.733);
  _A1.push_back(0.880);_A2.push_back(1.147);
  _mS0.push_back(1.97*GeV);_mV0.push_back(2.11*GeV);
  _mS1.push_back(2.60*GeV);_mV1.push_back(2.53*GeV);
  _F0.push_back(0.000);_V.push_back(1.226);_A0.push_back(0.733);
  _A1.push_back(0.880);_A2.push_back(1.147);
  _mS0.push_back(1.97*GeV);_mV0.push_back(2.11*GeV);
  _mS1.push_back(2.60*GeV);_mV1.push_back(2.53*GeV);
  addFormFactor(421,-323,1,-2,4,3);
  addFormFactor(411,-313,1,-1,4,3);
  // D to rho
  _F0.push_back(0.000);_V.push_back(1.225);_A0.push_back(0.669);
  _A1.push_back(0.775);_A2.push_back(0.923);
  _mS0.push_back(1.87*GeV);_mV0.push_back(2.01*GeV);
  _mS1.push_back(2.47*GeV);_mV1.push_back(2.42*GeV);
  _F0.push_back(0.000);_V.push_back(1.225);_A0.push_back(0.669);
  _A1.push_back(0.775);_A2.push_back(0.923);
  _mS0.push_back(1.87*GeV);_mV0.push_back(2.01*GeV);
  _mS1.push_back(2.47*GeV);_mV1.push_back(2.42*GeV);
  addFormFactor(421,-213,1,-2,4,1);
  addFormFactor(411, 113,1,-1,4,1);
  // D to omega
  _F0.push_back(0.000);_V.push_back(1.236);_A0.push_back(0.669);
  _A1.push_back(0.772);_A2.push_back(0.920);
  _mS0.push_back(1.87*GeV);_mV0.push_back(2.01*GeV);
  _mS1.push_back(2.47*GeV);_mV1.push_back(2.42*GeV);
  addFormFactor(411,223,1,-1,4,1);
  // D_s to eta
  _F0.push_back(0.723);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(1.97*GeV);_mV0.push_back(2.11*GeV);
  _mS1.push_back(2.60*GeV);_mV1.push_back(2.53*GeV);
  addFormFactor(431,221,0,-3,4,3);
  // D_s to eta'
  _F0.push_back(0.704);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(1.97*GeV);_mV0.push_back(2.11*GeV);
  _mS1.push_back(2.60*GeV);_mV1.push_back(2.53*GeV);
  addFormFactor(431,331,0,-3,4,3);
  // D_s to K
  _F0.push_back(0.643);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(1.87*GeV);_mV0.push_back(2.01*GeV);
  _mS1.push_back(2.47*GeV);_mV1.push_back(2.42*GeV);
  addFormFactor(431,311,0,-3,4,1);
  // D_s to K*
  _F0.push_back(0.000);_V.push_back(1.250);_A0.push_back(0.634);
  _A1.push_back(0.717);_A2.push_back(0.853);
  _mS0.push_back(1.87*GeV);_mV0.push_back(2.01*GeV);
  _mS1.push_back(2.47*GeV);_mV1.push_back(2.42*GeV);
  addFormFactor(431,313,1,-3,4,1);
  // D_s to phi
  _F0.push_back(0.000);_V.push_back(1.319);_A0.push_back(0.700);
  _A1.push_back(0.820);_A2.push_back(1.076);
  _mS0.push_back(1.97*GeV);_mV0.push_back(2.11*GeV);
  _mS1.push_back(2.60*GeV);_mV1.push_back(2.53*GeV);
  addFormFactor(431,333,1,-3,4,3);
  // B to D
  _F0.push_back(0.690);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(6.30*GeV);_mV0.push_back(6.34*GeV);
  _mS1.push_back(6.80*GeV);_mV1.push_back(6.73*GeV);
  _F0.push_back(0.690);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(6.30*GeV);_mV0.push_back(6.34*GeV);
  _mS1.push_back(6.80*GeV);_mV1.push_back(6.73*GeV);
  addFormFactor(521,-421,0,2,-5,-4);
  addFormFactor(511,-411,0,2,-5,-4);
  // B to K 
  _F0.push_back(0.379);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(5.38*GeV);_mV0.push_back(5.43*GeV);
  _mS1.push_back(5.89*GeV);_mV1.push_back(5.82*GeV);
  _F0.push_back(0.379);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(5.38*GeV);_mV0.push_back(5.43*GeV);
  _mS1.push_back(5.89*GeV);_mV1.push_back(5.82*GeV);
  addFormFactor(521,321,0,2,-5,-3);
  addFormFactor(511,311,0,1,-5,-3);
  // B to pi
  _F0.push_back(0.333);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(5.27*GeV);_mV0.push_back(5.32*GeV);
  _mS1.push_back(5.78*GeV);_mV1.push_back(5.71*GeV);
  _F0.push_back(0.333);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(5.27*GeV);_mV0.push_back(5.32*GeV);
  _mS1.push_back(5.78*GeV);_mV1.push_back(5.71*GeV);
  addFormFactor(521, 111,0,2,-5,-2);
  addFormFactor(511,-211,0,1,-5,-2);
  // B to eta
  _F0.push_back(0.307);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(5.27*GeV);_mV0.push_back(5.32*GeV);
  _mS1.push_back(5.78*GeV);_mV1.push_back(5.71*GeV);
  addFormFactor(521,221,0,2,-5,-2);
  // B to eta'
  _F0.push_back(0.254);_V.push_back(0.000);_A0.push_back(0.000);
  _A1.push_back(0.000);_A2.push_back(0.000);
  _mS0.push_back(5.27*GeV);_mV0.push_back(5.32*GeV);
  _mS1.push_back(5.78*GeV);_mV1.push_back(5.71*GeV);
  addFormFactor(521,331,0,2,-5,2);
  // B to D*
  _F0.push_back(0.000);_V.push_back(0.705);_A0.push_back(0.623);
  _A1.push_back(0.651);_A2.push_back(0.686);
  _mS0.push_back(6.30*GeV);_mV0.push_back(6.34*GeV);
  _mS1.push_back(6.80*GeV);_mV1.push_back(6.73*GeV);
  _F0.push_back(0.000);_V.push_back(0.705);_A0.push_back(0.623);
  _A1.push_back(0.651);_A2.push_back(0.686);
  _mS0.push_back(6.30*GeV);_mV0.push_back(6.34*GeV);
  _mS1.push_back(6.80*GeV);_mV1.push_back(6.73*GeV);
  addFormFactor(521,-423,1,2,-5,-4);
  addFormFactor(511,-413,1,1,-5,-4);
  // B to K*
  _F0.push_back(0.000);_V.push_back(0.369);_A0.push_back(0.321);
  _A1.push_back(0.328);_A2.push_back(0.331);
  _mS0.push_back(5.38*GeV);_mV0.push_back(5.43*GeV);
  _mS1.push_back(5.89*GeV);_mV1.push_back(5.82*GeV);
  _F0.push_back(0.000);_V.push_back(0.369);_A0.push_back(0.321);
  _A1.push_back(0.328);_A2.push_back(0.331);
  _mS0.push_back(5.38*GeV);_mV0.push_back(5.43*GeV);
  _mS1.push_back(5.89*GeV);_mV1.push_back(5.82*GeV);
  addFormFactor(521,323,1,2,-5,-3);
  addFormFactor(511,313,1,1,-5,-3);
  // B to rho 
  _F0.push_back(0.000);_V.push_back(0.329);_A0.push_back(0.281);
  _A1.push_back(0.283);_A2.push_back(0.283);
  _mS0.push_back(5.27*GeV);_mV0.push_back(5.32*GeV);
  _mS1.push_back(5.78*GeV);_mV1.push_back(5.71*GeV);
  _F0.push_back(0.000);_V.push_back(0.329);_A0.push_back(0.281);
  _A1.push_back(0.283);_A2.push_back(0.283);
  _mS0.push_back(5.27*GeV);_mV0.push_back(5.32*GeV);
  _mS1.push_back(5.78*GeV);_mV1.push_back(5.71*GeV);
  addFormFactor(521, 113,1,2,-5,-2);
  addFormFactor(511,-213,1,1,-5,-2);
  // B to omega
  _F0.push_back(0.000);_V.push_back(0.328);_A0.push_back(0.280);
  _A1.push_back(0.281);_A2.push_back(0.281);
  _mS0.push_back(5.27*GeV);_mV0.push_back(5.32*GeV);
  _mS1.push_back(5.78*GeV);_mV1.push_back(5.71*GeV);
  addFormFactor(521,223,1,2,-5,2);

}

inline WSBFormFactor::WSBFormFactor(const WSBFormFactor & x)
  : ScalarFormFactor(x), _F0(x._F0),_V(x._V),_A0(x._A0),_A1(x._A1),
    _A2(x._A2),_mS0(x._mS0),_mS1(x._mS1), _mV0(x._mV0),_mV1(x._mV1) {}

inline IBPtr WSBFormFactor::clone() const {
  return new_ptr(*this);
}

inline IBPtr WSBFormFactor::fullclone() const {
  return new_ptr(*this);
}

inline void WSBFormFactor::doupdate() throw(UpdateException) {
  ScalarFormFactor::doupdate();
  // First update base class.
  bool redo = touched();
  // redo if touched.
//  UpdateChecker::check(aDependentMember, redo);
  // Update referenced objects on which this depends redo is set to true
  // if the dependent object is touched.
//  for_each(ContainerOfDependencies, UpdateChecker(redo));
  // Update a container of references.
//  for_each(MapOfDependencies, UpdateMapChecker(redo));
  // Update a map of references.
  if ( !redo ) return;
  // return if nothing has been touched. Otherwise do the actual update.
//  touch()
  // Touch if anything has changed.
}

inline void WSBFormFactor::doinit() throw(InitException) {
  ScalarFormFactor::doinit();
  unsigned int isize=numberOfFactors();
  if(isize!=_F0.size() ||isize!=_V.size()  ||isize!=_A0.size() ||
     isize!=_A1.size() ||isize!=_A2.size() ||isize!=_mS0.size()||
     isize!=_mS1.size()||isize!=_mV0.size()||isize!=_mV1.size())
    {throw InitException() << "Inconsistent parameters in WSBFormFactor::doinit()" 
			   << Exception::abortnow;}
}

inline void WSBFormFactor::dofinish() {
  ScalarFormFactor::dofinish();
}

inline void WSBFormFactor::doinitrun() {
  ScalarFormFactor::doinitrun();
}

inline void WSBFormFactor::rebind(const TranslationMap & trans)
  throw(RebindException) {
  // dummy = trans.translate(dummy);
  ScalarFormFactor::rebind(trans);
}

inline IVector WSBFormFactor::getReferences() {
  IVector ret = ScalarFormFactor::getReferences();
  // ret.push_back(dummy);
  return ret;
}

}
