// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the DtoKPiPiMarkIII class.
//

namespace Herwig {

inline IBPtr DtoKPiPiMarkIII::clone() const {
  return new_ptr(*this);
}

inline IBPtr DtoKPiPiMarkIII::fullclone() const {
  return new_ptr(*this);
}

inline Complex DtoKPiPiMarkIII::amplitude(bool rho, Energy mD, 
					  Energy mA , Energy mB , Energy mC ,
					  Energy mAB, Energy mAC, Energy mBC,
					  Energy mres, Energy wres) const {
  InvEnergy radius = rho ? _rrho : _rKstar;
  Energy  pAB  = Kinematics::CMMomentum(mAB ,mA,mB);
  Energy  pR   = Kinematics::CMMomentum(mres,mA,mB);
  Energy2 mgam = wres*sqr(mres)/mAB*Math::powi(pAB/pR,3)*
    (1.+sqr(radius*pR))/(1.+sqr(radius*pAB));
  Energy2 s = (sqr(mAC)-sqr(mBC)-(sqr(mD)-sqr(mC))*(sqr(mA)-sqr(mB))/sqr(mres))*
    sqrt((1.+sqr(radius*pR))/(1.+sqr(radius*pAB))); 
  Complex output=s/((sqr(mres)- sqr(mAB)-Complex(0.,mgam)));
  return output;
}
}
