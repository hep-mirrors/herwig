// -*- C++ -*-
//
// TauDecayer.icc is a part of Herwig++ - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig++ is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the TauDecayer class.
//
//  Author: Peter Richardson
//
namespace Herwig {
using namespace ThePEG;

inline TauDecayer::TauDecayer() {
  // default value of the fermi constant taken from PDG 2006
  _gf = 1.16637E-5/GeV2;
  // intermediates
  generateIntermediates(true);
}

inline IBPtr TauDecayer::clone() const {
  return new_ptr(*this);
}

inline IBPtr TauDecayer::fullclone() const {
  return new_ptr(*this);
}

inline void TauDecayer::doinitrun() {
  _current->initrun();
  DecayIntegrator::doinitrun();
  if(initialize()) {
    _weights.clear();_wgtloc.clear();_wgtmax.clear();
    unsigned int ix,iy;
    for(ix=0;ix<numberModes();++ix) {
      _wgtmax.push_back(mode(ix)->maxWeight());
      _wgtloc.push_back(_weights.size());
      for(iy=0;iy<mode(ix)->numberChannels();++iy) {
	_weights.push_back(mode(ix)->channelWeight(iy));
      }
    }
  }
}
  
}
