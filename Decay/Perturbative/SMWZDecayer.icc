// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the SMWZDecayer class.
//

namespace Herwig {
using namespace ThePEG;

inline SMWZDecayer::SMWZDecayer() 
 {
   _Zquarkwgt.resize(5,0.);
   _Wquarkwgt.resize(6,0.);
   _Zleptonwgt.resize(6,0.);
   _Wleptonwgt.resize(3,0.);
   _Zquarkwgt[0]=370.081;
   _Zquarkwgt[1]=286.995;
   _Zquarkwgt[2]=370.074;
   _Zquarkwgt[3]=286.671;
   _Zquarkwgt[4]=366.489;
   _Zleptonwgt[0]=83.9528;
   _Zleptonwgt[1]=167.04;
   _Zleptonwgt[2]=83.9521;
   _Zleptonwgt[3]=167.04;
   _Zleptonwgt[4]=83.7659;
   _Zleptonwgt[5]=167.04;
   _Wquarkwgt[0]=638.417;
   _Wquarkwgt[1]=32.5727;
   _Wquarkwgt[2]=32.6351;
   _Wquarkwgt[3]=637.169;
   _Wquarkwgt[4]=6.62717e-05;
   _Wquarkwgt[5]=1.01539;
   _Wleptonwgt[0]=223.684;
   _Wleptonwgt[1]=223.684;
   _Wleptonwgt[2]=223.52;
 }

inline SMWZDecayer::SMWZDecayer(const SMWZDecayer & x)
  : DecayIntegrator(x), _Zquarkwgt(x._Zquarkwgt), _Zleptonwgt(x._Zleptonwgt),
    _Wquarkwgt(x._Wquarkwgt), _Wleptonwgt(x._Wleptonwgt) {}

inline IBPtr SMWZDecayer::clone() const {
  return new_ptr(*this);
}

inline IBPtr SMWZDecayer::fullclone() const {
  return new_ptr(*this);
}

inline void SMWZDecayer::doupdate() throw(UpdateException) {
  DecayIntegrator::doupdate();
  // First update base class.
  bool redo = touched();
  // redo if touched.
//  UpdateChecker::check(aDependentMember, redo);
  // Update referenced objects on which this depends redo is set to true
  // if the dependent object is touched.
//  for_each(ContainerOfDependencies, UpdateChecker(redo));
  // Update a container of references.
//  for_each(MapOfDependencies, UpdateMapChecker(redo));
  // Update a map of references.
  if ( !redo ) return;
  // return if nothing has been touched. Otherwise do the actual update.
//  touch()
  // Touch if anything has changed.
}

inline void SMWZDecayer::doinit() throw(InitException) {
  DecayIntegrator::doinit();
  // get the vertices from the Standard Model object
  Ptr<Herwig::StandardModel>::transient_const_pointer 
    hwsm=dynamic_ptr_cast<Ptr<Herwig::StandardModel>::transient_const_pointer>(standardModel());
  if(hwsm)
    {
      _Wvertex = hwsm->vertexFFW();
      _Zvertex = hwsm->vertexFFZ();
      // make sure they are initialized
      _Wvertex->init();
      _Zvertex->init();
    }
  else
    {throw InitException();}
  // now set up the decay modes
  DecayPhaseSpaceModePtr mode;
  PDVector extpart(3);
  vector<double> wgt(0);
  // the Z decay modes
  extpart[0]=getParticleData(ParticleID::Z0);
  // loop over the  quarks and the leptons
  unsigned int ix,istep=0,iy;
  for( ;istep<11;istep+=10)
    {
      for(ix=1;ix<7;++ix)
	{
	  iy=istep+ix;
	  if(iy!=6)
	    {
	      // check that the combination of particles is allowed
	      if(_Zvertex->allowed(-iy,iy,ParticleID::Z0))
		{
		  extpart[1] = getParticleData(-iy);
		  extpart[2] = getParticleData( iy);
		  mode = new DecayPhaseSpaceMode(extpart,this);
		  if(iy<=6){addMode(mode,_Zquarkwgt[ix-1],wgt);}
		  else{addMode(mode,_Zleptonwgt[ix-11],wgt);}
		}
	      else
		{throw InitException() << "SMWZDecayer::doinit() the Z vertex" 
				       << "cannot handle all the modes" 
				       << Exception::abortnow;}
	    }
	}
    }
  // and the W modes
  extpart[0]=getParticleData(ParticleID::Wplus);
  // loop for the quarks
  unsigned int iz=0;
  for(ix=1;ix<6;ix+=2)
    {
      for(iy=2;iy<6;iy+=2)
	{
	  // check that the combination of particles is allowed
	  if(_Wvertex->allowed(-ix,iy,ParticleID::Wminus))
	    {
	      extpart[1] = getParticleData(-ix);
	      extpart[2] = getParticleData( iy);
	      mode = new DecayPhaseSpaceMode(extpart,this);
	      addMode(mode,_Wquarkwgt[iz],wgt);
	      ++iz;
	    }
	  else
	    {throw InitException() << "SMWZDecayer::doinit() the W vertex" 
				   << "cannot handle all the quark modes" 
				   << Exception::abortnow;}
	}
    }
  for(ix=11;ix<17;ix+=2)
    {
      // check that the combination of particles is allowed
      if(_Wvertex->allowed(-ix,ix+1,ParticleID::Wminus))
	{
	  extpart[1] = getParticleData(-ix);
	  extpart[2] = getParticleData(ix+1);
	  mode = new DecayPhaseSpaceMode(extpart,this);
	  addMode(mode,_Wleptonwgt[(ix-11)/2],wgt);
	}
	  else
	    {throw InitException() << "SMWZDecayer::doinit() the W vertex" 
				   << "cannot handle all the lepton modes" 
				   << Exception::abortnow;}
    }
}

inline void SMWZDecayer::dofinish() {
  DecayIntegrator::dofinish();
}

inline void SMWZDecayer::doinitrun() {
  DecayIntegrator::doinitrun();
}

inline void SMWZDecayer::rebind(const TranslationMap & trans)
  throw(RebindException) {
  // dummy = trans.translate(dummy);
  DecayIntegrator::rebind(trans);
}

inline IVector SMWZDecayer::getReferences() {
  IVector ret = DecayIntegrator::getReferences();
  // ret.push_back(dummy);
  return ret;
}

}
