// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the SMTopDecayer class.
//

namespace Herwig {
using namespace ThePEG;
  
inline SMTopDecayer::SMTopDecayer() 
  :_wquarkwgt(6,0.),
   _wleptonwgt(3,0.) 
{
  _wleptonwgt[0]=223.684;
  _wleptonwgt[1]=223.684;
  _wleptonwgt[2]=223.52;
  _wquarkwgt[0]=638.417;
  _wquarkwgt[1]=32.5727;
  _wquarkwgt[2]=32.6351;
  _wquarkwgt[3]=637.169;
  _wquarkwgt[4]=6.62717e-05;
  _wquarkwgt[5]=1.01539;
  generateIntermediates(true);
}
  
  inline IBPtr SMTopDecayer::clone() const {
    return new_ptr(*this);
  }
  
  inline IBPtr SMTopDecayer::fullclone() const {
    return new_ptr(*this);
  }
  
  inline void SMTopDecayer::doinit() throw(InitException) {
    DecayIntegrator::doinit();
    
    //get vertices from SM object
    Ptr<Herwig::StandardModel>::transient_const_pointer
      hwsm = dynamic_ptr_cast<Ptr<Herwig::StandardModel>::transient_const_pointer>(standardModel());
    if(hwsm)
      {
	_wvertex = hwsm->vertexFFW();
	//initialise
	_wvertex->init();
      }
    else{throw InitException();}
    //set up decay modes
    tPDPtr Wplus(getParticleData(ParticleID::Wplus));
    DecayPhaseSpaceModePtr mode;
    DecayPhaseSpaceChannelPtr Wchannel;
    PDVector extpart(4);
    vector<double> wgt(1,1.0);
    extpart[0] = getParticleData(ParticleID::t);
    extpart[1] = getParticleData(ParticleID::b);
    
    //lepton modes
    for(int i=11; i<17;i+=2) {
      extpart[2] = getParticleData(-i);
      extpart[3] = getParticleData(i+1);
      mode = new_ptr(DecayPhaseSpaceMode(extpart,this));
      Wchannel = new_ptr(DecayPhaseSpaceChannel(mode));
      Wchannel->addIntermediate(extpart[0],0,0.0,-1,1);
      Wchannel->addIntermediate(Wplus,0,0.0,2,3);
      Wchannel->init();
      mode->addChannel(Wchannel);
      addMode(mode,_wleptonwgt[(i-11)/2],wgt);
       }
    //quark modes
    unsigned int iz=0;
   for(int ix=1;ix<6;ix+=2)
     {
       for(int iy=2;iy<6;iy+=2)
 	{
 	  // check that the combination of particles is allowed
 	  if(_wvertex->allowed(-ix,iy,ParticleID::Wminus))
 	    {
 	      extpart[2] = getParticleData(-ix);
 	      extpart[3] = getParticleData( iy);
	      mode = new_ptr(DecayPhaseSpaceMode(extpart,this));
	      Wchannel = new_ptr(DecayPhaseSpaceChannel(mode));
	      Wchannel->addIntermediate(extpart[0],0,0.0,-1,1);
	      Wchannel->addIntermediate(Wplus,0,0.0,2,3);
	      Wchannel->init();
	      mode->addChannel(Wchannel);
 	      addMode(mode,_wquarkwgt[iz],wgt);
 	      ++iz;
 	    }
 	  else
 	    {throw InitException() << "SMTopDecayer::doinit() the W vertex" 
 				   << "cannot handle all the quark modes" 
 				   << Exception::abortnow;}
	}
     }
  }

}
