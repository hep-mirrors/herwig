// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the VectorMeson2MesonDecayer class.
//
//  Author: Peter Richardson
//

namespace Herwig {

using namespace ThePEG;

inline VectorMeson2MesonDecayer::VectorMeson2MesonDecayer() 
{
  // particles and couplings for the different modes
  // rho -> pi pi
  _incoming.push_back( 113);_outgoing1.push_back( 211);_outgoing2.push_back(-211);
  _incoming.push_back( 213);_outgoing1.push_back( 111);_outgoing2.push_back( 211);
  _incoming.push_back(-213);_outgoing1.push_back( 111);_outgoing2.push_back(-211);
  _coupling.push_back(6.);_coupling.push_back(6.);_coupling.push_back(6.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);
  // rho' -> pi pi
  _incoming.push_back( 100113);_outgoing1.push_back( 211);_outgoing2.push_back(-211);
  _incoming.push_back( 100213);_outgoing1.push_back( 111);_outgoing2.push_back( 211);
  _incoming.push_back(-100213);_outgoing1.push_back( 111);_outgoing2.push_back(-211);
  _coupling.push_back(6.);_coupling.push_back(6.);_coupling.push_back(6.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);
  // rho'' -> pi pi
  _incoming.push_back( 30113);_outgoing1.push_back( 211);_outgoing2.push_back(-211);
  _incoming.push_back( 30213);_outgoing1.push_back( 111);_outgoing2.push_back( 211);
  _incoming.push_back(-30213);_outgoing1.push_back( 111);_outgoing2.push_back(-211);
  _coupling.push_back(6.);_coupling.push_back(6.);_coupling.push_back(6.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);
  // rho'' -> pi pi
  _incoming.push_back( 30113);_outgoing1.push_back( 321);_outgoing2.push_back(-321);
  _incoming.push_back( 30113);_outgoing1.push_back( 311);_outgoing2.push_back(-311);
  _incoming.push_back( 30213);_outgoing1.push_back( 321);_outgoing2.push_back(-311);
  _incoming.push_back(-30213);_outgoing1.push_back( 311);_outgoing2.push_back(-321);
  _coupling.push_back(6.);_coupling.push_back(6.);
  _coupling.push_back(6.);_coupling.push_back(6.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  // rho'' -> pi' pi
  _incoming.push_back( 30113);_outgoing1.push_back(100211);_outgoing2.push_back(-211);
  _incoming.push_back( 30213);_outgoing1.push_back(100111);_outgoing2.push_back( 211);
  _incoming.push_back(-30213);_outgoing1.push_back(100111);_outgoing2.push_back(-211);
  _coupling.push_back(6.);_coupling.push_back(6.);_coupling.push_back(6.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);
  _incoming.push_back( 30113);_outgoing1.push_back(211);_outgoing2.push_back(-100211);
  _incoming.push_back( 30213);_outgoing1.push_back(111);_outgoing2.push_back( 100211);
  _incoming.push_back(-30213);_outgoing1.push_back(111);_outgoing2.push_back(-100211);
  _coupling.push_back(6.);_coupling.push_back(6.);_coupling.push_back(6.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);
  // rho' -> pi' pi
  _incoming.push_back( 100113);_outgoing1.push_back(100211);_outgoing2.push_back(-211);
  _incoming.push_back( 100213);_outgoing1.push_back(100111);_outgoing2.push_back( 211);
  _incoming.push_back(-100213);_outgoing1.push_back(100111);_outgoing2.push_back(-211);
  _coupling.push_back(6.);_coupling.push_back(6.);_coupling.push_back(6.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);
  _incoming.push_back( 100113);_outgoing1.push_back(211);_outgoing2.push_back(-100211);
  _incoming.push_back( 100213);_outgoing1.push_back(111);_outgoing2.push_back( 100211);
  _incoming.push_back(-100213);_outgoing1.push_back(111);_outgoing2.push_back(-100211);
  _coupling.push_back(6.);_coupling.push_back(6.);_coupling.push_back(6.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);
  // omega -> pi pi
  _incoming.push_back(223);_outgoing1.push_back( 211);_outgoing2.push_back(-211);
  _coupling.push_back(0.1847);_maxweight.push_back(2.);
  // K* decays
  _incoming.push_back( 313);_outgoing1.push_back( 321);_outgoing2.push_back(-211);
  _incoming.push_back( 313);_outgoing1.push_back( 311);_outgoing2.push_back( 111);
  _incoming.push_back( 323);_outgoing1.push_back( 311);_outgoing2.push_back( 211);
  _incoming.push_back( 323);_outgoing1.push_back( 321);_outgoing2.push_back( 111);
  _incoming.push_back(-313);_outgoing1.push_back(-321);_outgoing2.push_back( 211);
  _incoming.push_back(-313);_outgoing1.push_back(-311);_outgoing2.push_back( 111);
  _incoming.push_back(-323);_outgoing1.push_back(-311);_outgoing2.push_back(-211);
  _incoming.push_back(-323);_outgoing1.push_back(-321);_outgoing2.push_back( 111);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  // K*' decays
  _incoming.push_back( 100313);_outgoing1.push_back( 321);_outgoing2.push_back(-211);
  _incoming.push_back( 100313);_outgoing1.push_back( 311);_outgoing2.push_back( 111);
  _incoming.push_back( 100323);_outgoing1.push_back( 311);_outgoing2.push_back( 211);
  _incoming.push_back( 100323);_outgoing1.push_back( 321);_outgoing2.push_back( 111);
  _incoming.push_back(-100313);_outgoing1.push_back(-321);_outgoing2.push_back( 211);
  _incoming.push_back(-100313);_outgoing1.push_back(-311);_outgoing2.push_back( 111);
  _incoming.push_back(-100323);_outgoing1.push_back(-311);_outgoing2.push_back(-211);
  _incoming.push_back(-100323);_outgoing1.push_back(-321);_outgoing2.push_back( 111);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  // K*'' decays
  _incoming.push_back( 30313);_outgoing1.push_back( 321);_outgoing2.push_back(-211);
  _incoming.push_back( 30313);_outgoing1.push_back( 311);_outgoing2.push_back( 111);
  _incoming.push_back( 30323);_outgoing1.push_back( 311);_outgoing2.push_back( 211);
  _incoming.push_back( 30323);_outgoing1.push_back( 321);_outgoing2.push_back( 111);
  _incoming.push_back(-30313);_outgoing1.push_back(-321);_outgoing2.push_back( 211);
  _incoming.push_back(-30313);_outgoing1.push_back(-311);_outgoing2.push_back( 111);
  _incoming.push_back(-30323);_outgoing1.push_back(-311);_outgoing2.push_back(-211);
  _incoming.push_back(-30323);_outgoing1.push_back(-321);_outgoing2.push_back( 111);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _coupling.push_back(4.57);_coupling.push_back(3.23);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  // phi decays
  _incoming.push_back( 333);_outgoing1.push_back( 321);_outgoing2.push_back(-321);
  _incoming.push_back( 333);_outgoing1.push_back( 311);_outgoing2.push_back(-311);
  _incoming.push_back( 333);_outgoing1.push_back( 211);_outgoing2.push_back(-211);
  _coupling.push_back(4.48);_coupling.push_back(4.59);_coupling.push_back(8.986E-3);
  _maxweight.push_back(2.);_maxweight.push_back(2.);_maxweight.push_back(2.);
  // phi' decays
  _incoming.push_back( 100333);_outgoing1.push_back( 321);_outgoing2.push_back(-321);
  _incoming.push_back( 100333);_outgoing1.push_back( 311);_outgoing2.push_back(-311);
  _coupling.push_back(4.48);_coupling.push_back(4.59);
  _maxweight.push_back(2.);_maxweight.push_back(2.);
  // excited psi decays
  _incoming.push_back(30443);_outgoing1.push_back( 411);_outgoing2.push_back(-411);
  _incoming.push_back(30443);_outgoing1.push_back( 421);_outgoing2.push_back(-421);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // excitted psi decays
  _incoming.push_back(9000443);_outgoing1.push_back(421);_outgoing2.push_back(-421);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(9000443);_outgoing1.push_back(411);_outgoing2.push_back(-411);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // D* decays
  _incoming.push_back( 423);_outgoing1.push_back( 421);_outgoing2.push_back(111);
  _coupling.push_back(6.366);_maxweight.push_back(2.);
  _incoming.push_back(-423);_outgoing1.push_back(-421);_outgoing2.push_back(111);
  _coupling.push_back(6.366);_maxweight.push_back(2.);
  _incoming.push_back( 413);_outgoing1.push_back( 411);_outgoing2.push_back(111);
  _coupling.push_back(6.370);_maxweight.push_back(2.);
  _incoming.push_back(-413);_outgoing1.push_back(-411);_outgoing2.push_back(111);
  _coupling.push_back(6.370);_maxweight.push_back(2.);
  _incoming.push_back( 413);_outgoing1.push_back( 421);_outgoing2.push_back(211);
  _coupling.push_back(9.019);_maxweight.push_back(2.);
  _incoming.push_back(-413);_outgoing1.push_back(-421);_outgoing2.push_back(-211);
  _coupling.push_back(9.019);_maxweight.push_back(2.);
  // D_s* decays
  _incoming.push_back( 433);_outgoing1.push_back( 431);_outgoing2.push_back(111);
  _coupling.push_back(6.679);_maxweight.push_back(2.);
  _incoming.push_back(-433);_outgoing1.push_back(-431);_outgoing2.push_back(111);
  _coupling.push_back(6.679);_maxweight.push_back(2.);
  // K_1 decays to K*_0 pion
  _incoming.push_back( 10323);_outgoing1.push_back( 10321);_outgoing2.push_back( 111);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(-10323);_outgoing1.push_back(-10321);_outgoing2.push_back( 111);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back( 10323);_outgoing1.push_back( 10311);_outgoing2.push_back( 211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(-10323);_outgoing1.push_back(-10311);_outgoing2.push_back(-211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back( 10313);_outgoing1.push_back( 10311);_outgoing2.push_back( 111);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(-10313);_outgoing1.push_back(-10311);_outgoing2.push_back( 111);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back( 10313);_outgoing1.push_back( 10321);_outgoing2.push_back(-211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(-10313);_outgoing1.push_back(-10321);_outgoing2.push_back( 211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // K_1 decays to f(1370) kaon
  _incoming.push_back( 10323);_outgoing1.push_back( 321);_outgoing2.push_back( 10221);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(-10323);_outgoing1.push_back(-321);_outgoing2.push_back( 10221);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back( 10313);_outgoing1.push_back( 311);_outgoing2.push_back( 10221);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(-10313);_outgoing1.push_back(-311);_outgoing2.push_back( 10221);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // K'_1 decays to f(1370) kaon
  _incoming.push_back( 20323);_outgoing1.push_back( 321);_outgoing2.push_back( 10221);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(-20323);_outgoing1.push_back(-321);_outgoing2.push_back( 10221);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back( 20313);_outgoing1.push_back( 311);_outgoing2.push_back( 10221);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(-20313);_outgoing1.push_back(-311);_outgoing2.push_back( 10221);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // upsilon(4s)
  _incoming.push_back(300553);_outgoing1.push_back(521);_outgoing2.push_back(-521);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(300553);_outgoing1.push_back(511);_outgoing2.push_back(-511);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // jpsi to pions
  _incoming.push_back(443);_outgoing1.push_back(211);_outgoing2.push_back(-211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(443);_outgoing1.push_back(111);_outgoing2.push_back(111);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // jpsi to kaons
  _incoming.push_back(443);_outgoing1.push_back(321);_outgoing2.push_back(-321);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(443);_outgoing1.push_back(311);_outgoing2.push_back(-311);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // f_1 to a_0 pi
  _incoming.push_back(20223);_outgoing1.push_back( 9000111);_outgoing2.push_back( 111);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(20223);_outgoing1.push_back( 9000211);_outgoing2.push_back(-211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(20223);_outgoing1.push_back(-9000211);_outgoing2.push_back( 211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // f'_1 to a_0 pi
  _incoming.push_back(20333);_outgoing1.push_back( 9000111);_outgoing2.push_back( 111);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(20333);_outgoing1.push_back( 9000211);_outgoing2.push_back(-211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(20333);_outgoing1.push_back(-9000211);_outgoing2.push_back( 211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // psi(2s) to pions
  _incoming.push_back(100443);_outgoing1.push_back(211);_outgoing2.push_back(-211);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(100443);_outgoing1.push_back(111);_outgoing2.push_back(111);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  // psi(2s) to kaons
  _incoming.push_back(100443);_outgoing1.push_back(321);_outgoing2.push_back(-321);
  _coupling.push_back(1.);_maxweight.push_back(2.);
  _incoming.push_back(100443);_outgoing1.push_back(311);_outgoing2.push_back(-311);
  _coupling.push_back(1.);_maxweight.push_back(2.);
}
  
inline VectorMeson2MesonDecayer::VectorMeson2MesonDecayer(const VectorMeson2MesonDecayer & x)
  : VectorMesonDecayerBase(x), _incoming(x._incoming), _outgoing1(x._outgoing1),
    _outgoing2(x._outgoing2), _maxweight(x._maxweight), _coupling(x._coupling) {}

inline IBPtr VectorMeson2MesonDecayer::clone() const {
  return new_ptr(*this);
}
  
inline IBPtr VectorMeson2MesonDecayer::fullclone() const {
  return new_ptr(*this);
}
  
inline void VectorMeson2MesonDecayer::doupdate() throw(UpdateException) {
  VectorMesonDecayerBase::doupdate();
  // First update base class.
  bool redo = touched();
  // redo if touched.
  //  UpdateChecker::check(aDependentMember, redo);
  // Update referenced objects on which this depends redo is set to true
  // if the dependent object is touched.
  //  for_each(ContainerOfDependencies, UpdateChecker(redo));
  // Update a container of references.
  //  for_each(MapOfDependencies, UpdateMapChecker(redo));
  // Update a map of references.
  if ( !redo ) return;
  // return if nothing has been touched. Otherwise do the actual update.
  //  touch()
  // Touch if anything has changed.
}
  
inline void VectorMeson2MesonDecayer::doinit() throw(InitException) {
  VectorMesonDecayerBase::doinit();
  // check consistence of the parameters
  unsigned int isize=_incoming.size();
  if(isize!=_outgoing1.size()||isize!=_outgoing2.size()||
     isize!=_maxweight.size()||isize!=_coupling.size())
    {cerr << "Inconsistent parameters in VectorMeson2MesonDecayer" << endl;}
  // set up the integration channels
  vector<double> wgt(1,1.);
  PDVector extpart(3);
  DecayPhaseSpaceModePtr mode;
  for(unsigned int ix=0;ix<_incoming.size();++ix)
    {
      extpart[0]=getParticleData(_incoming[ix]);
      extpart[1]=getParticleData(_outgoing1[ix]);
      extpart[2]=getParticleData(_outgoing2[ix]);
      mode=new DecayPhaseSpaceMode(extpart,this);
      addMode(mode,_maxweight[ix],wgt);
    }
}
  
inline void VectorMeson2MesonDecayer::dofinish() {
  VectorMesonDecayerBase::dofinish();
}
  
inline void VectorMeson2MesonDecayer::doinitrun() {
  VectorMesonDecayerBase::doinitrun();
}
  
inline void VectorMeson2MesonDecayer::rebind(const TranslationMap & trans)
  throw(RebindException) {
  // dummy = trans.translate(dummy);
  VectorMesonDecayerBase::rebind(trans);
}
  
inline IVector VectorMeson2MesonDecayer::getReferences() {
  IVector ret = VectorMesonDecayerBase::getReferences();
  // ret.push_back(dummy);
  return ret;
}
  
}
