// -*- C++ -*-
//
// WeakDecayCurrent.icc is a part of Herwig++ - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig++ is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the WeakDecayCurrent class.
//

namespace Herwig {
using namespace ThePEG;

inline WeakDecayCurrent::WeakDecayCurrent() : _numbermodes(0) {}

inline unsigned int WeakDecayCurrent::numberOfModes() const {
  return _quark.size();
}

inline void WeakDecayCurrent::addDecayMode(int iq,int ia) {
  _quark.push_back(iq);
  _antiquark.push_back(ia);
}

inline void WeakDecayCurrent::decayModeInfo(unsigned int imode, int& iq, int& ia) const {
  if(imode<_quark.size()) {
    iq=_quark[imode];
    ia=_antiquark[imode];
  }
  else {
    iq=0;
    ia=0;
  }
}

inline void WeakDecayCurrent::setInitialModes(unsigned int nmodes) {
  _numbermodes=nmodes;
}

}
