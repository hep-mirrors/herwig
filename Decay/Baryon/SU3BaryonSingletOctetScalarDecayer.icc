// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the SU3BaryonSingletOctetScalarDecayer class.
//

namespace Herwig {
using namespace ThePEG;

inline SU3BaryonSingletOctetScalarDecayer::SU3BaryonSingletOctetScalarDecayer() 
{
  // the coupling
  _C=0.39;
  // the relative parities of the two baryon multiplets
  _parity=false;
  // the pion decay constant
  _fpi=130.7*MeV;
  // PDG codes for the various ground state baryons
  _proton   = 2212;
  _neutron  = 2112;
  _sigma0   = 3212;
  _sigmap   = 3222;
  _sigmam   = 3112;
  _lambda   = 3122;
  _xi0      = 3322;
  _xim      = 3312;
  // PDG codes for the excited baryon
  _elambda  = 13122;
}

inline SU3BaryonSingletOctetScalarDecayer::SU3BaryonSingletOctetScalarDecayer(const SU3BaryonSingletOctetScalarDecayer & x)
  : Baryon1MesonDecayerBase(x), _C(x._C), _parity(x._parity),
    _fpi(x._fpi),_proton(x._proton),_neutron(x._neutron),_sigma0(x._sigma0),
    _sigmap(x._sigmap),_sigmam(x._sigmam),_lambda(x._lambda),_xi0(x._xi0),_xim(x._xim),
    _elambda(x._elambda),_outgoingB(x._outgoingB),_outgoingM(x._outgoingM),
    _maxweight(x._maxweight), 
    _prefactor(x._prefactor) {}

inline IBPtr SU3BaryonSingletOctetScalarDecayer::clone() const {
  return new_ptr(*this);
}

inline IBPtr SU3BaryonSingletOctetScalarDecayer::fullclone() const {
  return new_ptr(*this);
}

inline void SU3BaryonSingletOctetScalarDecayer::doupdate() throw(UpdateException) {
  Baryon1MesonDecayerBase::doupdate();
  // First update base class.
  bool redo = touched();
  // redo if touched.
//  UpdateChecker::check(aDependentMember, redo);
  // Update referenced objects on which this depends redo is set to true
  // if the dependent object is touched.
//  for_each(ContainerOfDependencies, UpdateChecker(redo));
  // Update a container of references.
//  for_each(MapOfDependencies, UpdateMapChecker(redo));
  // Update a map of references.
  if ( !redo ) return;
  // return if nothing has been touched. Otherwise do the actual update.
//  touch()
  // Touch if anything has changed.
}

inline void SU3BaryonSingletOctetScalarDecayer::doinit() throw(InitException) {
  Baryon1MesonDecayerBase::doinit();
  // set up the decay modes
  setupModes(1);
  // set up the phase space and the couplings
  PDVector extpart(3);
  DecayPhaseSpaceModePtr mode;
  double wgtmax;
  vector<double> wgt(0);
  for(unsigned int ix=0;ix<_outgoingB.size();++ix)
    {
      extpart[0]=getParticleData(_elambda);
      extpart[1]=getParticleData(_outgoingB[ix]);
      extpart[2]=getParticleData(_outgoingM[ix]);
      mode=new_ptr(DecayPhaseSpaceMode(extpart,this));
      if(_maxweight.size()>numberModes()){wgtmax=_maxweight[numberModes()];}
      else{wgtmax=1.;}
      addMode(mode,wgtmax,wgt);
    }
}

inline void SU3BaryonSingletOctetScalarDecayer::dofinish() {
  Baryon1MesonDecayerBase::dofinish();
}

inline void SU3BaryonSingletOctetScalarDecayer::doinitrun() {
  Baryon1MesonDecayerBase::doinitrun();
  if(_Initialize)
    {
      _maxweight.resize(0);
      for(unsigned int ix=0;ix<numberModes();++ix)
	{_maxweight.push_back(mode(ix)->maxWeight());}
    }
}

inline void SU3BaryonSingletOctetScalarDecayer::rebind(const TranslationMap & trans)
  throw(RebindException) {
  // dummy = trans.translate(dummy);
  Baryon1MesonDecayerBase::rebind(trans);
}

inline IVector SU3BaryonSingletOctetScalarDecayer::getReferences() {
  IVector ret = Baryon1MesonDecayerBase::getReferences();
  // ret.push_back(dummy);
  return ret;
}

}
