// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the GammaGammaAnalysis class.
//

namespace Herwig {

inline GammaGammaAnalysis::GammaGammaAnalysis() :
  _ptharder(0.,250.,100), _ptsofter(0.,250.,100), _ptpair(0.,250.,100), 
  _Eharder(0.,3000.,100), _Esofter(0.,3000.,100), _Epair(0.,6000.,100), 
  _rapharder(-12.,12.,120), _rapsofter(-12.,12.,120), _rappair(-12.,12.,120), 
  _phiharder(-3.1459,3.1459,50), _phisofter(-3.1459,3.1459,50), _deltaphi(-3.1459,3.1459,100), 
  _mpair(0,1000,100)  {}

inline IBPtr GammaGammaAnalysis::clone() const {
  return new_ptr(*this);
}

inline IBPtr GammaGammaAnalysis::fullclone() const {
  return new_ptr(*this);
}

inline void GammaGammaAnalysis::dofinish() {
  AnalysisHandler::dofinish();
  string fname = CurrentGenerator::current().filename() + string("-") + name() + string(".top");
  ofstream outfile(fname.c_str());
  _ptharder.topdrawOutput(outfile,true,false,false,true,"BLACK","pt harder");
  _ptsofter.topdrawOutput(outfile,true,false,false,true,"BLACK","pt softer");
  _ptpair.topdrawOutput(outfile,true,false,false,true,"BLACK","pt pair");
  _Eharder.topdrawOutput(outfile,true,false,false,true,"BLACK","E harder");
  _Esofter.topdrawOutput(outfile,true,false,false,true,"BLACK","E softer");
  _Epair.topdrawOutput(outfile,true,false,false,true,"BLACK","E pair");
  _rapharder.topdrawOutput(outfile,true,false,false,false,"BLACK","y harder");
  _rapsofter.topdrawOutput(outfile,true,false,false,false,"BLACK","y softer");
  _rappair.topdrawOutput(outfile,true,false,false,false,"BLACK","y pair");
  _phiharder.topdrawOutput(outfile,true,false,false,false,"BLACK","phi harder");
  _phisofter.topdrawOutput(outfile,true,false,false,false,"BLACK","phi softer");
  _deltaphi.topdrawOutput(outfile,true,false,false,false,"BLACK","Delta phi");
  _mpair.topdrawOutput(outfile,true,false,false,true,"BLACK","M pair");
}

}
