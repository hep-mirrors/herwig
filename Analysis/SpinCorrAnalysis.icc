// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the SpinCorrAnalysis class.
//

namespace Herwig {

inline SpinCorrAnalysis::SpinCorrAnalysis() : theMaxInvMass(1.*MeV) {}

inline IBPtr SpinCorrAnalysis::clone() const {
  return new_ptr(*this);
}

inline IBPtr SpinCorrAnalysis::fullclone() const {
  return new_ptr(*this);
}

inline void  SpinCorrAnalysis::doinit() throw(InitException) {
  AnalysisHandler::doinit();
  Energy2 mq12 = sqr(getParticleData(5100002)->mass());
  Energy2 mz12 = sqr(getParticleData(5100023)->mass());
  Energy2 ml12 =  sqr(getParticleData(6100011)->mass());
  theMaxInvMass = sqrt( (  mq12 - mz12 )*( mz12 - ml12  )/mz12 );
}

inline void SpinCorrAnalysis::dofinish() {
  AnalysisHandler::dofinish();
  string fname = CurrentGenerator::current().filename() + string("-") + name() + string(".top");
  ofstream outfile(fname.c_str());
  thelPlus->topdrawOutput(outfile, true, false, false, false,
			 "BLACK", "Anti-lepton","","","","","");
  Energy mq1 = getParticleData(5100002)->mass();
  Energy mz1 = getParticleData(5100023)->mass();
  Energy ml1 = getParticleData(6100011)->mass();
  double x = mz1/mq1;
  double y = ml1/mz1;
  for(double mh = 0.; mh < 1.02; mh += 0.02) {
    double pro1 = 6.*mh*( y + 4.*(1. - y + x*y)*mh*mh - 
			 4.*(1. - x)*(1. - y)*pow(mh, 4) )/(1. + 2.*x)/(2. + y);
    outfile << mh << '\t' << pro1 << '\n';
  }
  outfile << "JOIN RED\n";
  thelMinus->topdrawOutput(outfile, true, false, false, false,
			   "BLACK", "lepton","","","","","");
  
  for(double mh = 0.; mh < 1.02; mh += 0.02) {
    double pro2 = 6.*mh*( 4.*x + y + 4.*(1 - 2.*x - y + x*y)*mh*mh
			  - 4.*(1. - x)*(1. - y)*pow(mh, 4) )/(1. + 2.*x)/(2. + y);
    outfile << mh << '\t' << pro2 << '\n';
  }
  outfile << "JOIN RED\n";
}

inline void SpinCorrAnalysis::doinitrun() {
  AnalysisHandler::doinitrun();
  thelPlus = new_ptr(Histogram(0, 1., 50));
  thelMinus = new_ptr(Histogram(0, 1., 50));
}

}
