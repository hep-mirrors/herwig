##################################################
# Example generator based on Tevatron parameters
# usage: Herwig++ read TVT.in
#
# Since most parameters are identical to LHC,
# we use the default LHCGenerator and adapt only
# for the differences
##################################################

##################################################
# Technical parameters for this run
##################################################
cd /Herwig/Generators
set LHCGenerator:NumberOfEvents 10000000
set LHCGenerator:RandomNumberGenerator:Seed 31122001
set LHCGenerator:DebugLevel 1
set LHCGenerator:PrintEvent 10
set LHCGenerator:MaxErrors 100000

##################################################
# Tevatron physics parameters (override defaults) 
##################################################
set LHCGenerator:EventHandler:BeamB /Herwig/Particles/pbar-

##################################################
#  Need to use an NLO PDF
##################################################
set /Herwig/Particles/p+:PDF    /Herwig/Partons/MRST-NLO
set /Herwig/Particles/pbar-:PDF /Herwig/Partons/MRST-NLO

##################################################
#  and strong coupling
##################################################
create Herwig::O2AlphaS O2AlphaS 
set /Herwig/Model:QCD/RunningAlphaS O2AlphaS

##################################################
#  Setup the POWHEG shower
##################################################
cd /Herwig/Shower
# use the general recon for now
set KinematicsReconstructor:ReconstructionOption General
# create the Powheg evolver and use it instead of the default one
create Herwig::PowhegEvolver PowhegEvolver HwPowhegShower.so
set ShowerHandler:Evolver PowhegEvolver
set PowhegEvolver:ShowerModel ShowerModel
set PowhegEvolver:SplittingGenerator SplittingGenerator
set PowhegEvolver:MECorrMode 0
# create and use the Drell-yan hard emission generator
create Herwig::DrellYanHardGenerator DrellYanHardGenerator
set DrellYanHardGenerator:ShowerAlpha AlphaQCD
insert PowhegEvolver:HardGenerator 0 DrellYanHardGenerator
# create and use the gg->H hard emission generator
create Herwig::GGtoHHardGenerator GGtoHHardGenerator
set GGtoHHardGenerator:ShowerAlpha AlphaQCD
insert PowhegEvolver:HardGenerator 0 GGtoHHardGenerator
set PowhegEvolver:IntrinsicPtGaussian 1.9*GeV

##################################################
#  Create the Herwig analysis
##################################################
cd /Herwig/Generators
create ThePEG::RivetAnalysis /Herwig/Analysis/RivetAnalysis RivetAnalysis.so
insert LHCGenerator:AnalysisHandlers 0 /Herwig/Analysis/RivetAnalysis
