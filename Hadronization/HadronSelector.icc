// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the HadronsSelector class.
//

namespace Herwig {


inline HadronSelector::HadronSelector() :
  _PwtDquark( 1.0 ),
  _PwtUquark( 1.0 ),
  _PwtSquark( 1.0 ),
  _PwtCquark( 1.0 ),
  _PwtBquark( 1.0 ),
  _PwtDIquark( 1.0 ),
  _SngWt( 1.0 ),
  _DecWt( 1.0 ),
  _Pwt( NumFlavs+1 ),
  _ClusterDKMode(0),
  _trial(0)
{}

inline HadronSelector::HadronSelector(const HadronSelector & x)
  : ThePEG::HandlerBase(x),
    _PwtDquark( x._PwtDquark ),
    _PwtUquark( x._PwtUquark ),
    _PwtSquark( x._PwtSquark ),
    _PwtCquark( x._PwtCquark ),
    _PwtBquark( x._PwtBquark ),
    _PwtDIquark( x._PwtDIquark ),
    _SngWt( x._SngWt ),
    _DecWt( x._DecWt ),
    _Pwt( x._Pwt ),
    _ClusterDKMode(x._ClusterDKMode),
    _trial(x._trial)
{
  for(int i = D; i<BB; i++)
    for(int j = D; j<BB; j++)
      _table[i][j] = x._table[i][j];
}

inline IBPtr HadronSelector::clone() const {
  return new_ptr(*this);
}

inline IBPtr HadronSelector::fullclone() const {
  return new_ptr(*this);
}

inline void HadronSelector::doinit() throw(InitException) {
  ThePEG::HandlerBase::doinit();
  initialize();
}

inline double HadronSelector::pwtDquark() const {return _PwtDquark; }
inline double HadronSelector::pwtUquark() const { return _PwtUquark; }
inline double HadronSelector::pwtSquark() const { return _PwtSquark; }
inline double HadronSelector::pwtCquark() const { return _PwtCquark; }
inline double HadronSelector::pwtBquark() const { return _PwtBquark; }
inline double HadronSelector::pwtDIquark() const { return _PwtDIquark; }

}
