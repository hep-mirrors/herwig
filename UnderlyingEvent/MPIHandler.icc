// -*- C++ -*-
//
// MPIHandler.icc is a part of Herwig++ - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig++ is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the MPIHandler class.
//
namespace Herwig {

inline tEHPtr MPIHandler::eventHandler() const {
  return theHandler;
}

inline bool MPIHandler::beamOK() const {
  return (HadronMatcher::Check(*eventHandler()->incoming().first)  &&
	  HadronMatcher::Check(*eventHandler()->incoming().second) );
}


inline const MPIHandler::SubHandlerList &
MPIHandler::subProcesses() const {
  return theSubProcesses;
}

inline MPIHandler::SubHandlerList &
MPIHandler::subProcesses(){
  return theSubProcesses;
}

inline const MPIHandler::ProcessHandlerList &
MPIHandler::processHandlers() const {
  return theProcessHandlers;
}

inline MPIHandler::ProcessHandlerList &
MPIHandler::processHandlers(){
  return theProcessHandlers;
}

inline const MPIHandler::CutsList &
MPIHandler::cuts() const {
  return theCuts;
}

inline MPIHandler::CutsList &
MPIHandler::cuts(){
  return theCuts;
}


inline int MPIHandler::Algorithm() const {
  return theAlgorithm;
}

inline int MPIHandler::statLevel() const {
  return eventHandler()->statLevel();
}

inline unsigned int MPIHandler::multiplicity() const {
  return theMultiplicities.select(UseRandom::rnd());
}

inline tStdXCombPtr MPIHandler::generate(unsigned int sel) {
  //generate a certain process
  if(sel+1 > processHandlers().size())
    throw Exception() << "MPIHandler::generate called with argument out of range"
                      << Exception::runerror;

  return processHandlers()[sel]->generate();
}

inline IBPtr MPIHandler::clone() const {
  return new_ptr(*this);
}

inline IBPtr MPIHandler::fullclone() const {
  return new_ptr(*this);
}
  /*Functions for the integrand struct*/
inline Eikonalization::Eikonalization(tMPIHPtr handler, CrossSection xsec, int option)
    : theHandler(handler), theUneikXSec(xsec), theoption(option) {}

}
